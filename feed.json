{
  "version": "https://jsonfeed.org/version/1",
  "title": "griffa.dev",
  "home_page_url": "https://griffa.dev",
  "feed_url": "https://griffa.dev/feed/feed.json",
  "description": "Tutorials and blog posts on web technologies.",
  "author": {
    "name": "George Griffiths",
    "url": "https://griffa.dev/about"
  },
  "items": [{
      "id": "https://griffa.dev/posts/getting-into-coding-how-to-get-started-(2023)/",
      "url": "https://griffa.dev/posts/getting-into-coding-how-to-get-started-(2023)/",
      "title": "Getting into Coding - How to get started (2023)",
      "tags": ["Learning","Programming"],
      "summary": "A collection of stories, career paths, links and resources that I have collated from colleagues and my own experiences to help those who ask me how to get into programming.",
      "content_html": "<p>If I could sum up this article series in short it would be: To get into programming:</p>\n<ul>\n<li>There is no one path</li>\n<li>Degrees don't matter</li>\n<li>&quot;Find the fun&quot;</li>\n<li>There's a heck of a lot of resources out there</li>\n<li>The best way to learn programming is to solve problems that you have experienced.</li>\n</ul>\n<p>If you want to skip the waffle and just get links to stuff, skip straight to <a href=\"/posts/getting-into-coding-resources/\">part 3: Resources</a>.</p>\n<p>Part 2 contains a description of different career paths: <a href=\"/posts/getting-into-coding-career-paths/\">Getting into Coding - Career paths</a>.</p>\n<h2 id=\"a-little-about-me\">A little about me <a class=\"direct-link\" href=\"#a-little-about-me\" aria-label=\"a little about me\"><span class=\"copy-link\"></span></a></h2>\n<blockquote>\n<p>Just a heads up, my writing style is very informal, I like to write as if i'm just having a chat.</p>\n</blockquote>\n<p>I'm currently employed as a Lead Frontend Developer at Immersive Labs, It's my 3rd Software engineering role, previously at IBM and IDBS (I only work at companies beginning with I apparently), hopefully some of the information below might be helpful in getting started in the industry. Whilst I work as as Frontend developer right now I get just as much out of writing any piece of code, it all comes down to enjoying problem solving.<br>\nBy problem solving I also don't mean complex maths problems, that can be part of it if you want it to be, but programming does not mean maths, unless you want it to.</p>\n<p>In high school I enjoyed building out crappy websites, they were poorly designed and poorly implemented but I tinkered with HTML and pasted snippets of JavaScript and JQuery that I didn't understand into the websites. But my &quot;official&quot; intro to programming was in 2012 when I started a Computer Science degree. This was a great intro into the wider world of software development. This introduced me to programming fundamentals, I was learning about Data structures and algorithms and learning how to build software in Java.</p>\n<p>A degree is by no means the only way into programming, and to be honest it's probably not even the best way. I learnt most of my useful skills on the job or self taught, my degree just gave me structure.</p>\n<p>What's funny about my degree is, it wasn't part of a big plan, I didn't even really know what Computer Science was, I liked playing games and messing about on a computer. But after a few assignments I got hooked on programming. During the first few months I had no idea what I was doing, when you are learning the low level programming concepts it's hard to imagine how adding numbers together or <a href=\"https://www.w3schools.com/java/java_polymorphism.asp\" rel=\"noopener\" target=\"_blank\">describing two animals and printing the noises they make to the screen</a> can get you to building complex software, but it can, it's all about building knowledge on-top of existing knowledge.</p>\n<p>During my degree when we were learning about web technologies I had a bit of a step up on others because of all the tinkering I'd done when I was younger. This has made me realize that I think the most important thing for being successful in programming is finding something that you enjoy and finding problems to solve that are interesting to <em>you</em> (the you is important i'll get back to this).</p>\n<p>In this article series I'll discuss some of the different paths into programming from stories i've collated from colleagues, as well as my own experiences.</p>\n<h2 id=\"types-of-programming-languages\">Types of programming languages <a class=\"direct-link\" href=\"#types-of-programming-languages\" aria-label=\"types of programming languages\"><span class=\"copy-link\"></span></a></h2>\n<blockquote>\n<p>Does it matter what language I learn first? No not really, most programming concepts are entirely applicable regardless of the language. In particular the fundamentals. Learning the second language once you have some experience and projects under your belt is easier!</p>\n</blockquote>\n<p>You'll see programming languages be discussed as <code>high</code> or <code>low</code> level:</p>\n<ul>\n<li>\n<p><code>low</code>: Typically lends itself to more experienced engineers or those which want to grasp the pure fundamentals of how a piece of software ends up running on a piece of hardware. You have to think a lot more about managing memory allocation.</p>\n</li>\n<li>\n<p><code>high</code>: Languages that are more typically taught to beginners to programming, these can massively range too in their ability to expose low level programming concepts.</p>\n</li>\n<li>\n<p>High level languages examples: JavaScript, C#, Java, python, ruby, go.</p>\n</li>\n<li>\n<p>Low level languages examples: C, Assembly.</p>\n</li>\n</ul>\n<blockquote>\n<p>Because programmers can never agree on anything you will find that what some people consider a low level language is high level to another.</p>\n</blockquote>\n<p>Languages that sort of sit in the middle: C++, Rust.</p>\n<p>Programming languages also can be broadly split into another two camps: <code>compiled</code> vs <code>interpreted languages</code>.</p>\n<ul>\n<li>\n<p>A compiled language requires a compiler than converts the &quot;code that you write&quot; into another format <em>before</em> it can be executed and run.</p>\n</li>\n<li>\n<p>In an interpreted language source code the developer writes can be executed directly. There is a little more to it as the code still ultimately does get transformed but it happens at runtime &quot;just in time&quot;.</p>\n</li>\n<li>\n<p>Compiled languages: C++, Java, Rust, C#</p>\n</li>\n<li>\n<p>Interpreted languages: JavaScript, ruby, python, PHP</p>\n</li>\n</ul>\n<p>When getting started for the first time you might find it easier to do some tutorials on Interpreted languages to begin with. However, with the quality of online tutorials out there even with a compiled language it might be a while before you even have to work with a compiler, so just pick something!</p>\n<p>Python is one of the most prolific &quot;first time&quot; languages.</p>\n<p>But equally Java was my first programming language that I was taught, which is compiled, which was also a good learning experience, but compilers do complicate things a little, potential risk for getting overwhelmed initially.</p>\n<p>There is a third way to categorize programming languages <code>static</code> vs <code>dynamic</code> typing. It is a little too much to go into now, but some examples: <code>Java</code> has static types whilst python and JavaScript has <code>dynamic</code> types. One of the reasons Java can be a great first language is that static types can really help you understand programming fundamentals and help with debugging errors. Doing a mix of both to see the differences relatively early on might be a nice idea.</p>\n<p>JavaScript also has a wealth of programming tutorials out there.</p>\n<p>If you want to understand some context into what you might use a language for in a job check out <a href=\"/posts/getting-into-coding-career-paths/\">part 2</a></p>\n<p>If you are keen to dive into links for getting started, remember <a href=\"/posts/getting-into-coding-resources/\">part 3: Resources</a> is all that!</p>\n<h2 id=\"how-do-programmers-write-code%3F\">How do programmers write code? <a class=\"direct-link\" href=\"#how-do-programmers-write-code%3F\" aria-label=\"how do programmers write code%3F\"><span class=\"copy-link\"></span></a></h2>\n<p>There are a few things which are more or less universal in programming which gaining an understanding of at some point is a good idea.</p>\n<p>You don't have to do this first, in fact I'd probably come back to learning these, once you've cut your teeth on some initial tutorials or projects. But worth a note down at least.</p>\n<ul>\n<li><code>IDE</code>: An IDE (Integrated development environment) is a fancy name for a code editor. I recommend <a href=\"https://code.visualstudio.com/\" rel=\"noopener\" target=\"_blank\">VS Code</a>. Some languages benefit from more specialized tooling though. Many coding education sites will embed IDE's into them so you don't have to download any software to learn.</li>\n<li><code>Version control</code>: Ever lost some work because you deleted it or your hard drive got corrupted? This is why we use version control software to write code. It's also what allows developers to collaborate and review each others code.</li>\n<li><code>Git</code>: Git is an implementation of version control, there is (usually) a <code>main</code> branch of code, and developers checkout their own version into a <code>branch</code>, make changes and merge their changes back into <code>main</code>. Git is the defacto standard and the only one worth learning about. Find some tutorials when the time comes!</li>\n<li><code>GitHub</code>: GitHub is a website that hosts Git repositories that contain code. Git without a remote server for hosting the code wouldn't be that useful! Get an account and learn how it works at some point, it's free for most uses.</li>\n</ul>\n<h2 id=\"don't-trust-every-opinion-online\">Don't trust every opinion online <a class=\"direct-link\" href=\"#don't-trust-every-opinion-online\" aria-label=\"don't trust every opinion online\"><span class=\"copy-link\"></span></a></h2>\n<p>Programmers can be very opinionated, you will often see takes like &quot;this is the best way to do something&quot;, &quot;X is bad&quot;, like everything, there are tradeoffs with all things, when you are getting started try not to get too hung up on doing things in one way because someone told you that's is the best way.</p>\n<p>Whilst there are best practices, Experiment and try things out. The best way to learn &quot;Best practices&quot; is just through coding more and exposing yourself to different kinds of problems.</p>\n<blockquote>\n<p>Although, if you see code examples where they name variables with a single letter all over the place, this is bad code. Your code should be descriptive, if only so that future you can understand WTF it's doing. Also write code comments for complex things.</p>\n</blockquote>\n<h2 id=\"find-the-fun\">Find the fun <a class=\"direct-link\" href=\"#find-the-fun\" aria-label=\"find the fun\"><span class=\"copy-link\"></span></a></h2>\n<p>Earlier I mentioned finding something interesting to <em>you</em>, this is important I think, not everyone likes the same things, some people love to build games, some like websites, some like servers, some like working with data, some like managing servers and some like making tools to make other developers lives easier. When starting out it might be a good idea to try a few things out.</p>\n<p>In general it might be good to:</p>\n<ul>\n<li>Start with programming tutorials</li>\n<li>Work your way up into programming tutorials that build out full projects.</li>\n<li>Build your own projects, <a href=\"https://www.youtube.com/watch?v=KauRmlffjqc\" rel=\"noopener\" target=\"_blank\">it can be something really dumb</a></li>\n<li>Try out building different types of apps, from command line tools to web apps</li>\n<li>Don't be afraid to abandon projects, that is perfectly fine, I do it all the time. The time spent coding will only make you better for the next thing you work on.</li>\n</ul>\n<p>Over the years I've &quot;found the fun&quot; in some unexpected places as I've worked on more problems. For example I really love Testing, of all kinds. Testing is a whole huge discipline within programming, not one to get into now but every programmer eventually will run into it.</p>\n<p>If you want a nice intro some example problems that you could learn how to solve check out <a href=\"https://automatetheboringstuff.com/\" rel=\"noopener\" target=\"_blank\">Automate the Boring Stuff with Python</a>, it'll teach you some Python and give you a feel for programming.<br>\nIf you go for this it might be an idea to pair that book with some interactive learning on <a href=\"https://www.freecodecamp.org/news/tag/python/\" rel=\"noopener\" target=\"_blank\">Free Code Camp</a>.</p>\n<h2 id=\"build-your-own-curriculum\">Build your own curriculum <a class=\"direct-link\" href=\"#build-your-own-curriculum\" aria-label=\"build your own curriculum\"><span class=\"copy-link\"></span></a></h2>\n<p>I talked about my degree earlier in the article, there are so many resources out there now that you could quite happily build yourself an extensive self-guided curriculum. It would also have the benefit of being more up to date than many university curriculums.</p>\n<blockquote>\n<p>This sounds like a lot of work but there are many resources out there, i'll link a few in part 3.</p>\n</blockquote>\n<p>In a computer science degree you will general find that modules fall into two camps &quot;theoretical&quot; &quot;practical&quot;.</p>\n<p>Examples:</p>\n<ul>\n<li>'Programming fundamentals' and 'Data structure and algorithms' I'd class as theoretical</li>\n<li>Where as 'Mobile/Web app development' you'd most likely be building out a projects.</li>\n<li>Something like &quot;How does Cloud computing work&quot; might sit somewhere in the middle where you could learn about AWS and how it can make managing infrastructure easier (and harder at the same time).</li>\n</ul>\n<p>When learning to code I recommend planning out things to learn that fit into practical vs theoretical and try to introduce yourself to different things and see what you take a liking to. If something isn't working for you, try something else. I will say the first few tutorials might get overwhelming quickly. I remember the summer before uni trying to self-teach myself Java from a book and not really understanding anything. If it's not clicking it equally might be a shit tutorial, find what works for you, books do not work for me.</p>\n<p>Sometimes you can hit a wall, just like you might at school, and you can divert your attention to something else instead and loop back around to the thing that is causing you trouble. You will also be flexing different muscles, creating a project from scratch is very different from learning computer science theory or implementing an algorithm.</p>\n<p>Try not to take on too much though, it's a fine balance between being overwhelmed and missing out on breadth of knowledge. Branch out once you start to feel like you're not sure what to do next, or you feel you have hit a roadblock in your learning, try something different.</p>\n<p>For example; stuck building a website and it's not going well? why not try to build a command line app or a server, its easier than it sounds to get something up a running!</p>\n<p>Check out part 3 for some project ideas.</p>\n<h2 id=\"bootcamps-and-courses\">Bootcamps and courses <a class=\"direct-link\" href=\"#bootcamps-and-courses\" aria-label=\"bootcamps and courses\"><span class=\"copy-link\"></span></a></h2>\n<p>Much like degrees, bootcamps and paid for courses are <em>not</em> a hard requirement, there are many developers that have landed jobs by purely self guided learning. For some people the structure is great, for others not so much.</p>\n<p>If you are considering doing a Bootcamp or paid course I would strongly recommend self guided learning first to be sure that you enjoy coding before making an monetary commitments. The resources in part 3 of this series should help with that.</p>\n<p>A colleague of mine has an article similar to this one that is a treasure trove of information and insights, whilst some of the technology learnt may not be applicable to everyone the key points made are still very relevant: <a href=\"https://www.cookieshq.co.uk/posts/how-i-ianded-a-web-development-role-with-no-formal-experience\" rel=\"noopener\" target=\"_blank\">How I landed a web development role with no formal experience</a>.</p>\n<p>Another colleague of mine recently did a fantastic talk on her experiences of getting a job as a programmer, here is a YouTube video of that talk, I highly recommend it!</p>\n<div class=\"video-size\">\n    <div class=\"video-wrapper\">\n        <lite-youtube class=\"video\" videoid=\"LmhiiGMxM0U\" style=\"background-image: url('https://i.ytimg.com/vi/LmhiiGMxM0U/hqdefault.jpg');\">\n            <a rel=\"noopener\" onclick=\"('customElements' in window) && event.preventDefault()\" title=\"Play Video\" class=\"no-js\" target=\"_blank\" href=\"https://youtube.com?w=LmhiiGMxM0U\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\">\n                <g transform=\"translate(-339 -150.484)\">\n                    <path fill=\"var(--White, #fff)\" d=\"M-1978.639,24.261h0a1.555,1.555,0,0,1-1.555-1.551V9.291a1.555,1.555,0,0,1,1.555-1.551,1.527,1.527,0,0,1,.748.2l11.355,6.9a1.538,1.538,0,0,1,.793,1.362,1.526,1.526,0,0,1-.793,1.348l-11.355,6.516A1.52,1.52,0,0,1-1978.639,24.261Z\" transform=\"translate(2329 150.484)\"/>\n                    <path fill=\"var(--Primary, #000)\" d=\"M16.563.563a16,16,0,1,0,16,16A16,16,0,0,0,16.563.563Zm7.465,17.548L12.672,24.627a1.551,1.551,0,0,1-2.3-1.355V9.853a1.552,1.552,0,0,1,2.3-1.355l11.355,6.9A1.553,1.553,0,0,1,24.027,18.111Z\" transform=\"translate(338.438 149.922)\" />\n                </g>\n            </svg>\n        </a>\n        </lite-youtube>\n    </div>\n</div>\n<p>When it comes to degrees, you can always do one later, many places can offer part time degrees if you feel like that's a route you want to go down once you're in your first few years of working in industry.</p>\n<h2 id=\"summary\">Summary <a class=\"direct-link\" href=\"#summary\" aria-label=\"summary\"><span class=\"copy-link\"></span></a></h2>\n<p>There is always more to learn and imposter syndrome is a real thing in tech, at every level, you'll get stuck, but try to find other things to focus on instead, programming is like any skill/art, like learning an instrument, it takes time and a bit of passion.</p>\n<p>Next up let's take a look at some different career paths within programming and how those fit together with specific programming languages.</p>\n",
      "date_published": "2023-03-17T00:00:00+00:00"
    },{
      "id": "https://griffa.dev/posts/getting-into-coding-resources/",
      "url": "https://griffa.dev/posts/getting-into-coding-resources/",
      "title": "Getting into Coding - Resources",
      "tags": ["Learning","Programming"],
      "summary": "A long list of curated resources that I&#39;ve sourced from my experiences and from my colleagues.",
      "content_html": "<h2 id=\"resources\">Resources <a class=\"direct-link\" href=\"#resources\" aria-label=\"resources\"><span class=\"copy-link\"></span></a></h2>\n<p>If you haven't checked out part 1 and 2 of this series I'd recommend it for some context. This article is a big brain dump of collated links by myself and colleagues.</p>\n<h2 id=\"tutorials-and-courses\">Tutorials and Courses <a class=\"direct-link\" href=\"#tutorials-and-courses\" aria-label=\"tutorials and courses\"><span class=\"copy-link\"></span></a></h2>\n<p>Code Academy or Free Code Camp are pretty good starting points.</p>\n<ul>\n<li><a href=\"https://www.codecademy.com/\" rel=\"noopener\" target=\"_blank\">Code Academy - Various languages</a></li>\n<li><a href=\"https://www.freecodecamp.org/\" rel=\"noopener\" target=\"_blank\">Code Academy - Free Code Camp</a></li>\n</ul>\n<p>Python is just an example on Free Code Camp, they offer many languages but it might be a good starting point.</p>\n<ul>\n<li><a href=\"https://www.freecodecamp.org/news/tag/python/\" rel=\"noopener\" target=\"_blank\">Learn python</a></li>\n</ul>\n<p>Some other cool things i've had recommended by colleagues.</p>\n<ul>\n<li><a href=\"https://automatetheboringstuff.com/\" rel=\"noopener\" target=\"_blank\">Fun book - Automate The Boring Stuff </a></li>\n<li><a href=\"https://teamtreehouse.com/\" rel=\"noopener\" target=\"_blank\">https://teamtreehouse.com/</a></li>\n<li><a href=\"https://www.theodinproject.com/\" rel=\"noopener\" target=\"_blank\">Web dev focused - https://www.theodinproject.com/</a></li>\n<li><a href=\"https://mimo.org/\" rel=\"noopener\" target=\"_blank\">Mimo &quot;Duolingo for coding&quot;</a></li>\n<li><a href=\"https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/\" rel=\"noopener\" target=\"_blank\">https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/</a></li>\n<li><a href=\"https://www.open.edu/openlearn/free-courses/full-catalogue\" rel=\"noopener\" target=\"_blank\">Free - https://www.open.edu/openlearn/free-courses/full-catalogue</a></li>\n<li><a href=\"https://pll.harvard.edu/course/cs50-introduction-computer-science?delta=0\" rel=\"noopener\" target=\"_blank\">Free - CS50: Introduction to Computer Science</a></li>\n<li><a href=\"https://watchandcode.com/\" rel=\"noopener\" target=\"_blank\">Premium - https://watchandcode.com/</a></li>\n<li><a href=\"https://launchschool.com/\" rel=\"noopener\" target=\"_blank\">Slow burn part time learning</a></li>\n<li><a href=\"https://www.udemy.com/\" rel=\"noopener\" target=\"_blank\">https://www.udemy.com/</a></li>\n<li><a href=\"https://www.nand2tetris.org/\" rel=\"noopener\" target=\"_blank\">https://www.nand2tetris.org/</a></li>\n<li><a href=\"https://aws.amazon.com/training/restart/\" rel=\"noopener\" target=\"_blank\">Learn AWS and Cloud Computing</a></li>\n</ul>\n<h2 id=\"full-roadmaps\">Full Roadmaps <a class=\"direct-link\" href=\"#full-roadmaps\" aria-label=\"full roadmaps\"><span class=\"copy-link\"></span></a></h2>\n<p>This site has opinionated and extensive Roadmaps for different developer roles, beware overwhelming information!</p>\n<ul>\n<li><a href=\"https://roadmap.sh/roadmaps\" rel=\"noopener\" target=\"_blank\">https://roadmap.sh/roadmaps</a></li>\n</ul>\n<h2 id=\"useful-tools\">Useful tools <a class=\"direct-link\" href=\"#useful-tools\" aria-label=\"useful tools\"><span class=\"copy-link\"></span></a></h2>\n<ul>\n<li><a href=\"https://git-scm.com/book/en/v2\" rel=\"noopener\" target=\"_blank\">Learn Git/Version control</a></li>\n<li><a href=\"https://code.visualstudio.com/\" rel=\"noopener\" target=\"_blank\">https://code.visualstudio.com/</a></li>\n</ul>\n<h2 id=\"frontend-specific-resources\">Frontend Specific resources <a class=\"direct-link\" href=\"#frontend-specific-resources\" aria-label=\"frontend specific resources\"><span class=\"copy-link\"></span></a></h2>\n<p>Being a Frontend developer I'm asked from time to time about resources for that specifically,<br>\nhere is are recent article list:</p>\n<ul>\n<li><a href=\"https://react.dev/learn\" rel=\"noopener\" target=\"_blank\">https://react.dev/learn</a> - I'd recommend learning React if you want to get into Frontend, but not first. Get the fundamentals down first.</li>\n<li><a href=\"https://griffa.dev/posts/how-i-learn-in-2023/\">https://griffa.dev/posts/how-i-learn-in-2023/</a></li>\n</ul>\n<h2 id=\"bootcamps\">Bootcamps <a class=\"direct-link\" href=\"#bootcamps\" aria-label=\"bootcamps\"><span class=\"copy-link\"></span></a></h2>\n<p>Here are some bootcamps my colleagues have been on.</p>\n<ul>\n<li><a href=\"https://makers.tech/\" rel=\"noopener\" target=\"_blank\">Makers</a></li>\n<li><a href=\"https://nology.io/\" rel=\"noopener\" target=\"_blank\">_nology</a></li>\n</ul>\n<h3 id=\"project-ideas\">Project ideas <a class=\"direct-link\" href=\"#project-ideas\" aria-label=\"project ideas\"><span class=\"copy-link\"></span></a></h3>\n<p>Amazing resource:</p>\n<ul>\n<li><a href=\"https://github.com/florinpop17/app-ideas\" rel=\"noopener\" target=\"_blank\">https://github.com/florinpop17/app-ideas</a></li>\n</ul>\n<p>Some high level ideas:</p>\n<ul>\n<li>Build a Command line app in Java or Python</li>\n<li>Build a static website in html/css/JavaScript</li>\n<li>Build a basic server in Python/PHP/JavaScript(Node.JS)/Java</li>\n</ul>\n<h3 id=\"coding-challenges\">Coding challenges <a class=\"direct-link\" href=\"#coding-challenges\" aria-label=\"coding challenges\"><span class=\"copy-link\"></span></a></h3>\n<p>Some of these are pretty menacing.</p>\n<ul>\n<li><a href=\"https://www.codementor.io/projects\" rel=\"noopener\" target=\"_blank\">https://www.codementor.io/projects</a></li>\n<li><a href=\"https://www.frontendmentor.io/\" rel=\"noopener\" target=\"_blank\">https://www.frontendmentor.io/</a></li>\n<li><a href=\"https://leetcode.com/\" rel=\"noopener\" target=\"_blank\">https://leetcode.com/</a></li>\n</ul>\n<h3 id=\"youtube%2Ftwitch\">YouTube/Twitch <a class=\"direct-link\" href=\"#youtube%2Ftwitch\" aria-label=\"youtube%2Ftwitch\"><span class=\"copy-link\"></span></a></h3>\n<p>YouTube and Twitch have thriving tech communities.</p>\n<ul>\n<li><a href=\"https://www.youtube.com/c/TraversyMedia\" rel=\"noopener\" target=\"_blank\">https://www.youtube.com/c/TraversyMedia</a></li>\n<li><a href=\"https://www.youtube.com/c/TheCoderCoder\" rel=\"noopener\" target=\"_blank\">https://www.youtube.com/c/TheCoderCoder</a></li>\n<li><a href=\"https://www.learnwithjason.dev/\" rel=\"noopener\" target=\"_blank\">https://www.learnwithjason.dev/</a></li>\n<li><a href=\"https://www.youtube.com/@t3dotgg\" rel=\"noopener\" target=\"_blank\">https://www.youtube.com/@t3dotgg</a></li>\n<li><a href=\"https://www.youtube.com/@ThePrimeagen\" rel=\"noopener\" target=\"_blank\">https://www.youtube.com/@ThePrimeagen</a></li>\n<li><a href=\"https://www.youtube.com/@ThePrimeTimeagen\" rel=\"noopener\" target=\"_blank\">https://www.youtube.com/@ThePrimeTimeagen</a></li>\n<li><a href=\"https://www.youtube.com/kepowob\" rel=\"noopener\" target=\"_blank\">https://www.youtube.com/kepowob</a></li>\n</ul>\n",
      "date_published": "2023-03-17T00:00:00+00:00"
    },{
      "id": "https://griffa.dev/posts/getting-into-coding-career-paths/",
      "url": "https://griffa.dev/posts/getting-into-coding-career-paths/",
      "title": "Getting into Coding - Career paths",
      "tags": ["Learning","Programming"],
      "summary": "In this part 2, I dive into some of the different programming disciplines and roles, with a view to exposing you to different programming languages.",
      "content_html": "<p>If you want to skip the waffle and just get links to stuff, skip straight to <a href=\"/posts/getting-into-coding-resources/\">part 3: Resources</a>.</p>\n<h2 id=\"different-programming-disciplines\">Different programming disciplines <a class=\"direct-link\" href=\"#different-programming-disciplines\" aria-label=\"different programming disciplines\"><span class=\"copy-link\"></span></a></h2>\n<p>There are many different roles/job titles within programming here are a few along with the general thing they do.<br>\nThere isn't an exhaustive list, just some of the roles that came to my head.</p>\n<blockquote>\n<p>Is a Software Engineer the same thing as a Developer? Yes, anyone that says otherwise is chattin' shit.</p>\n</blockquote>\n<h3 id=\"building-websites%2Fapps\">Building websites/apps <a class=\"direct-link\" href=\"#building-websites%2Fapps\" aria-label=\"building websites%2Fapps\"><span class=\"copy-link\"></span></a></h3>\n<p>In this section I'll discuss some different disciplines and some languages which tend to be used for these jobs.<br>\nThis might help with ideas for what to learn first.</p>\n<p>When you start out you don't need to think about <code>will learning X get me a job?</code>. Start out with finding what you find fun in programming. That being said, in order to do that, I think it's useful to get a general idea of the different tools/tech that might be used in different jobs.</p>\n<ul>\n<li>Frontend Developer: Builds websites in <code>HTML</code>, <code>CSS</code> and <code>JavaScript</code>. May also do some design work. You will see lots of talk about <code>React</code> and other web frameworks. too in this area. You may come across TypeScript, this a big topic, it's &quot;safer&quot; JavaScript, doesn't run directly in the browser though has to be compiled.</li>\n<li>Backend Developer: Builds the logic on the servers or tooling needed to make the site work. Example languages <code>Java</code>, <code>Python</code>, <code>Ruby</code>, <code>PHP</code>, <code>Go</code>, <code>Rust</code>, <code>C#</code>. You may come across the term APIs a lot. May work with databases using <code>SQL</code> or <code>NOSQL</code> Database tech.\n<blockquote>\n<p>For JavaScript you may come across Node.JS, this a tool for running JavaScript on the Backend e.g. servers or command line apps. So you can use JavaScript for an entire application if you wanted, making it a good potential language to learn. But don't write off everything else.</p>\n</blockquote>\n</li>\n<li>Web Developer: May be the same thing as Frontend Developer but may also do some Backend too.</li>\n<li>Full Stack Developer: does a bit of everything, though typically people still have one thing they are better at.</li>\n<li>DevOps: Some cross over with Backend developer, write tools/processes/deployment script to make applications work at scale. Example frameworks/tools/languages/techniques: <code>Python</code>, <code>Go</code>, <code>Kubernetes</code>, <code>Terraform</code>, <code>Continuous Integration</code>.</li>\n<li>Cloud Engineer: Similar to DevOps but you might find they specialize in a particular cloud provider, such as <code>AWS</code>.</li>\n<li>Database Administrator: Less common as an individual role these days, usually rolled into Backend Developer or Dev Ops. Exa,ple database language: <code>SQL</code>.</li>\n</ul>\n<p>I realise that was a hell of a lot of jargon, most of it doesn't matter, any of these programming languages would be useful when it comes to building websites/apps:</p>\n<ul>\n<li>JavaScript, Python, Java, Ruby, Go, C# (Less so), Rust,</li>\n</ul>\n<p>These were very focused on web apps because those are the most common these days, outside of mobile apps. You will find that even some desktop apps use web technologies such as Discord and Slack.</p>\n<p>In general, as someone new to programming it's probably a good idea to start out looking to Frontend and Backend development.<br>\nBut there is a shortage of people with the skills to do Cloud Engineering/Dev Ops well.</p>\n<p>If you are going to learn Frontend tech i'd recommend striking a nice balance of foundations in <code>HTML</code>, <code>CSS</code> and <code>JavaScript</code> and also learning modern techniques for building Web Apps, such as using <code>React</code>.</p>\n<h3 id=\"systems-engineers\">Systems engineers <a class=\"direct-link\" href=\"#systems-engineers\" aria-label=\"systems engineers\"><span class=\"copy-link\"></span></a></h3>\n<p>I'll confess I don't know much about this industry but it would be building tools in low level programming such as <code>C</code> or <code>Rust</code>, or maintaining super old software that never breaks or changes in old languages. Aim here is usually to have really fast or really robust code.</p>\n<h2 id=\"games-programming\">Games programming <a class=\"direct-link\" href=\"#games-programming\" aria-label=\"games programming\"><span class=\"copy-link\"></span></a></h2>\n<p>I also don't know much here but I think starting with web technologies is still a good starting point for learning games programming.</p>\n<p>I hate to say it but it's true, games dev jobs are generally paid less well partly due to supply/demand and also partly due to companies over-exploiting passion.</p>\n<ul>\n<li>Unity uses <code>C#</code></li>\n<li>Unreal engine uses <code>C++</code></li>\n<li>You can build games in <code>JavaScript</code>, <code>Java</code>, <code>python</code> etc but generally not as common.</li>\n</ul>\n<p>Whilst Unity and Unreal are more production ready solutions, if you are wanting to learn to code and do something fun writing a game in any language is a perfectly good thing to do, there will be a tutorial out there in every language!</p>\n<h3 id=\"data-scientist%2Fengineer%2Fai-research\">Data scientist/engineer/AI research <a class=\"direct-link\" href=\"#data-scientist%2Fengineer%2Fai-research\" aria-label=\"data scientist%2Fengineer%2Fai research\"><span class=\"copy-link\"></span></a></h3>\n<p><code>Python</code>, they all use <code>python</code>. Some <code>C++</code> if you need to make the code super fast, there is some cross over with Systems Engineers here.<br>\nYou may also find that a lot of Data engineers work with <code>SQL</code> databases, building queries for complex data models, or for fetching data to train AI models.</p>\n<h3 id=\"building-mobile-apps\">Building mobile apps <a class=\"direct-link\" href=\"#building-mobile-apps\" aria-label=\"building mobile apps\"><span class=\"copy-link\"></span></a></h3>\n<p>There is a lot of cross over here with building for the web, in fact there are some tools which just use web technology to build mobile apps.<br>\nIn general though</p>\n<ul>\n<li>Mobile App Developer: Builds apps for Apple and/or Android devices. iOS: <code>Swift/C#</code> Android: <code>Java/Kotlin</code></li>\n</ul>\n<p>You can also use <code>JavaScript</code> to build mobile apps, this is typically by using a framework like <code>React Native</code></p>\n<h2 id=\"getting-that-first-job\">Getting that first job <a class=\"direct-link\" href=\"#getting-that-first-job\" aria-label=\"getting that first job\"><span class=\"copy-link\"></span></a></h2>\n<p>The tech market in 2023 is definitely un-certain, but I don't think this should stop anyone from trying to get into the industry, it might be harder to find a company willing to take a risk on developers without any commercial experience, but equally, when you do find ones are that are, it's likely that they will do so because they want to invest in you and your learning.</p>\n<p>Once you've started to gain confidence in your abilities and have created a few projects, it's never too early to start hunting (and applying) for entry level positions, typically these will be labelled as &quot;Junior&quot; or &quot;Apprentice&quot;. There are also grad schemes from larger companies but many of the large tech companies are still stuck in the past with requiring university degrees, albeit not always Computer Science ones.</p>\n<p>I was lucky enough during my degree to have a year in industry where I worked at IDBS (who I stayed with for 4 years!). I can attribute the majority of my knowledge to this first job. This year in industry was very much like an apprenticeship, and the good news is apprenticeship schemes are becoming more common, in particular in the UK, so definitely search for those.</p>\n<h2 id=\"summary\">Summary <a class=\"direct-link\" href=\"#summary\" aria-label=\"summary\"><span class=\"copy-link\"></span></a></h2>\n<p>Finally let's take a look in the next section a big list of resource i've gathered for where to go next.</p>\n",
      "date_published": "2023-03-17T00:00:00+00:00"
    },{
      "id": "https://griffa.dev/posts/how-i-learn-in-2023/",
      "url": "https://griffa.dev/posts/how-i-learn-in-2023/",
      "title": "How I learn in 2023",
      "tags": ["JavaScript","HTML","CSS","Learning"],
      "summary": "A collection of links and resources that I use or have used in the past to help me learn",
      "content_html": "<p>Sometimes I get asked about places where you can go to learn about different topics. This post is my attempt to collate some of the resource that I've found helpful in my journey through software engineering. Some of these might also just be tools that I've used or I think are cool.</p>\n<p>These links aren't the full extent of the things I've been learning. I think the best way to learn new things is to be inquisitive on the job and try to get exposure to different aspects of software not just Frontend or Backend alone. Don't be afraid to dive in head first and just experiment and ask questions!</p>\n<blockquote>\n<p>I may continue to update this list over time.</p>\n</blockquote>\n<h2 id=\"html%2Fcss\">HTML/CSS <a class=\"direct-link\" href=\"#html%2Fcss\" aria-label=\"html%2Fcss\"><span class=\"copy-link\"></span></a></h2>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Learn\" rel=\"noopener\" target=\"_blank\">https://developer.mozilla.org/en-US/docs/Learn</a></li>\n<li><a href=\"https://www.youtube.com/@KevinPowell\" rel=\"noopener\" target=\"_blank\">https://www.youtube.com/@KevinPowell</a></li>\n<li><a href=\"https://www.htmhell.dev/\" rel=\"noopener\" target=\"_blank\">https://www.htmhell.dev/</a></li>\n<li><a href=\"https://www.htmhell.dev/tips/\" rel=\"noopener\" target=\"_blank\">https://www.htmhell.dev/tips/</a></li>\n<li><a href=\"https://piccalil.li/tutorials/\" rel=\"noopener\" target=\"_blank\">https://piccalil.li/tutorials/</a></li>\n<li><a href=\"https://thecsspodcast.libsyn.com/\" rel=\"noopener\" target=\"_blank\">https://thecsspodcast.libsyn.com/</a></li>\n<li><a href=\"https://flukeout.github.io/\" rel=\"noopener\" target=\"_blank\">https://flukeout.github.io/</a></li>\n<li><a href=\"https://cssgridgarden.com/\" rel=\"noopener\" target=\"_blank\">https://cssgridgarden.com/</a></li>\n</ul>\n<h2 id=\"javascript%2Ftypescript\">JavaScript/TypeScript <a class=\"direct-link\" href=\"#javascript%2Ftypescript\" aria-label=\"javascript%2Ftypescript\"><span class=\"copy-link\"></span></a></h2>\n<ul>\n<li><a href=\"https://beta.reactjs.org/\" rel=\"noopener\" target=\"_blank\">https://beta.reactjs.org/</a></li>\n<li><a href=\"https://www.youtube.com/@jherr\" rel=\"noopener\" target=\"_blank\">https://www.youtube.com/@jherr</a></li>\n<li><a href=\"https://www.youtube.com/@WebDevSimplified\" rel=\"noopener\" target=\"_blank\">https://www.youtube.com/@WebDevSimplified</a></li>\n<li><a href=\"https://www.youtube.com/@mattpocockuk\" rel=\"noopener\" target=\"_blank\">Typescript videos</a></li>\n</ul>\n<h2 id=\"tools\">Tools <a class=\"direct-link\" href=\"#tools\" aria-label=\"tools\"><span class=\"copy-link\"></span></a></h2>\n<ul>\n<li><a href=\"https://vitejs.dev/\" rel=\"noopener\" target=\"_blank\">https://vitejs.dev/</a> - Webpack alternative but better</li>\n</ul>\n<h2 id=\"testing\">Testing <a class=\"direct-link\" href=\"#testing\" aria-label=\"testing\"><span class=\"copy-link\"></span></a></h2>\n<ul>\n<li><a href=\"https://vitest.dev/\" rel=\"noopener\" target=\"_blank\">https://vitest.dev/</a></li>\n<li><a href=\"https://playwright.dev/docs/writing-tests\" rel=\"noopener\" target=\"_blank\">https://playwright.dev/docs/writing-tests</a></li>\n<li><a href=\"https://codecept.io/\" rel=\"noopener\" target=\"_blank\">https://codecept.io/</a></li>\n<li><a href=\"https://www.cypress.io/\" rel=\"noopener\" target=\"_blank\">https://www.cypress.io/</a></li>\n<li><a href=\"https://modern-web.dev/docs/test-runner/overview/\" rel=\"noopener\" target=\"_blank\">https://modern-web.dev/docs/test-runner/overview/</a></li>\n<li><a href=\"https://jestjs.io/\" rel=\"noopener\" target=\"_blank\">Jest - Only if imy forced to</a></li>\n</ul>\n<h2 id=\"accessibility\">Accessibility <a class=\"direct-link\" href=\"#accessibility\" aria-label=\"accessibility\"><span class=\"copy-link\"></span></a></h2>\n<ul>\n<li><a href=\"https://web.dev/learn/accessibility/\" rel=\"noopener\" target=\"_blank\">https://web.dev/learn/accessibility/</a></li>\n<li><a href=\"https://dequeuniversity.com/\" rel=\"noopener\" target=\"_blank\">https://dequeuniversity.com/</a></li>\n<li><a href=\"https://practical-accessibility.today/\" rel=\"noopener\" target=\"_blank\">https://practical-accessibility.today/</a></li>\n</ul>\n<h2 id=\"design%2Fdesign-systems\">Design/Design systems <a class=\"direct-link\" href=\"#design%2Fdesign-systems\" aria-label=\"design%2Fdesign systems\"><span class=\"copy-link\"></span></a></h2>\n<ul>\n<li><a href=\"https://danmall.com/products/design-system-email-course/\" rel=\"noopener\" target=\"_blank\">https://danmall.com/products/design-system-email-course/</a></li>\n<li><a href=\"https://www.youtube.com/@DanMallTeaches\" rel=\"noopener\" target=\"_blank\">https://www.youtube.com/@DanMallTeaches</a></li>\n<li><a href=\"https://www.youtube.com/@DesignCourse\" rel=\"noopener\" target=\"_blank\">https://www.youtube.com/@DesignCourse</a></li>\n</ul>\n<h2 id=\"courses\">Courses <a class=\"direct-link\" href=\"#courses\" aria-label=\"courses\"><span class=\"copy-link\"></span></a></h2>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=I6ypD7qv3Z8\" rel=\"noopener\" target=\"_blank\">Free 14 hour awesome course on TypeScript/GraphQL/React</a></li>\n<li><a href=\"https://frontendmasters.com/guides/learning-roadmap/\" rel=\"noopener\" target=\"_blank\">Frontend masters</a> is great if you can get work to pay for a license.</li>\n</ul>\n<h2 id=\"discovering-new-stuff\">Discovering new stuff <a class=\"direct-link\" href=\"#discovering-new-stuff\" aria-label=\"discovering new stuff\"><span class=\"copy-link\"></span></a></h2>\n<p>There are so many tools and resources out there that It can be hard to keep up, here's some of the things that I do.</p>\n<ul>\n<li><a href=\"https://dev.to/\" rel=\"noopener\" target=\"_blank\">https://dev.to/</a></li>\n<li><a href=\"https://www.learnwithjason.dev/episodes\" rel=\"noopener\" target=\"_blank\">Learn With Jason - Excellent Long Form Videos</a></li>\n<li><a href=\"https://www.youtube.com/channel/UCnUYZLuoy1rq1aVMwx4aTzw\" rel=\"noopener\" target=\"_blank\">Google Chrome Developers</a></li>\n<li><a href=\"https://web.dev/\" rel=\"noopener\" target=\"_blank\">https://web.dev/</a></li>\n<li><a href=\"https://www.youtube.com/@TraversyMedia\" rel=\"noopener\" target=\"_blank\">https://www.youtube.com/@TraversyMedia</a></li>\n</ul>\n<h2 id=\"educational-entertainment\">Educational Entertainment <a class=\"direct-link\" href=\"#educational-entertainment\" aria-label=\"educational entertainment\"><span class=\"copy-link\"></span></a></h2>\n<p>Some of this falls into discovering new stuff too.</p>\n<ul>\n<li><a href=\"https://briefs.video/\" rel=\"noopener\" target=\"_blank\">https://briefs.video/</a></li>\n<li><a href=\"https://syntax.fm/\" rel=\"noopener\" target=\"_blank\">https://syntax.fm/</a></li>\n<li><a href=\"https://www.youtube.com/@t3dotgg\" rel=\"noopener\" target=\"_blank\">https://www.youtube.com/@t3dotgg</a></li>\n<li><a href=\"https://www.youtube.com/@ThePrimeTimeagen\" rel=\"noopener\" target=\"_blank\">https://www.youtube.com/@ThePrimeTimeagen</a></li>\n</ul>\n<h2 id=\"twitter-accounts\">Twitter Accounts <a class=\"direct-link\" href=\"#twitter-accounts\" aria-label=\"twitter accounts\"><span class=\"copy-link\"></span></a></h2>\n<p>Twitter used to be great for developer stuff but many people have left twitter after Elon.</p>\n<p>My follow list might give you some starting points, but not all are tech, it's not curated, but bio's should help with finding more stuff. <a href=\"https://twitter.com/griffadev/following\" rel=\"noopener\" target=\"_blank\">https://twitter.com/griffadev/following</a></p>\n",
      "date_published": "2023-01-31T00:00:00+00:00"
    },{
      "id": "https://griffa.dev/posts/how-trip-yourself-up-with-react-hooks-and-break-production./",
      "url": "https://griffa.dev/posts/how-trip-yourself-up-with-react-hooks-and-break-production./",
      "title": "How trip yourself up with React hooks and break production.",
      "tags": ["JavaScript","React"],
      "summary": "Recently I started working on a new React codebase, here is a story of how I &quot;corrected&quot; some React hooks code and broke a feature in production, and then went on vacation.",
      "content_html": "<p>React is so ubiquitous now it's pretty difficult to avoid it if you want to be employed and working in Web application development. React hooks in some ways pushed the ecosystem forward but in other ways have made React applications harder to debug and easier to subtly break things without realising, if you stop following the rules.</p>\n<p>In this article is a story and some lessons about how I &quot;corrected&quot; some React code to follow the &quot;rules&quot; of hooks and broke the feature because the existing code happened to violate some of the other React &quot;rules&quot;, in a way that was not immediately obvious.</p>\n<h2 id=\"writing-about-react-is-scary\">Writing about React is scary <a class=\"direct-link\" href=\"#writing-about-react-is-scary\" aria-label=\"writing about react is scary\"><span class=\"copy-link\"></span></a></h2>\n<p>Whenever I write a React article I question whether or not it is a good idea to do so because with its popularity can come some unhelpful comments and responses. To get this out of the way early here some replies on some previous comments I've received on React articles:</p>\n<ul>\n<li>&quot;Your team just wrote sloppy react code. End of story.&quot; - I'd hate to work on a team with this person, jeez.</li>\n<li>&quot;React is NOT a framework, it’s a JavaScript library.&quot; - I call it a framework just because it annoys people, for some reason, and I will continue to do so.</li>\n<li>&quot;This is just an opinion piece&quot; - ????? It's a blog post?</li>\n</ul>\n<p>Anyways... to the article, I promise the above is the only sarcastic/cynical part of the post and I think that there is some useful learning in this story to help me grow and hopefully others can find it useful to when working with the React framework.</p>\n<h2 id=\"the-scenario\">The scenario <a class=\"direct-link\" href=\"#the-scenario\" aria-label=\"the scenario\"><span class=\"copy-link\"></span></a></h2>\n<p>The codebase that I work on is not open source, however the issue that I ran into could be extracted distilled into some example code as the core problems with the code centre around using some of the built in React hooks such as 'useMemo' and handling the mutation of state.</p>\n<p>To demonstrate the problem I developed a completely unoriginal Todo-list example, hopefully the mundaneness of the code will help to skip over the boring bits and get to the issues with the code more quickly!</p>\n<p>To demonstrate the problem with the code I have developed 3 examples all implementing the same Todo application:</p>\n<ul>\n<li>one with the original implementation &quot;before&quot; I refactored and broke it</li>\n<li>one with my refactor which broke the code in a specific way</li>\n<li>one with the changes I'd probably make in addition to my original refactor to fix the code.</li>\n</ul>\n<blockquote>\n<p>Full code examples will be available at the end of each section.</p>\n</blockquote>\n<p>In order to reproduce the bug I experienced in the other codebase I needed the following:</p>\n<ul>\n<li>Some code to add some state from some data from the &quot;server&quot;</li>\n<li>React Context API (Technically optional)</li>\n<li>use of useMemo to transform some data from the &quot;server&quot;</li>\n<li>A button to &quot;save&quot; the state to the server</li>\n<li>Some optimisation logic to check if we should submit the changes to the server or not.</li>\n</ul>\n<h2 id=\"implementation\">Implementation <a class=\"direct-link\" href=\"#implementation\" aria-label=\"implementation\"><span class=\"copy-link\"></span></a></h2>\n<p>The implementation of the TodoList isn't too important, I scaffolded it out using <a href=\"https://vitejs.dev/\" rel=\"noopener\" target=\"_blank\">vite</a>. The important aspects of the code in this article live inside of a custom <a href=\"https://reactjs.org/docs/context.html\" rel=\"noopener\" target=\"_blank\">Context</a> provider that implements the functionality of the TodoList.</p>\n<p>Here is the outline of the top level <code>App</code> component:</p>\n<copy-to-clipboard><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AddTodo <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./AddTodo\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">\"./App.css\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> SaveMessage <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./SaveMessage\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> SaveTodos <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./SaveTodos\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> TodoProvider <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./TodoContext\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> TodoList <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./TodoList\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TodoProvider</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"><br>      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>App<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"><br>        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Flex<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"><br>          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Todo list</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"><br>          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SaveTodos</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\"><br>        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"><br>        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SaveMessage</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\"><br>        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">AddTodo</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\"><br>        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"><br>          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Items to do</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"><br>          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TodoList</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\"><br>        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"><br>      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"><br>    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">TodoProvider</span></span><span class=\"token punctuation\">></span></span><br>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App<span class=\"token punctuation\">;</span></code></pre>\n</copy-to-clipboard><p>The <code>TodoProvider</code> is where we will focus on this article, it allows me to implement the logic for adding/deleting and saving todo items and share this between components.</p>\n<p>Each of the components use aspects of the context provided by <code>TodoProvider</code>, for example, here is how the <code>AddTodo</code> component accesses the functionality to add a todo item:</p>\n<copy-to-clipboard><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useTodos <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./TodoContext\"</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">AddTodo</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> addTodo <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useTodos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span><br>      <span class=\"token attr-name\">onSubmit</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>        e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">const</span> formEntries <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FormData</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token function\">addTodo</span><span class=\"token punctuation\">(</span>formEntries<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"message\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><br>    <span class=\"token punctuation\">></span></span><span class=\"token plain-text\"><br>      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span><br>        <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Input SearchBox<span class=\"token punctuation\">\"</span></span><br>        <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>message<span class=\"token punctuation\">\"</span></span><br>        <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>New item...<span class=\"token punctuation\">\"</span></span><br>        <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>addItem<span class=\"token punctuation\">\"</span></span><br>        <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span><br>      <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\"><br><br>      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"><br>        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">role</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>img<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">aria-label</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Add item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"><br>          ➕<br>        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"><br>      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"><br>    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n</copy-to-clipboard><p>I'll add in full code sandbox links at the end of each section.</p>\n<h2 id=\"the-original-implementation\">The original implementation <a class=\"direct-link\" href=\"#the-original-implementation\" aria-label=\"the original implementation\"><span class=\"copy-link\"></span></a></h2>\n<blockquote>\n<p>Remember, this code is not the actual code from the codebase that I work on but is an example distilled from the issue that I came across.</p>\n</blockquote>\n<p>The first thing that the <code>TodoProvider</code> does is fetch some data from the &quot;server&quot;, in this case I've hardcoded a json file with some todo items in it.</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span><br>  <span class=\"token string\">\"todos\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><br>    <span class=\"token punctuation\">{</span><br>      <span class=\"token string\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"message\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Go to the supermarket\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"done\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">{</span><br>      <span class=\"token string\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"message\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Mow the lawn\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"done\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">{</span><br>      <span class=\"token string\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"message\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Clean the kitchen\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"done\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">{</span><br>      <span class=\"token string\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"message\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Book restaurant reservation\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"done\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><br>    <span class=\"token punctuation\">}</span><br>  <span class=\"token punctuation\">]</span><br><span class=\"token punctuation\">}</span></code></pre>\n</copy-to-clipboard><p>Below I setup a context and fetch the JSON. It might seem odd to you that I am setting the API response into <code>useState</code>, this is a little contrived and just for the demo, before I get any &quot;your code sucks comments&quot;. In the case of the real codebase this would have been a graphql <code>useQuery</code> hook.</p>\n<p>There is a good reason why I am storing the response and not the the TODOs themselves, because I need to do a transform on the data and this is the closest way I could mimic was the original code was doing without introducing some fancy http client hook like <a href=\"https://www.npmjs.com/package/react-query\" rel=\"noopener\" target=\"_blank\">react-query</a>.</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> TodoContext <span class=\"token operator\">=</span> <span class=\"token function\">createContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">TodoProvider</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> children <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>apiResponse<span class=\"token punctuation\">,</span> setApiResponse<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>draftTodos<span class=\"token punctuation\">,</span> setTodoList<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">fetchTodos</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./todos.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token function\">setApiResponse</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>    <span class=\"token function\">fetchTodos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Transforming the data, use of useCallback looks odd here...</span><br>  <span class=\"token comment\">// We'll get to that!</span><br>  <span class=\"token keyword\">const</span> existingTodos <span class=\"token operator\">=</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">const</span> todoMap <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    apiResponse<span class=\"token operator\">?.</span>todos<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">todo</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>        todoMap<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>todo<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> todo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token keyword\">return</span> todoMap<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>apiResponse<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">return</span>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><br>    <span class=\"token operator\">&lt;</span>TodoContext<span class=\"token punctuation\">.</span>Provider value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><br>        <span class=\"token comment\">/* code coming soon */</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><br>    <span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><br>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>TodoContext<span class=\"token punctuation\">.</span>Provider<span class=\"token operator\">></span><br><span class=\"token punctuation\">}</span></code></pre>\n</copy-to-clipboard><p>The second part of the code uses <code>useCallback</code> to create a function that converts the array of items into a map of todo items where the key is the id e.g.</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span><br>    <span class=\"token number\">1</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token string\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"message\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Go to the supermarket\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"done\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>    <span class=\"token number\">2</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token string\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"message\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Mow the lawn\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"done\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>    <span class=\"token number\">3</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token string\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"message\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Clean the kitchen\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"done\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>    <span class=\"token number\">4</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token string\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"message\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Book restaurant reservation\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"done\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><br>    <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span></code></pre>\n</copy-to-clipboard><p>If you think the use of <code>useCallback</code> here is strange and <code>useMemo</code> would make sense, we both had the same thought and I wonder if you would end up introducing the same bug that I did by refactoring and correcting the code!</p>\n<p>Now we're fetching Todo Items we want a way of adding new items. Before we do that I'm going to introduce a new concept to the above implementation, the notion of &quot;draft todos&quot;, these are modified or new todo items which have not been saved back to the server just yet. To make that happen I add in:</p>\n<copy-to-clipboard><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">TodoProvider</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> children <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token comment\">// New line here!</span><br>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>draftTodos<span class=\"token punctuation\">,</span> setTodoList<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>apiResponse<span class=\"token punctuation\">,</span> setApiResponse<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">fetchTodos</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./todos.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token function\">setApiResponse</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>    <span class=\"token function\">fetchTodos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><br>  <span class=\"token keyword\">const</span> existingTodos <span class=\"token operator\">=</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">const</span> todoMap <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    apiResponse<span class=\"token operator\">?.</span>todos<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">todo</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>        todoMap<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>todo<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> todo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token keyword\">return</span> todoMap<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>apiResponse<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Other new line!</span><br>    <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>    <span class=\"token comment\">// pass in initial items from server</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>draftTodos <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">existingTodos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token comment\">// this () is strange because useCallback was used</span><br>      <span class=\"token function\">setTodoList</span><span class=\"token punctuation\">(</span><span class=\"token function\">existingTodos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>existingTodos<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">return</span>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TodoContext.Provider</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><br>        todoItems<span class=\"token operator\">:</span> draftTodos <span class=\"token operator\">?</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>draftTodos<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"><br>    </span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\"><br>    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">TodoContext.Provider</span></span><span class=\"token punctuation\">></span></span><br><span class=\"token punctuation\">}</span></code></pre>\n</copy-to-clipboard><p>The purpose of the <code>useEffect</code> is so that on initialisation the draft todos equal the existing todo items.</p>\n<p>In the new lines, if it wasn't clear before, hopefully it would be now that useCallback here is quite strange indeed because in order to read the existing you need to execute the <code>existingTodos</code> as a function.</p>\n<blockquote>\n<p>The keen eyed here will notice that this means a new map is being created each time you call the function, resetting the data back to the initial state from the json file. This also means the reference to the <code>Map</code> is different each time meaning unless you pass the output of the function around you aren't comparing the same map! This is key to the issue later on when <code>useMemo</code> is used instead!</p>\n</blockquote>\n<h3 id=\"adding-and-removing-todo-items\">Adding and removing Todo items <a class=\"direct-link\" href=\"#adding-and-removing-todo-items\" aria-label=\"adding and removing todo items\"><span class=\"copy-link\"></span></a></h3>\n<p>These next two lines are more or less the existing code which was in place to add or remove items, and were exported onto the context.</p>\n<copy-to-clipboard><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token operator\">&lt;</span>TodoContext<span class=\"token punctuation\">.</span>Provider<br>  value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><br>    todoItems<span class=\"token operator\">:</span> draftTodos <span class=\"token operator\">?</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>draftTodos<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>    <span class=\"token function-variable function\">removeTodo</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>draftTodos<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token function\">setTodoList</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span>draftTodos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>    <span class=\"token function-variable function\">addTodo</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">message</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>message<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br>      <span class=\"token keyword\">const</span> todo <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token comment\">// new web api! - Support gradually increasing</span><br>        id<span class=\"token operator\">:</span> crypto<span class=\"token punctuation\">.</span><span class=\"token function\">randomUUID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>        message<span class=\"token punctuation\">,</span><br>        done<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>draftTodos<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span>todo<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br>      draftTodos<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>todo<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> todo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token function\">setTodoList</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span>draftTodos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><br><span class=\"token operator\">></span><br>  <span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">TodoContext.Provider</span></span><span class=\"token punctuation\">></span></span></code></pre>\n</copy-to-clipboard><p>These code examples also looked a little off to me too, but I couldn't quite understand why or put two and two together, at first. What the code is doing:</p>\n<ul>\n<li>Adding or Removing item from todo list</li>\n<li>Making a new Map with the entries from the previous map and setting it to the state.</li>\n</ul>\n<p>There was in fact a comment next to the <code>new Map()</code> line which mentioned that this is needed in order to cause React to update, but it hadn't quite clicked with me that this was a bit of a problem.</p>\n<p>If you hadn't noticed already, the lines above were mutating the previous map in both the add and remove methods, and then making a copy of it, polluting the previous data. Without any other changes this might not be a big deal at all, a bit bad in terms of best practice of not mutating objects in React, especially those used as state, but it works, but now let's take a look at the code for saving the new items.</p>\n<h3 id=\"saving-items-to-the-%22server%22\">Saving items to the &quot;server&quot; <a class=\"direct-link\" href=\"#saving-items-to-the-%22server%22\" aria-label=\"saving items to the %22server%22\"><span class=\"copy-link\"></span></a></h3>\n<p>The code below is quite contrived and is missing the context as to why it was needed. But what the code does is check if the data had changed before sending it, it was a bit of an optimisation and there were other reasons too, but that's not important, let's take a look.</p>\n<copy-to-clipboard><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token operator\">&lt;</span>TodoContext<span class=\"token punctuation\">.</span>Provider<br>  value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><br>    <span class=\"token function-variable function\">save</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>      <span class=\"token comment\">// contrived code for the demonstration</span><br>      <span class=\"token comment\">// in the real app this was responsible for deciding if a request should be sent to server or not</span><br>      <span class=\"token keyword\">const</span> existingTodoKeys <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token function\">existingTodos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">const</span> draftTodoKeys <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>draftTodos<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">let</span> todosHasChanges <span class=\"token operator\">=</span> existingTodoKeys<span class=\"token punctuation\">.</span>length <span class=\"token operator\">!==</span> draftTodoKeys<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span><br>      <span class=\"token comment\">// now check entries using ids, unless we know they have changed based on length</span><br>      <span class=\"token comment\">// there are better ways of detecting changes but this demonstrates the issue</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>todosHasChanges<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">const</span> existingTodoValues <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token function\">existingTodos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">const</span> draftTodoValues <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>draftTodos<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> todoIndex <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> todoIndex <span class=\"token operator\">&lt;</span> draftTodoKeys<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> todoIndex<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>          <span class=\"token comment\">// now check each entry</span><br>          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><br>            existingTodoKeys<span class=\"token punctuation\">[</span>todoIndex<span class=\"token punctuation\">]</span> <span class=\"token operator\">!==</span> draftTodoKeys<span class=\"token punctuation\">[</span>todoIndex<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span><br>            existingTodoValues<span class=\"token punctuation\">[</span>todoIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>done <span class=\"token operator\">!==</span><br>              draftTodoValues<span class=\"token punctuation\">[</span>todoIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>done<br>          <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>            todosHasChanges <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span><br>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span><br>          <span class=\"token punctuation\">}</span><br>        <span class=\"token punctuation\">}</span><br>      <span class=\"token punctuation\">}</span><br><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>todosHasChanges<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token comment\">// send off request to server</span><br>      <span class=\"token punctuation\">}</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><br><span class=\"token operator\">></span><br>  <span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">TodoContext.Provider</span></span><span class=\"token punctuation\">></span></span></code></pre>\n</copy-to-clipboard><p>Most of the above code doesn't matter but the general idea is that the two maps are being compared to one another. Here again strikes the <code>existingTodos()</code> which as we established before essentially &quot;resets&quot; the Map back to the original data from the server. It is in fact this property of code with the <code>useCallback</code> ensuring that <code>existingTodos()</code> is the original data from the server that makes this code work at all because the add and remove operations mutate the original array. If it wasn't for <code>existingTodos()</code> always fetching the un-mutated data the code would not function!</p>\n<p>I suggest that this is an extremely obscure bug that only happens to not presents itself because of the use of useCallback to expose a function negates the mutation operations on the original map, instead of <code>useMemo</code> for example. Sadly, for me, I didn't notice this at the time... and I refactored it.</p>\n<p>I've published a <a href=\"https://codesandbox.io/s/react-hooks-with-usecallback-and-mutations-pmmij\" rel=\"noopener\" target=\"_blank\">code-sandbox</a> with the full code for this example that uses <code>useCallback</code>.</p>\n<h2 id=\"how-i-broke-production\">How I broke production <a class=\"direct-link\" href=\"#how-i-broke-production\" aria-label=\"how i broke production\"><span class=\"copy-link\"></span></a></h2>\n<p>As suggested to earlier, when working in this area of the code I took the chance to tidy up the code to use <code>useMemo</code> instead of <code>useCallback</code>. Unfortunately, this made the code fall over, and to make things even more fun I was going on vacation later that week, luckily someone in my team came in and reverted back to using useCallback, hopefully I'll be able to make the change to make the code less of a trap with the mutation of the Maps when I return, which I'll discuss at the end.</p>\n<p><figure>\n        <div class=\"img-wrap\" ><img src=\"/images/memo-callback-diff.png\" alt=\"Diff of the changes from using useCallback to useMemo\">\n        <figcaption>A diff of the changes made (note the diff is the wrong way around)</figcaption>\n      </div>\n      </figure></p>\n<copy-to-clipboard><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// main change - change to use useMemo which means existingTodos is the todos, not a function.</span><br><span class=\"token keyword\">const</span> existingTodos <span class=\"token operator\">=</span> <span class=\"token function\">useMemo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">const</span> todoMap <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  apiResponse<span class=\"token operator\">?.</span>todos<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">todo</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>    todoMap<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>todo<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> todo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">return</span> todoMap<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>apiResponse<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token comment\">// removed `existingTodos` from being a function</span><br>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>draftTodos <span class=\"token operator\">&amp;&amp;</span> existingTodos<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token function\">setTodoList</span><span class=\"token punctuation\">(</span>existingTodos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>existingTodos<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</copy-to-clipboard><copy-to-clipboard><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// And inside of the save function, removed existingTodos() as its not a function anymore</span><br><span class=\"token punctuation\">{</span><br>  <span class=\"token function-variable function\">save</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">const</span> existingTodoKeys <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>existingTodos<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token comment\">/// ...</span><br>    <span class=\"token keyword\">const</span> existingTodoValues <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>existingTodos<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n</copy-to-clipboard><p>This change got through testing and code review, and was seemingly correct. However, due to the mutating of the original Map in the add/remove functions (which I'd missed), the first time you added or deleted something it would not be tracked as a change, meaning if you only added or removed one item in the list the request would not be sent to the server because the entries in the <code>existingTodos</code> had been mutated making the Maps essentially equal (not in terms of reference but contents, which is what the server cared about).</p>\n<p><figure>\n        <div class=\"img-wrap\" ><img src=\"/images/react-todo-memo-broken.gif\" alt=\"Demo of the bug in a todo list app\">\n        <figcaption>Here's the bug in action!</figcaption>\n      </div>\n      </figure></p>\n<p>Here is a <a href=\"https://codesandbox.io/s/use-memo-broken-code-with-mutations-lqk1u?file=/src/TodoContext.jsx\" rel=\"noopener\" target=\"_blank\">code-sandbox</a> with the full code and demo that introduces the bug.</p>\n<blockquote>\n<p>Note that the checking and unchecking of items in the demo does not have an issue with mutating the original Map.</p>\n</blockquote>\n<h2 id=\"missed-in-testing\">Missed in testing <a class=\"direct-link\" href=\"#missed-in-testing\" aria-label=\"missed in testing\"><span class=\"copy-link\"></span></a></h2>\n<p>As noted above the issue where changes are incorrectly not reported only appears for the first change. The reason being that if you make two changes the code happens to work (sort of) because the array set by <code>useMemo</code> in this example never changes after its been mutated the one time, but the code for adding or removing items will stop modifying the original Map after the first mutation, instead it uses the latest draft todos map. Incidentally, the real testing scenario was a bit more complex and involved reordering items, so you might be able to see how this scenario could get missed.</p>\n<p>This would be incredibly difficult to unit test as well, with the code being split across contexts and multiple components, unless you were testing the full end to end interactions you might not catch this at all!</p>\n<h2 id=\"my-suggested-fix\">My suggested fix <a class=\"direct-link\" href=\"#my-suggested-fix\" aria-label=\"my suggested fix\"><span class=\"copy-link\"></span></a></h2>\n<p>The fix for the code is quite straight-forward and goes back to the original highlighted issue, the add and remove functions mutating the original map, they should not do this. Alternatively before setting the existing entries to the <code>draftTodos</code> variable you could make a copy then, either would work, although I think I prefer avoiding mutations at the point of new data - in the add and remove functions.</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function-variable function\">removeTodo</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token comment\">// make a copy first</span><br>  <span class=\"token keyword\">const</span> newTodos <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span>draftTodos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>newTodos<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token function\">setTodoList</span><span class=\"token punctuation\">(</span>newTodos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre>\n</copy-to-clipboard><copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function-variable function\">addTodo</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">message</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>message<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br>  <span class=\"token keyword\">const</span> todo <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><br>    id<span class=\"token operator\">:</span> crypto<span class=\"token punctuation\">.</span><span class=\"token function\">randomUUID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    message<span class=\"token punctuation\">,</span><br>    done<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>draftTodos<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span>todo<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br>  <span class=\"token comment\">// make a copy first</span><br>  <span class=\"token keyword\">const</span> newTodos <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span>draftTodos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  newTodos<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>todo<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> todo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token function\">setTodoList</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span>newTodos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre>\n</copy-to-clipboard><p>Here is a <a href=\"https://codesandbox.io/s/working-todo-list-with-usememo-ns4px\" rel=\"noopener\" target=\"_blank\">code-sandbox</a> of what I believe is functional code.</p>\n<h2 id=\"learnings\">Learnings <a class=\"direct-link\" href=\"#learnings\" aria-label=\"learnings\"><span class=\"copy-link\"></span></a></h2>\n<p>I suppose one of the main lessons here is to always be aware of where code could potentially be mutating state, especially before introducing something like a <code>useMemo</code> into the code base.</p>\n<p>More importantly, when refactoring code from an uncommon pattern (the useCallback) to something more typical it’s important to fully understand why that code might have happened in the first place, it's likely it might be a workaround for another issue. Another learning on my part is that this would had made good sense to start a dialogue with the person who wrote the original code, although that's easy to say in retrospect, there are many contributors.</p>\n<p>Perhaps code comments might have saved this or some more unit tests, it’s hard to say. I can say for sure that we did do lots of testing in this area before shipping the bug to production but I suppose because it’s a bug that only happens on the first mutation and fixes itself if you do subsequent changes that might help to explain why it was missed. It's possible that some end to end test automation of this functionality might have caught this, as it seems likely that a human tester would go for the more complex scenario over a more basic test, e.g. a single mutation which might be present in an automated test.</p>\n<p>Variable names can lie, the name of the variable also had the word <code>existing</code> in it in the other codebase too making it seem like this variable reference was representative of the original unmodified state, but due to the mutations it was not. I suppose it's a learning that you cannot always trust that a variable is what is says it is.</p>\n<p>Maybe just don’t useMemo or useCallback or things that complicate the code - the work this component was doing to convert an array into a map, and ensure it wasn’t happening every render could well be redundant or overkill, part of my issue with react hooks is they can force you to introduce complexity for something as simple as converting from one data type to another and in doing this you can get struck by subtle bugs such as code mutating objects incorrectly or the incorrect use of react hooks ghastly dependency arrays.</p>\n<h2 id=\"summary\">Summary <a class=\"direct-link\" href=\"#summary\" aria-label=\"summary\"><span class=\"copy-link\"></span></a></h2>\n<p>I suppose some people might read this and have the take that you should simply &quot;Get Gud&quot;, but I'd suggest to take a step back and think about how ubiquitous React is and how many developers of differing experience can be working on a code base, I think it’s examples like this which help to show that it’s super easy to break things by modifying to use a different React hook or mutating something that should not have been mutated, and no Typescript can’t save you here, this was a Typescript codebase!</p>\n<p>It might also be a fair argument to suggest that the bug presented here is not React specific, but I can say for sure the complexity that React can bring just to avoid rendering, or not rendering, does not help.</p>\n<p>If you want to read about another instance of discussing bugs and areas of growth, I wrote about another scenario here from my previous role: <a href=\"/posts/memory-leaks-and-why-should-you-never-write-such-bad-code-even-for-tests/\">Memory leaks and why should you never write such bad code.</a></p>\n<p>Thank you for reading! If you want to read more of my work, please follow me on Twitter <a href=\"https://twitter.com/griffadev\" rel=\"noopener\" target=\"_blank\">@griffadev</a>, or get me a <a href=\"https://ko-fi.com/griffadev\" rel=\"noopener\" target=\"_blank\">coffee</a> if you feel like it ☕.</p>\n",
      "date_published": "2022-01-10T00:00:00+00:00"
    },{
      "id": "https://griffa.dev/posts/beautiful-drag-and-drop-interactions-with-react-hooks./",
      "url": "https://griffa.dev/posts/beautiful-drag-and-drop-interactions-with-react-hooks./",
      "title": "Beautiful drag and drop interactions with react hooks.",
      "tags": ["JavaScript","React"],
      "summary": "Recently I needed to enhance a table with drag and drop re-ordering in React. There are lots of solutions out there from roll your own to a library with large dependencies. In this article I explore using an exciting new library called dnd-kit as well as how to integrate it with react-table.",
      "content_html": "<p>In this article we'll explore how you could build a drag and drop sortable table.</p>\n<p><figure>\n        <div class=\"img-wrap\" ><img src=\"/images/react-table-dnd-kit.png\" alt=\"Drag and drop table using react-table and dnd-kit.\">\n        <figcaption>Drag and drop table using react-table and dnd-kit.</figcaption>\n      </div>\n      </figure></p>\n<p>When looking for drag and drop libraries in React there are a lot of options, some of the popular ones are:</p>\n<ul>\n<li><a href=\"https://github.com/clauderic/react-sortable-hoc\" rel=\"noopener\" target=\"_blank\">react-sortable-hoc</a> - considered deprecated in favour of dnd-kit.</li>\n<li><a href=\"https://github.com/atlassian/react-beautiful-dnd\" rel=\"noopener\" target=\"_blank\">react-beautiful-dnd</a></li>\n<li><a href=\"https://react-dnd.github.io/react-dnd/about\" rel=\"noopener\" target=\"_blank\">react-dnd</a></li>\n<li><a href=\"https://dndkit.com/\" rel=\"noopener\" target=\"_blank\">dnd-kit</a> which we're going to explore today.</li>\n</ul>\n<p>Many of the libraries out there are great but some come with some large downsides, namely:</p>\n<ul>\n<li>Are intended for specific use-cases or are too restrictive.</li>\n<li>Have a large dependency tree, for example some bundle in redux!</li>\n<li>Have inconsistent browser support.</li>\n</ul>\n<p>One common thing also brought up when looking at these libraries is those that opt to &quot;use the platform&quot; more by utilising the HTML drag and drop APIs and those that deliberately choose to not use it to overcome browser inconsistencies and help improve support for a variety of inputs such as touch, mouse and keyboard.</p>\n<p>As part of this investigation I seriously considered <code>react-beautiful-dnd</code>, whilst it has great support and demos, I hit a few stumbling blocks along to way. It's <a href=\"https://bundlephobia.com/package/react-beautiful-dnd@13.1.0\" rel=\"noopener\" target=\"_blank\">footprint</a> was also a hard sell to add into the application for a single use-case. I also encountered <a href=\"https://github.com/atlassian/react-beautiful-dnd/issues/316\" rel=\"noopener\" target=\"_blank\">this issue</a> whilst I was investigating a different use case where I wanted horizontal and vertical re-ordering in a grid.</p>\n<p>After trying out some other libraries I eventually settled on @dnd-kit, which I have to say is absolutely fantastic. It is technically still in beta, but despite this its documentation is quite mature. On the <a href=\"https://docs.dndkit.com\" rel=\"noopener\" target=\"_blank\">docs</a> site it says the following:</p>\n<blockquote>\n<p>dnd kit is currently in beta. Issues and bugs should be expected for early releases. The core concepts are stable, but some of the APIs may change in the future.</p>\n</blockquote>\n<h2 id=\"so-why-is-this-library-great%3F\">So why is this library great? <a class=\"direct-link\" href=\"#so-why-is-this-library-great%3F\" aria-label=\"so why is this library great%3F\"><span class=\"copy-link\"></span></a></h2>\n<p>It is a lightweight, hooks-based, utility driven library which gives you helpful primitives and allows you to opt in for additional features, therefore making the library only as large as your use case requires it be, depending on what you need.</p>\n<p>The easiest way to get started I think is to work through some of the code in some of their code <a href=\"https://codesandbox.io/examples/package/@dnd-kit/core\" rel=\"noopener\" target=\"_blank\">sandbox demos</a>. I'm personally a big fan of the <a href=\"https://codesandbox.io/s/py6ve\" rel=\"noopener\" target=\"_blank\">sortable image grid example</a>, try breaking down the code to see how things work.</p>\n<p>The first step to using <code>dnd-kit</code> is to install the packages you need. The library is separated into small micro-libraries, which each provide additional utilities.<br>\nThe minimum you will require is the package <code>@dnd-kit/core</code> (~11KB gzipped).</p>\n<p>Some other useful packages with <code>dnd-kit</code> provides:</p>\n<ul>\n<li><code>@dnd-kit/sortable</code> - building blocks to build sortable interfaces .(~3KB gzipped)</li>\n<li><code>@dnd-kit/utilities</code> - dnd-kit utilities to help with integration. (~1.3KB gzipped)</li>\n<li><code>@dnd-kit/modifiers</code> - modifiers to change behavior of drag and drop, for example restricting the drag and drop movement to vertical or horizontal. (~3.4KB gzipped)</li>\n<li><code>@dnd-kit/accessibility</code> - Hooks to assist with accessibility for example screen reader announcements. (~499B gzipped)</li>\n</ul>\n<h2 id=\"webpack-problems\">Webpack problems <a class=\"direct-link\" href=\"#webpack-problems\" aria-label=\"webpack problems\"><span class=\"copy-link\"></span></a></h2>\n<p>Note, in my use I found that webpack had some issues de-duplicating <code>@dnd-kit/core</code> which is used inside of <code>@dnd-kit/sortable</code>. Aside from adding to bloat, if this dependency is not de-duplicated the <code>DndContext</code> provided by <code>dnd-kit</code> will not work. If you run into this you can force it use the same copy of the core library, using an alias in your webpack.config.js.</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\">  resolve<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>    alias<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token comment\">// without this webpack dupes the dependencies when other dnd-kit libs use it which breaks context</span><br>      <span class=\"token string\">\"@dnd-kit/core\"</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">\"node_modules/@dnd-kit/core\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">}</span><br>  <span class=\"token punctuation\">}</span></code></pre>\n</copy-to-clipboard><h2 id=\"learning-dnd-kit\">Learning dnd-kit <a class=\"direct-link\" href=\"#learning-dnd-kit\" aria-label=\"learning dnd kit\"><span class=\"copy-link\"></span></a></h2>\n<p>The best way that I can recommend to understand the library before we get to the example using react-table is to take a look at the example I mentioned earlier (<a href=\"https://codesandbox.io/s/py6ve\" rel=\"noopener\" target=\"_blank\">sortable image grid example</a>).</p>\n<p>One thing to highlight that is important and quite cool about the library is its <code>DragOverlay</code> component, which you can use to render a custom react component to visualise your dragged item differently when it is being dragged, for example adding a drop shadow, which you'll notice in my sortable table example a little later. It also offers you the opportunity to change how the original rendered item is rendered when it is being dragged by using the <code>isDragging</code> property from <code>useSortable</code> (or <code>useDraggable</code>), for example change it's opacity or color to help indicate the drop area to the user, this is also shown in my up-coming example.</p>\n<p>If you prefer to learn through videos, whilst learning the API I watched some of this video before getting my hands stuck into the code.</p>\n<div class=\"video-size\">\n    <div class=\"video-wrapper\">\n        <lite-youtube class=\"video\" videoid=\"eDc2xowd0RI\" style=\"background-image: url('https://i.ytimg.com/vi/eDc2xowd0RI/hqdefault.jpg');\">\n            <a rel=\"noopener\" onclick=\"('customElements' in window) && event.preventDefault()\" title=\"Play Video\" class=\"no-js\" target=\"_blank\" href=\"https://youtube.com?w=eDc2xowd0RI\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\">\n                <g transform=\"translate(-339 -150.484)\">\n                    <path fill=\"var(--White, #fff)\" d=\"M-1978.639,24.261h0a1.555,1.555,0,0,1-1.555-1.551V9.291a1.555,1.555,0,0,1,1.555-1.551,1.527,1.527,0,0,1,.748.2l11.355,6.9a1.538,1.538,0,0,1,.793,1.362,1.526,1.526,0,0,1-.793,1.348l-11.355,6.516A1.52,1.52,0,0,1-1978.639,24.261Z\" transform=\"translate(2329 150.484)\"/>\n                    <path fill=\"var(--Primary, #000)\" d=\"M16.563.563a16,16,0,1,0,16,16A16,16,0,0,0,16.563.563Zm7.465,17.548L12.672,24.627a1.551,1.551,0,0,1-2.3-1.355V9.853a1.552,1.552,0,0,1,2.3-1.355l11.355,6.9A1.553,1.553,0,0,1,24.027,18.111Z\" transform=\"translate(338.438 149.922)\" />\n                </g>\n            </svg>\n        </a>\n        </lite-youtube>\n    </div>\n</div>\n<h2 id=\"what-could-be-better%3F\">What could be better? <a class=\"direct-link\" href=\"#what-could-be-better%3F\" aria-label=\"what could be better%3F\"><span class=\"copy-link\"></span></a></h2>\n<p>The library has some really fantastic examples of how to use it on its <a href=\"https://5fc05e08a4a65d0021ae0bf2-unebtvimdp.chromatic.com/\" rel=\"noopener\" target=\"_blank\">storybook</a>, however they do suffer from the classic problem that storybook often presents, they are great as showcases but not very good at demonstrations of how to adapt the example to use the code for yourself. By that I mean, it's very hard to find and understand the code written, and often suffers from the problem of &quot;too much code re-use for demos&quot;, although if I'm honest I think this is a problem with Storybook not the library itself.</p>\n<p>For example, it's really hard to un-pick what the code in the example is doing, you end up having to search through github and reverse engineer complex examples and across multiple files, for example:</p>\n<ul>\n<li><a href=\"https://github.com/clauderic/dnd-kit/blob/master/stories/2%20-%20Presets/Sortable/1-Vertical.story.tsx\" rel=\"noopener\" target=\"_blank\">https://github.com/clauderic/dnd-kit/blob/master/stories/2 - Presets/Sortable/1-Vertical.story.tsx</a></li>\n<li><a href=\"https://github.com/clauderic/dnd-kit/blob/master/stories/2%20-%20Presets/Sortable/Sortable.tsx\" rel=\"noopener\" target=\"_blank\">https://github.com/clauderic/dnd-kit/blob/master/stories/2 - Presets/Sortable/Sortable.tsx</a></li>\n</ul>\n<p>The other thing that makes me sad is that this great library is locked into the React ecosystem, but I must admit, the ergonomics of using custom hooks here is quite nice.</p>\n<h2 id=\"using-react-table\">Using react table <a class=\"direct-link\" href=\"#using-react-table\" aria-label=\"using react table\"><span class=\"copy-link\"></span></a></h2>\n<p><a href=\"https://www.npmjs.com/package/react-table\" rel=\"noopener\" target=\"_blank\">react-table</a> is another lightweight and customisable react library, it allows users to use utilities and hooks to build up tables for their UIs. This description may sounds quite similar to what I described before about <code>dnd-kit</code> where you can use a series of utilities and hooks to implement drag and drop. It is for this reason that<code>react-table</code> and <code>dnd-kit</code> fit together really nicely.</p>\n<p>To help demonstrate this, I took the &quot;basic&quot; example of <code>react-table</code> from their examples here: <a href=\"https://codesandbox.io/s/github/tannerlinsley/react-table/tree/master/examples/basic\" rel=\"noopener\" target=\"_blank\">https://codesandbox.io/s/github/tannerlinsley/react-table/tree/master/examples/basic</a> and then added in drag and drop support, let's have a look how.</p>\n<h2 id=\"hooking-it-up\">Hooking it up <a class=\"direct-link\" href=\"#hooking-it-up\" aria-label=\"hooking it up\"><span class=\"copy-link\"></span></a></h2>\n<p>In order to add support there are roughly these steps:</p>\n<ul>\n<li>Install the <code>dnd-kit</code> packages: @dnd-kit/core, @dnd-kit/modifiers, @dnd-kit/sortable, @dnd-kit/utilities.</li>\n<li>Wrap the table in <code>DndContext</code> and <code>SortableContext</code>.</li>\n<li>Provide an array of string item ids to <code>SortableContext</code> to allow items to be sorted.</li>\n<li>Implement drag event handlers for re-ordering items in the array.</li>\n<li>Render a row using the <code>useSortable</code> hook passing in the id of the row.</li>\n<li>Render a drag handle button component.</li>\n<li>Render the CSS transform of the row when dragging.</li>\n<li>Rendering the <code>DragOverlay</code> for a custom view of the row when dragging.</li>\n<li>When a row is being dragged change it's background color and hide the data, using the <code>isDragging</code> property, to act as a &quot;slot&quot; for the user to drop into.</li>\n</ul>\n<p>Here is an implementation of how you could go about doing drag and drop re-orderable rows with <code>dnd-kit</code> and <code>react-table</code>: <a href=\"https://codesandbox.io/s/react-table-drag-and-drop-sort-rows-with-dnd-kit-btpy9\" rel=\"noopener\" target=\"_blank\">https://codesandbox.io/s/react-table-drag-and-drop-sort-rows-with-dnd-kit-btpy9</a></p>\n<p>This example isn't really focused on making it look &quot;pretty&quot;, it needs lots of styling to make it more production ready but hopefully you get the idea.</p>\n<p>One really important thing that is missing in the example is custom screen reader messages for accessibility, you will want to do this to help make sure that your application is inclusive of everybody. There is a great example on the <a href=\"https://docs.dndkit.com/guides/accessibility\" rel=\"noopener\" target=\"_blank\">dnd-kit accessibility page</a>.</p>\n<p>I'm excited to explore difference uses for this library, once you get the hang of it it's really powerful!</p>\n<p>Thank you for reading! If you want to read more of my work, please follow me on Twitter <a href=\"https://twitter.com/griffadev\" rel=\"noopener\" target=\"_blank\">@griffadev</a>, or get me a <a href=\"https://ko-fi.com/griffadev\" rel=\"noopener\" target=\"_blank\">coffee</a> if you feel like it ☕.</p>\n",
      "date_published": "2021-12-20T00:00:00+00:00"
    },{
      "id": "https://griffa.dev/posts/just-a-friendly-reminder-that-react-isn&amp;#39;t-really-just-javascript-(don&amp;#39;t-nest-functional-components)/",
      "url": "https://griffa.dev/posts/just-a-friendly-reminder-that-react-isn&amp;#39;t-really-just-javascript-(don&amp;#39;t-nest-functional-components)/",
      "title": "Just a friendly reminder that React isn&#39;t really Just JavaScript (Don&#39;t nest Functional Components)",
      "tags": ["JavaScript","React","Accessibility"],
      "summary": "React is super popular and has often touted itself as &quot;Just JavaScript&quot;, but in reality it has lots of quirks and gotchas that come along with it being a framework that adds limitation into JavaScript. Oh, and also write tests!",
      "content_html": "<p>This is my first blog post I've written about React, despite reluctantly using it every day due to the UK frontend job market. I'll probably regret talking about such a popular Framework, oh and it is a Framework 😉.</p>\n<p>Recently, I was writing an animated slide-in sidebar component, which could be opened to reveal some additional details for another component in the page. One of my goals was to ensure that the tab and focus order of the page made sense when the details pane was opened, namely, I wanted to be able to &quot;steal&quot; focus on open and restore focus back to the original button on close. For example on button press (with space-bar) you should be able to open the details panel, have the panel but focused and close it again with the space-bar. Focus is then returned back to the original button and you can hit &quot;tab&quot; to move to the next item.</p>\n<p>Here is a simplified example of what I was building, with some HTTP Status code kitties, try it out for yourself over in <a href=\"https://codesandbox.io/s/http-status-cats-working-8tr1l?file=/src/App.jsx\" rel=\"noopener\" target=\"_blank\">this Code sandbox</a>.</p>\n<p><figure>\n        <div class=\"img-wrap\" ><img src=\"/images/focus-drawer.gif\" alt=\"Animation showing using the keyboard and focus state to open and close a panel\">\n        <figcaption>Animation showing using the keyboard and focus state to open and close a panel</figcaption>\n      </div>\n      </figure></p>\n<p>Here is the code for the App, this was hastily written HTML which I'm sure could do with being improved.</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token string\">\"./styles.css\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Sidebar <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./Sidebar\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">const</span> statusCodes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span> <span class=\"token number\">404</span><span class=\"token punctuation\">,</span> <span class=\"token number\">403</span><span class=\"token punctuation\">,</span> <span class=\"token number\">401</span><span class=\"token punctuation\">,</span> <span class=\"token number\">418</span><span class=\"token punctuation\">,</span> <span class=\"token number\">420</span><span class=\"token punctuation\">,</span> <span class=\"token number\">301</span><span class=\"token punctuation\">,</span> <span class=\"token number\">302</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">201</span><span class=\"token punctuation\">,</span> <span class=\"token number\">204</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>selectedCode<span class=\"token punctuation\">,</span> setSelectedCode<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">const</span> Codes <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><br>    <span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">></span><br>      <span class=\"token punctuation\">{</span>statusCodes<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">code</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><br>        <span class=\"token operator\">&lt;</span>li key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>code<span class=\"token punctuation\">}</span><span class=\"token operator\">></span><br>          <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setSelectedCode</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>code<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span><br>        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><br>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span><br>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><br>    <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"App\"</span><span class=\"token operator\">></span><br>      <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span><span class=\"token constant\">HTTP</span> Status Cats<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span><br>      <span class=\"token punctuation\">{</span>Codes<span class=\"token punctuation\">}</span><br>      <span class=\"token operator\">&lt;</span>Sidebar<br>        onClose<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setSelectedCode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><br>        ariaLabel<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>selectedCode<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> status code info</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span><br>        open<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span>selectedCode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><br>      <span class=\"token operator\">></span><br>        <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>selectedCode<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span><br>        <span class=\"token operator\">&lt;</span>img<br>          alt<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Cat demonstrating HTTP status code: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>selectedCode<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span><br>          src<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">https://http.cat/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>selectedCode<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.jpg</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span><br>        <span class=\"token operator\">/</span><span class=\"token operator\">></span><br>      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Sidebar<span class=\"token operator\">></span><br>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><br>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n</copy-to-clipboard><p>And the sidebar, which is where the &quot;focus stealing/restoring&quot; happens:</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useEffect<span class=\"token punctuation\">,</span> useRef<span class=\"token punctuation\">,</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Sidebar</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> ariaLabel<span class=\"token punctuation\">,</span> open<span class=\"token punctuation\">,</span> onClose<span class=\"token punctuation\">,</span> children <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>previousFocus<span class=\"token punctuation\">,</span> setPreviousFocus<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token comment\">// now focus inside something, for arguments sake, the close button</span><br>  <span class=\"token keyword\">const</span> closeBtnRef <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>open<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token function\">setPreviousFocus</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>activeElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      closeBtnRef<span class=\"token operator\">?.</span>current<span class=\"token operator\">?.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token comment\">// bit of a hack putting aria label in here so triggers if another option selected.</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>open<span class=\"token punctuation\">,</span> ariaLabel<span class=\"token punctuation\">,</span> closeBtnRef<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><br>    <span class=\"token operator\">&lt;</span>aside aria<span class=\"token operator\">-</span>label<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>ariaLabel<span class=\"token punctuation\">}</span> aria<span class=\"token operator\">-</span>hidden<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>open <span class=\"token operator\">?</span> <span class=\"token string\">\"false\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"true\"</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><br>      <span class=\"token operator\">&lt;</span>button<br>        disabled<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">!</span>open<span class=\"token punctuation\">}</span><br>        ref<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>closeBtnRef<span class=\"token punctuation\">}</span><br>        onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>          <span class=\"token comment\">// restore previous focus</span><br>          previousFocus<span class=\"token operator\">?.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>          <span class=\"token function\">onClose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><br>      <span class=\"token operator\">></span><br>        Close <span class=\"token constant\">X</span><br>      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span><br>      <span class=\"token punctuation\">{</span>open <span class=\"token operator\">&amp;&amp;</span> children<span class=\"token punctuation\">}</span><br>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>aside<span class=\"token operator\">></span><br>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n</copy-to-clipboard><p>This code was working correctly, and then I was working on another pr based on a branch with new changes that I pulled in and I noticed that the focus navigation had started failing.</p>\n<blockquote>\n<p>Actually, a unit test, which tested the focus interactions started failing which is actually pretty awesome! React Testing Library moved unit testing forward SO MUCH in comparison to Enzyme it's great. If it could only run by default inside a browser instead of Jest, that would be great. By default I mean, commonplace in the industry, I'm sure it's achievable.</p>\n</blockquote>\n<p>In my example above the new PR had added the equivalent of the <code>Codes</code> variable which is in the above snippet:</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> Codes <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><br>  <span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">></span><br>    <span class=\"token punctuation\">{</span>statusCodes<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">code</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><br>      <span class=\"token operator\">&lt;</span>li key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>code<span class=\"token punctuation\">}</span><span class=\"token operator\">></span><br>        <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setSelectedCode</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>code<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span><br>      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><br>  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span><br><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</copy-to-clipboard><copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span><span class=\"token constant\">HTTP</span> Status Cats<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">{</span><br>  Codes<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n</copy-to-clipboard><p>Except, that wasn't what was added, this was:</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Codes</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><br>  <span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">></span><br>    <span class=\"token punctuation\">{</span>statusCodes<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">code</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><br>      <span class=\"token operator\">&lt;</span>li key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>code<span class=\"token punctuation\">}</span><span class=\"token operator\">></span><br>        <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setSelectedCode</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>code<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span><br>      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><br>  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span><br><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</copy-to-clipboard><copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span><span class=\"token constant\">HTTP</span> Status Cats<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">{</span><br>  <span class=\"token operator\">&lt;</span>Codes <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n</copy-to-clipboard><p>The difference is very subtle, but very important, what had been added by making <code>Codes</code> a function was a functional React component nested inside of another functional component. Remember <code>Codes</code> was a variable inside of <code>App</code>. This is the sort of thing which can easily not get picked up in code review but it breaks a lot of things.</p>\n<p>Even more interestingly, is that if you the following everything is fine.:</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span><span class=\"token constant\">HTTP</span> Status Cats<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">{</span><br>  <span class=\"token function\">Codes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n</copy-to-clipboard><p>Which is interesting considering that React functionally components are widely considered just a JavaScript function call, clearly when using JSX and mounting it as a React component react does &quot;stuff&quot;.</p>\n<p>Here is a broken example: <a href=\"https://codesandbox.io/s/http-status-cats-broken-fiu72?file=/src/App.jsx:508-554\" rel=\"noopener\" target=\"_blank\">https://codesandbox.io/s/http-status-cats-broken-fiu72?file=/src/App.jsx:508-554</a></p>\n<p><figure>\n        <div class=\"img-wrap\" ><img src=\"/images/focus-drawer-broken.gif\" alt=\"Animation showing broken focus on close of the panel\">\n        <figcaption>Animation showing broken focus on close of the panel</figcaption>\n      </div>\n      </figure></p>\n<p>What's going on here is React is rendering the contents of the &quot;App&quot; component on each render and because the inner component is not memoized or anyway react is just throwing it in the bin and re-rendering. Internally this will be causing the DOM element to be removed and re-added thus breaking the focus state being returned to the original button.</p>\n<p>Seeing this in the code, it was a non obvious fix, especially when reviewing another persons code, it got me thinking on some things:</p>\n<ul>\n<li>Would we have even caught this if we didn't have good tests?</li>\n<li>Would we have ever found the cause of it months later when the code wasn't as fresh in the mind?</li>\n<li>If React is &quot;Just Javascript&quot; how come it so royally breaks one of JavaScript best features of nesting functions and creating closures.</li>\n<li>Why isn't this front and centre of React docs and default lint rules?</li>\n</ul>\n<p>I did some digging on the last two points:</p>\n<p>The only reference to nested functions that I could find in the official documentation comes from the old classic <a href=\"https://reactjs.org/docs/hooks-rules.html\" rel=\"noopener\" target=\"_blank\">&quot;Rules of Hooks&quot;</a> page: <code>Don’t call Hooks inside loops, conditions, or nested functions</code>, no mention of nested components though.</p>\n<blockquote>\n<p>As an aside, I love the the fact that the mechanism that React is now mostly entirely based on, &quot;hooks&quot;, requires a list of rules to help prevent you from writing &quot;Just JavaScript&quot;.</p>\n</blockquote>\n<p>As for a lint rules, there does appear to be one which you can turn on in the popular <code>eslint-plugin-react</code> - <a href=\"https://github.com/yannickcr/eslint-plugin-react/blob/HEAD/docs/rules/no-unstable-nested-components.md\" rel=\"noopener\" target=\"_blank\">no-unstable-nested-components</a>, maybe i'll suggest to my team that we do. I can't think of a good reason when you would want to nest functional component, even if you're getting fancy and using useMemo, surely you'd just be better off writing simpler code.</p>\n<p>I find it fun to think that such a tiny change in the code that looks so innocent can break quite a lot in the rendering of React components and something I learnt from this is I'm really going to do my best to make sure I write good sets of unit tests that test both &quot;interactions&quot; and &quot;accessibility&quot; as it's so easy for these things to regress!</p>\n<p>Thank you for reading! If you want to read more of my work, please follow me on Twitter <a href=\"https://twitter.com/griffadev\" rel=\"noopener\" target=\"_blank\">@griffadev</a>, or get me a <a href=\"https://ko-fi.com/griffadev\" rel=\"noopener\" target=\"_blank\">coffee</a> if you feel like it ☕.</p>\n",
      "date_published": "2021-11-06T00:00:00+00:00"
    },{
      "id": "https://griffa.dev/posts/building-progress-indicator-cards-with-a-single-css-property/",
      "url": "https://griffa.dev/posts/building-progress-indicator-cards-with-a-single-css-property/",
      "title": "Building progress indicator cards with a single css property",
      "tags": ["HTML","CSS"],
      "summary": "I recently had to implement an indicator of progress onto a card component, I challenged myself to see if this could be done with a single css property, here&#39;s how.",
      "content_html": "<p>Here is a full demo of the css which I'll show you how to build, by learning the structure of the css <code>background</code> shorthand property.</p>\n\n          <live-demo id=full-demo>\n          <div contenteditable slot=\"css\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.card-container</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">flex-wrap</span><span class=\"token punctuation\">:</span> wrap<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">gap</span><span class=\"token punctuation\">:</span> 1rem<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 1rem<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><span class=\"token selector\">.progress-card</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 30ch<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 2rem<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 5px<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> solid 1px #f1f1f1<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> 0px 4px 6px -1px <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0.5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> 0px 2px 4px -1px <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0.2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #6c3d3d<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">--progress-total</span><span class=\"token punctuation\">:</span> #faebd1<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">--progress-indicator</span><span class=\"token punctuation\">:</span> #65ad60<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">--progress-indicator-height</span><span class=\"token punctuation\">:</span> 10%<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">--progress-card-background</span><span class=\"token punctuation\">:</span> #ffdc9b<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token function\">linear-gradient</span><span class=\"token punctuation\">(</span><br>        to right<span class=\"token punctuation\">,</span><br>        <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--progress-indicator<span class=\"token punctuation\">)</span> 0<span class=\"token punctuation\">,</span><br>        <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--progress-indicator<span class=\"token punctuation\">)</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--progress<span class=\"token punctuation\">,</span> 30%<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>        <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--progress-total<span class=\"token punctuation\">)</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--progress<span class=\"token punctuation\">,</span> 30%<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>        <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--progress-total<span class=\"token punctuation\">)</span> 100%<br>      <span class=\"token punctuation\">)</span> no-repeat 0 0/100% <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--progress-indicator-height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span><br>        --progress-card-background<br>      <span class=\"token punctuation\">)</span> no-repeat 0 0/100%<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token selector\">p</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> 600<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">font-style</span><span class=\"token punctuation\">:</span> italic<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n</div><div contenteditable slot=\"html\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>card-container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>progress-card<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">--progress</span><span class=\"token punctuation\">:</span>40%<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h4</span><span class=\"token punctuation\">></span></span>Collect 5 Boar meat<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h4</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>In progress: 2 of 5<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>progress-card<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">--progress</span><span class=\"token punctuation\">:</span>20%</span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h4</span><span class=\"token punctuation\">></span></span>Collect 5 pieces of Firewood<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h4</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>In progress: 1 of 5<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>progress-card<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">--progress</span><span class=\"token punctuation\">:</span>86%</span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h4</span><span class=\"token punctuation\">></span></span>Collect 7 Raptor feathers<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h4</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>In progress: 6 of 7<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>progress-card<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">--progress</span><span class=\"token punctuation\">:</span>60%</span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h4</span><span class=\"token punctuation\">></span></span>Collect five Iron ore<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h4</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>In progress: 6 of 10<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n</div></live-demo><p>Before today I've always shied away from full understanding all of the shorthand property capability that is baked into the background <code>attribute</code> but today I'm going to change that, let's work it out together, let's deconstruct this bit of css that constructs the progress indicator card together:</p>\n<copy-to-clipboard><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.progress-card</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token function\">linear-gradient</span><span class=\"token punctuation\">(</span><br>        to right<span class=\"token punctuation\">,</span><br>        #65ad60 0<span class=\"token punctuation\">,</span><br>        #65ad60 30%<span class=\"token punctuation\">,</span><br>        #faebd1 30%<span class=\"token punctuation\">,</span><br>        #faebd1 100%<br>      <span class=\"token punctuation\">)</span> no-repeat 0 0/100% 10%<span class=\"token punctuation\">,</span> #ffdc9b no-repeat 0 0/100%<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n</copy-to-clipboard><p>You might be thinking, why do this with a single css property? You could just do this with multiple css properties or html elements, heck even the built in <code>meter</code> html element. These things are all true however there may be some cases where just manipulating a single css property to create effects like this is handy:</p>\n<ul>\n<li>You're in a design system and you can only change the background property.</li>\n<li>You're in some system where you are unable to modify the HTML.</li>\n<li>It's fun.</li>\n</ul>\n<h2 id=\"breaking-down-the-css-background-property\">Breaking down the css background property <a class=\"direct-link\" href=\"#breaking-down-the-css-background-property\" aria-label=\"breaking down the css background property\"><span class=\"copy-link\"></span></a></h2>\n<p>Prior to experimenting to create this effect i'd never really gone into too much detail about the capabilities of the background property in css, but it is really quite fantastic! The fact that you can apply multiple backgrounds and their properties using a single css property is very powerful and not something i'd really appreciated before.</p>\n<p>To understand css snippet from above it would probably be a good idea to expand into using the non-shorthand background properties, to help understand and breakdown what's going on above:</p>\n<copy-to-clipboard><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.progress-card</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token function\">linear-gradient</span><span class=\"token punctuation\">(</span><br>        to right<span class=\"token punctuation\">,</span><br>        #65ad60 0<span class=\"token punctuation\">,</span><br>        #65ad60 30%<span class=\"token punctuation\">,</span><br>        #faebd1 30%<span class=\"token punctuation\">,</span><br>        #faebd1 100%<br>      <span class=\"token punctuation\">)</span> no-repeat 0 0/100% 10%<span class=\"token punctuation\">,</span> #ffdc9b no-repeat 0 0/100%<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n</copy-to-clipboard><p>is equivalent to:</p>\n<copy-to-clipboard><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.progress-card</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token function\">linear-gradient</span><span class=\"token punctuation\">(</span><br>    to right<span class=\"token punctuation\">,</span><br>    #65ad60 0<span class=\"token punctuation\">,</span><br>    #65ad60 30%<span class=\"token punctuation\">,</span><br>    #faebd1 30%<span class=\"token punctuation\">,</span><br>    #faebd1 100%<br>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #ffdc9b<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">background-size</span><span class=\"token punctuation\">:</span> 100% 10%<span class=\"token punctuation\">,</span> 100%<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">background-repeat</span><span class=\"token punctuation\">:</span> no-repeat<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n</copy-to-clipboard><p>What is going on is that we have two backgrounds:</p>\n<ul>\n<li>a <code>linear-gradient</code> which starts off green <code>#65ad60</code>, moving to the right and at 30% turns into light cream <code>#faebd1</code>.</li>\n<li>a block sand-like color of <code>#ffdc9b</code>.</li>\n</ul>\n<p>Note how we are separating the background with a comma <code>,</code>. The same is done for <code>background-size</code>. <code>background-repeat</code> has just one value because I want the same value for each background, but I could have done <code>background-repeat: no-repeat, no-repeat</code>.</p>\n<p>For the <code>background-size</code> property we first have width, followed by height. So the first background size says a width of 100% and a height of 10% which gives us the height of the progress bar. The <code>no-repeat</code> is important, without it the background would just duplicate itself until it filled 100% of the image, as repeat is the default. It's probably useful to note that you may have multiple background images too, which can be an image url or a gradient.</p>\n<h3 id=\"converting-to-shorthand\">Converting to shorthand <a class=\"direct-link\" href=\"#converting-to-shorthand\" aria-label=\"converting to shorthand\"><span class=\"copy-link\"></span></a></h3>\n<p>To convert the <code>background-image</code>, <code>background-color</code>, <code>background-size</code> and <code>background-repeat</code> to the shorthand <code>background</code> it's similar to the long form properties. There is a slightly different syntax for <code>background-size</code> as you also need to account for <code>background-position</code> which is a property which I have omitted from my long hand, it would be something like:</p>\n<copy-to-clipboard><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.progress-card</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token function\">linear-gradient</span><span class=\"token punctuation\">(</span><br>    to right<span class=\"token punctuation\">,</span><br>    #65ad60 0<span class=\"token punctuation\">,</span><br>    #65ad60 30%<span class=\"token punctuation\">,</span><br>    #faebd1 30%<span class=\"token punctuation\">,</span><br>    #faebd1 100%<br>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #ffdc9b<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">background-size</span><span class=\"token punctuation\">:</span> 100% 10%<span class=\"token punctuation\">,</span> 100%<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">background-repeat</span><span class=\"token punctuation\">:</span> no-repeat<span class=\"token punctuation\">;</span><br>  <span class=\"token comment\">/* this is the default */</span><br>  <span class=\"token property\">background-position</span><span class=\"token punctuation\">:</span> 0 0<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n</copy-to-clipboard><p>In order to specify the <code>background-size</code> when using the <code>background</code> shorthand you must also specify the position, to do this you separate the position and the size with a forward-slash <code>/</code>.</p>\n<p>For example, here is the first of the backgrounds:</p>\n<copy-to-clipboard><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">background</span><span class=\"token punctuation\">:</span> [image] [repeat] [position-x] [position-y] / [width] [height]<span class=\"token punctuation\">;</span></code></pre>\n</copy-to-clipboard><copy-to-clipboard><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.progress-card</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token function\">linear-gradient</span><span class=\"token punctuation\">(</span><br>      to right<span class=\"token punctuation\">,</span><br>      #65ad60 0<span class=\"token punctuation\">,</span><br>      #65ad60 30%<span class=\"token punctuation\">,</span><br>      #faebd1 30%<span class=\"token punctuation\">,</span><br>      #faebd1 100%<br>    <span class=\"token punctuation\">)</span> no-repeat 0 0/100% 10%<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n</copy-to-clipboard><p>Whilst writing this article I came across <a href=\"https://shrthnd.volume7.io/\" rel=\"noopener\" target=\"_blank\">this handy website</a> that generates the shorthand for you, test it out with the above css, you should get a single <code>background</code> property generated for you!</p>\n<blockquote>\n<p>Internally it looks like this website uses this package: <a href=\"https://github.com/frankmarineau/shrthnd.js\" rel=\"noopener\" target=\"_blank\">https://github.com/frankmarineau/shrthnd.js</a>.</p>\n</blockquote>\n<p>Hopefully you can now see how we got to the final css, by adding in the<code>background-color</code> and position values after a comma <code>,</code>.</p>\n<copy-to-clipboard><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token function\">linear-gradient</span><span class=\"token punctuation\">(</span><br>      to right<span class=\"token punctuation\">,</span><br>      #65ad60 0<span class=\"token punctuation\">,</span><br>      #65ad60 30%<span class=\"token punctuation\">,</span><br>      #faebd1 30%<span class=\"token punctuation\">,</span><br>      #faebd1 100%<br>    <span class=\"token punctuation\">)</span> no-repeat 0 0/100% 10%<span class=\"token punctuation\">,</span> #ffdc9b no-repeat 0 0/100%<span class=\"token punctuation\">;</span></code></pre>\n</copy-to-clipboard><p>There is a lot more to the css background property, as always, your best bet for research is <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/background\" rel=\"noopener\" target=\"_blank\">MDN</a>.</p>\n<h2 id=\"spicy-css-custom-properties\">Spicy CSS Custom properties <a class=\"direct-link\" href=\"#spicy-css-custom-properties\" aria-label=\"spicy css custom properties\"><span class=\"copy-link\"></span></a></h2>\n<p>Now we've had a play with the background property, let's see if we can make the css a little more useful, by introducing css custom properties we now have the possibility of re-using the same css with different values for percentage &quot;progress&quot;, or changing the background colors.</p>\n<blockquote>\n<p>If you are new to CSS Custom properties Kevin Powell does a great introduction over <a href=\"https://www.youtube.com/watch?v=PHO6TBq_auI\" rel=\"noopener\" target=\"_blank\">here</a>.</p>\n</blockquote>\n<copy-to-clipboard><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.progress-card</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 30ch<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 2rem<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 5px<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> solid 1px #f1f1f1<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> 0px 4px 6px -1px <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0.5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> 0px 2px 4px -1px <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0.2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #6c3d3d<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">--progress-total</span><span class=\"token punctuation\">:</span> #faebd1<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">--progress-indicator</span><span class=\"token punctuation\">:</span> #65ad60<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">--progress-indicator-height</span><span class=\"token punctuation\">:</span> 10%<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">--progress-card-background</span><span class=\"token punctuation\">:</span> #ffdc9b<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token function\">linear-gradient</span><span class=\"token punctuation\">(</span><br>        to right<span class=\"token punctuation\">,</span><br>        <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--progress-indicator<span class=\"token punctuation\">)</span> 0<span class=\"token punctuation\">,</span><br>        <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--progress-indicator<span class=\"token punctuation\">)</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--progress<span class=\"token punctuation\">,</span> 30%<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>        <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--progress-total<span class=\"token punctuation\">)</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--progress<span class=\"token punctuation\">,</span> 30%<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>        <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--progress-total<span class=\"token punctuation\">)</span> 100%<br>      <span class=\"token punctuation\">)</span> no-repeat 0 0/100% <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--progress-indicator-height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span><br>        --progress-card-background<br>      <span class=\"token punctuation\">)</span> no-repeat 0 0/100%<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n</copy-to-clipboard><copy-to-clipboard><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>card-container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>progress-card<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">--progress</span><span class=\"token punctuation\">:</span>40%<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h4</span><span class=\"token punctuation\">></span></span>Collect 5 Boar meat<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h4</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>In progress: 2 of 5<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>progress-card<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">--progress</span><span class=\"token punctuation\">:</span>20%</span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h4</span><span class=\"token punctuation\">></span></span>Collect 5 pieces of Firewood<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h4</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>In progress: 1 of 5<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>progress-card<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">--progress</span><span class=\"token punctuation\">:</span>86%</span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h4</span><span class=\"token punctuation\">></span></span>Collect 7 Raptor feathers<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h4</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>In progress: 6 of 7<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>progress-card<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">--progress</span><span class=\"token punctuation\">:</span>60%</span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h4</span><span class=\"token punctuation\">></span></span>Collect five Iron ore<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h4</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>In progress: 6 of 10<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n</copy-to-clipboard><p>Hopefully you can see how you can change the look of each &quot;card&quot; just by modifying the css custom property for that card only.</p>\n<p>Here is a live demo of the html and css: <a href=\"https://codepen.io/georgegriff/pen/RwZRBeJ\" rel=\"noopener\" target=\"_blank\">https://codepen.io/georgegriff/pen/RwZRBeJ</a></p>\n<h2 id=\"make-it-a-component\">Make it a component <a class=\"direct-link\" href=\"#make-it-a-component\" aria-label=\"make it a component\"><span class=\"copy-link\"></span></a></h2>\n<p>You could next choose to create a re-usable component, for example a Web Component, that could set the css custom properties and add appropriate aria attributes.</p>\n<p>It's important to note that this css-based progress indicator is purely decoration, you will want to ensure that users with screen readers are able to understand what the component is conveying, using aria attributes in your HTML, or appropriate text labels.</p>\n<blockquote>\n<p>You can learn about ARIA basics on MDN <a href=\"https://developer.mozilla.org/en-US/docs/Learn/Accessibility/WAI-ARIA_basics\" rel=\"noopener\" target=\"_blank\">here</a>.</p>\n</blockquote>\n<p>Thank you for reading! If you want to read more of my work, please follow me on Twitter <a href=\"https://twitter.com/griffadev\" rel=\"noopener\" target=\"_blank\">@griffadev</a>, or get me a <a href=\"https://ko-fi.com/griffadev\" rel=\"noopener\" target=\"_blank\">coffee</a> if you feel like it ☕.</p>\n",
      "date_published": "2021-10-19T00:00:00+00:00"
    },{
      "id": "https://griffa.dev/posts/scheduled-builds-a-for-website-on-netlify/",
      "url": "https://griffa.dev/posts/scheduled-builds-a-for-website-on-netlify/",
      "title": "Scheduled builds a for website on Netlify",
      "tags": ["Netlify","GithubActions","CircleCI","ContinuousIntegration"],
      "summary": "Sometimes you might want to periodically build your website on Netlify, the answer isn&#39;t that straight forward and some tools have gotchas.",
      "content_html": "<p>I recently launched a re-write of my brothers Guitar teaching business website: <a href=\"https://www.cgguitar.co.uk\" rel=\"noopener\" target=\"_blank\">cgguitar.co.uk</a>, during this rewrite I implemented a feature where I wanted to <a href=\"https://griffa.dev/posts/adding-dynamic-content-from-an-api-to-a-static-website-at-build-time/\">fetch YouTube playlists at build time</a>.</p>\n<p>To achieve my goals, I wanted to scheduled builds of my Netlify website periodically.<br>\nNetlify doesn't have this feature built in, however what Netlify does have is a 'webhook' which you can call trigger to your build.</p>\n<p>In this post I offer two ways to trigger this build, using Github Actions or CircleCI. Using Github Actions can have a significant downside, depending on the use case, continue read to find more about that!</p>\n<h2 id=\"finding-your-build-hook-in-netlify\">Finding your build hook in Netlify <a class=\"direct-link\" href=\"#finding-your-build-hook-in-netlify\" aria-label=\"finding your build hook in netlify\"><span class=\"copy-link\"></span></a></h2>\n<p>Login to Netlify and navigate to your site settings and local the &quot;Build &amp; deploy&quot; section, your build hook will be in there.</p>\n<p><figure>\n        <div class=\"img-wrap\" ><img src=\"/images/netlify-build-hook.png\" alt=\"Netlify build hook\">\n        <figcaption>Netlify build hook</figcaption>\n      </div>\n      </figure></p>\n<p>You can test this out by making a curl request in your terminal, you should see it trigger your Netlify website build:</p>\n<copy-to-clipboard><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> -X POST -d <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> https://api.netlify.com/build_hooks/<span class=\"token variable\">$NETLIFY_BUILD_HOOK_TOKEN</span></code></pre>\n</copy-to-clipboard><blockquote>\n<p>Important: Ensure you keep <code>NETLIFY_BUILD_HOOK_TOKEN</code> secret, otherwise anyone can call your build and potentially cause you to go over your build quota.</p>\n</blockquote>\n<h2 id=\"can-github-actions-do-this%3F\">Can Github Actions do this? <a class=\"direct-link\" href=\"#can-github-actions-do-this%3F\" aria-label=\"can github actions do this%3F\"><span class=\"copy-link\"></span></a></h2>\n<p>Github actions let you perform continuous integration in Github, they seem like a perfect fit here...</p>\n<p>In your Github repository, in the following folder <code>.github/workflows</code>, you could create:</p>\n<copy-to-clipboard><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Scheduled build<br><span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span><br>  <span class=\"token key atrule\">schedule</span><span class=\"token punctuation\">:</span><br>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">cron</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"00 15 * * *\"</span><br><span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span><br>  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span><br>    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest<br>    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span><br>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Trigger our build webhook on Netlify<br>        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> curl <span class=\"token punctuation\">-</span>s <span class=\"token punctuation\">-</span>X POST \"https<span class=\"token punctuation\">:</span>//api.netlify.com/build_hooks/$<span class=\"token punctuation\">{</span>TOKEN<span class=\"token punctuation\">}</span>\"<br>        <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span><br>          <span class=\"token key atrule\">TOKEN</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.NETLIFY_BUILD_HOOK_TOKEN <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></code></pre>\n</copy-to-clipboard><p>The above configuration will run every day at around 15:00.</p>\n<p>You will want to secure your <code>build_hook</code> token in a secret on Github.</p>\n<p>I did this originally and thought job done right? Well, not quite.</p>\n<blockquote>\n<p>Github Actions are disabled on projects after 60 days if there is no activity on the repository, meaning bye bye scheduled builds.</p>\n</blockquote>\n<p>The above limitation might be okay, depending on your use case, but for my case where I wanted to make sure I was fetching the latest videos from a YouTube playlist, this was no good because the website's code itself may not be updating very often, but there may be new videos added.</p>\n<h2 id=\"using-circleci-instead\">Using CircleCI instead <a class=\"direct-link\" href=\"#using-circleci-instead\" aria-label=\"using circleci instead\"><span class=\"copy-link\"></span></a></h2>\n<p>One alternative to Github actions is to use CircleCI to do this instead, it has a generous free tier too so there should be no charge for this.</p>\n<p>You can create a configuration like this:</p>\n<ul>\n<li>Create a folder in your Git repository called <code>.circleci</code></li>\n<li>Create a file called <code>config.yml</code></li>\n</ul>\n<p>Populate the <code>config.yml</code> with something like the following (you can use a different image if you wish). This will build every day at 3PM.</p>\n<copy-to-clipboard><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><br><br><span class=\"token key atrule\">defaults</span><span class=\"token punctuation\">:</span> <span class=\"token important\">&amp;defaults</span><br>  <span class=\"token key atrule\">machine</span><span class=\"token punctuation\">:</span><br>    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> circleci/classic<span class=\"token punctuation\">:</span>201710<span class=\"token punctuation\">-</span><span class=\"token number\">02</span><br>  <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span><br>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> curl <span class=\"token punctuation\">-</span>X POST <span class=\"token punctuation\">-</span>d <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> https<span class=\"token punctuation\">:</span>//api.netlify.com/build_hooks/$NETLIFY_BUILD_HOOK_TOKEN<br><br><span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span><br>  <span class=\"token key atrule\">docker</span><span class=\"token punctuation\">:</span><br>    <span class=\"token key atrule\">&lt;&lt;</span><span class=\"token punctuation\">:</span> <span class=\"token important\">*defaults</span><br><br><span class=\"token key atrule\">workflows</span><span class=\"token punctuation\">:</span><br>  <span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><br><br>  <span class=\"token key atrule\">autobuild</span><span class=\"token punctuation\">:</span><br>    <span class=\"token key atrule\">triggers</span><span class=\"token punctuation\">:</span><br>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">schedule</span><span class=\"token punctuation\">:</span><br>          <span class=\"token key atrule\">cron</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"0 14 * * *\"</span><br>          <span class=\"token key atrule\">filters</span><span class=\"token punctuation\">:</span><br>            <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span><br>              <span class=\"token key atrule\">only</span><span class=\"token punctuation\">:</span><br>                <span class=\"token punctuation\">-</span> main<br>    <span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span><br>      <span class=\"token punctuation\">-</span> docker</code></pre>\n</copy-to-clipboard><p>Now you can create a project in CircleCI and you should be able to test your build.<br>\n<code>NETLIFY_BUILD_HOOK_TOKEN</code> will need to be set as an environment variable, in a similar way to Github, in the setting of CircleCI for your project.</p>\n<p><figure>\n        <div class=\"img-wrap\" ><img src=\"/images/circle-ci-build.png\" alt=\"CircleCI scheduled build\">\n        <figcaption>CircleCI scheduled build</figcaption>\n      </div>\n      </figure></p>\n<p>If you want to read more of my work, please follow me on Twitter <a href=\"https://twitter.com/griffadev\" rel=\"noopener\" target=\"_blank\">@griffadev</a>, or get me a <a href=\"https://ko-fi.com/griffadev\" rel=\"noopener\" target=\"_blank\">coffee</a> if you feel like it ☕.</p>\n",
      "date_published": "2021-06-21T00:00:00+00:00"
    },{
      "id": "https://griffa.dev/posts/adding-dynamic-content-from-an-api-to-a-static-website-at-build-time/",
      "url": "https://griffa.dev/posts/adding-dynamic-content-from-an-api-to-a-static-website-at-build-time/",
      "title": "Adding dynamic content from an API to a static website at build time",
      "tags": ["11ty","HTML","JavaScript","WebComponents"],
      "summary": "You may not need client side JavaScript to add dynamic content from an API. In this article I will show the approach I recently took to embed YouTube playlists into an website created by a static site generator (Elventy), and how this approach lends itself to less JavaScript and progressive enhancement.",
      "content_html": "<p>I recently launched a re-write of my brothers Guitar teaching business website: <a href=\"https://www.cgguitar.co.uk\" rel=\"noopener\" target=\"_blank\">cgguitar.co.uk</a>, during this rewrite I had some guiding principles which I believe are best practices when building any website:</p>\n<ul>\n<li>Use the right tool for the job. You don't need a metric-ton of JavaScript for most websites minimum user experiences.</li>\n<li>Provide a great baseline experience with No JavaScript whatsoever.</li>\n<li>Limit the number of calls to external services to keep the page load fast.</li>\n</ul>\n<p>In this post I'll describe my approach to getting embedded YouTube playlist content into the website, at build time, reducing the number calls to YouTube client side to only the embedded video and thumbnails, no calls out to the YouTube Data API. In addition to this, i'll show you how you can keep the site up to date with easy to configure cron jobs (scheduled builds).</p>\n<p>The feature that I built, that I will explain, is an embedded YouTube playlist component which fetches all the data and stats for YouTube playlists at build time and renders their video metadata/thumbnails directly into the HTML. You can check out the feature live over at <a href=\"https://www.cgguitar.co.uk/videos/#guitar-lessons\" rel=\"noopener\" target=\"_blank\">https://www.cgguitar.co.uk/videos/#guitar-lessons</a>.</p>\n<p><figure>\n        <div class=\"img-wrap\" ><img src=\"/images/cg-guitar-videos.png\" alt=\"Embedded YouTube Playlists in the CG Guitar website\">\n        <figcaption>The YouTube Playlists feature I built with this technique.</figcaption>\n      </div>\n      </figure></p>\n<h2 id=\"the-problem-with-client-side\">The problem with client side <a class=\"direct-link\" href=\"#the-problem-with-client-side\" aria-label=\"the problem with client side\"><span class=\"copy-link\"></span></a></h2>\n<p>Calling out to external APIs/services from your client side JavaScript can introduce you many problems, to name a few:</p>\n<p><strong>Security</strong> - if you want to hide your token or keep it secure you either have to:</p>\n<ul>\n<li>Ensure your token only works on your websites domain, but this doesn't stop people using it from outside of a web browser.</li>\n<li>Add some complex proxy set up where you hide the token on a server you manage, requires having a server or proxy configuration.</li>\n</ul>\n<p><strong>Rate limiting/charges</strong> - most APIs have limits to the number of API calls you can make, or will start charging you for usage:</p>\n<ul>\n<li>Your website content doesn't scale, each visitor would be using your token to call the external services for every visit.</li>\n<li>You could end up incurring accidental charges!</li>\n</ul>\n<p><strong>JavaScript needed</strong> - In order to show the data you want to show to user, you need to serve JavaScript to your users:</p>\n<ul>\n<li>Depending on Network speed or the amount of JavaScript on the page the user has to wait for the JS to download before seeing any content.</li>\n<li>A user may choose to disable JavaScript.</li>\n<li>JavaScript may fail to load entirely, rendering a useless experience to users.</li>\n</ul>\n<h2 id=\"moving-your-calls-to-external-apis-to-build-time\">Moving your calls to external APIs to build time <a class=\"direct-link\" href=\"#moving-your-calls-to-external-apis-to-build-time\" aria-label=\"moving your calls to external apis to build time\"><span class=\"copy-link\"></span></a></h2>\n<p>This is approach is not a silver bullet, not every feature would support this, e.g. if you want to work with user submitted content.<br>\nHowever, if all you are showing is content that changes infrequently, moving the data fetching to build time can be a really great solution.</p>\n<p>The static site I built for my brothers' business uses <a href=\"https://11ty.dev\" rel=\"noopener\" target=\"_blank\">Eleventy</a>, a fantastic static site generator.<br>\nI wrote about getting started with 11ty in <a href=\"https://griffa.dev/posts/how-i-got-started-with-11ty/\">How I got started with 11ty</a>.</p>\n<p>The next section will assume some knowledge about 11ty, or static site generators in general.</p>\n<p>11ty has a plugin called <a href=\"https://www.11ty.dev/docs/plugins/cache/\" rel=\"noopener\" target=\"_blank\">@11ty/eleventy-cache-assets</a> which you can use to fetch any data you like.</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> Cache <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"@11ty/eleventy-cache-assets\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>module<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">let</span> url <span class=\"token operator\">=</span> <span class=\"token string\">\"https://api.github.com/repos/11ty/eleventy\"</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/* This returns a promise */</span><br>  <span class=\"token keyword\">return</span> <span class=\"token function\">Cache</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br>    duration<span class=\"token operator\">:</span> <span class=\"token string\">\"1d\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// save for 1 day</span><br>    type<span class=\"token operator\">:</span> <span class=\"token string\">\"json\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// we’ll parse JSON for you</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n</copy-to-clipboard><p>The awesome thing about this plugin is that once the data is fetched it is cached so future local builds do not have to re-fetch data, meaning your builds can remain lightning fast which is a common characteristic of any 11ty project.</p>\n<h2 id=\"embedding-youtube-playlists-at-build-time\">Embedding YouTube playlists at build time <a class=\"direct-link\" href=\"#embedding-youtube-playlists-at-build-time\" aria-label=\"embedding youtube playlists at build time\"><span class=\"copy-link\"></span></a></h2>\n<p>For my feature I decided I wanted to be able to pick and choose which YouTube playlists that I wanted to show in the website, it is however possible to fetch all YouTube playlists for an account too. I wanted to be able to choose so that I could add, order and describe new playlists in my CMS (Netlify CMS).</p>\n<p>The playlists in the website are defined as markdown in the code in a folder named <a href=\"https://github.com/Georgegriff/cgguitar-site/tree/main/src/playlists\" rel=\"noopener\" target=\"_blank\">playlists</a>, Netlify CMS is configured to <a href=\"https://github.com/Georgegriff/cgguitar-site/blob/178a8ae66a4b22f4566dfe579b748369abf0f297/admin/config.yml#L649\" rel=\"noopener\" target=\"_blank\">read these files</a> e.g:</p>\n<copy-to-clipboard><pre class=\"language-md\"><code class=\"language-md\"><span class=\"token front-matter-block\"><span class=\"token punctuation\">---</span><br><span class=\"token font-matter yaml language-yaml\">title: Beginner guitar lessons<br>name: beginner-guitar-lessons<br>id: PLA0cAQ-2uoeoJoFfUz9oq9qhmlnsjFRhU</span><br><span class=\"token punctuation\">---</span></span></code></pre>\n</copy-to-clipboard><p><figure>\n        <div class=\"img-wrap\" ><img src=\"/images/netlify-cms-videos.png\" alt=\"Netlify CMS showing defined playlists\">\n        <figcaption>Each of these entries contains a name, id and description.</figcaption>\n      </div>\n      </figure></p>\n<p>The first step to getting my playlists into 11ty is to define them as a collection, to do this inside of the <code>src/playlists</code> folder I create a <a href=\"https://github.com/Georgegriff/cgguitar-site/blob/main/src/playlists/playlists.json\" rel=\"noopener\" target=\"_blank\">playlists.json</a>.</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span><br>    <span class=\"token string\">\"tags\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"playlist\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"permalink\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><br><span class=\"token punctuation\">}</span></code></pre>\n</copy-to-clipboard><p>This creates an 11ty collection of all of the playlists, with their &quot;id&quot;, &quot;name&quot; and &quot;descriptions&quot;.</p>\n<p>Inside of my videos page I can then work with this collection in my Nunjucks template:</p>\n<copy-to-clipboard><pre class=\"language-html\"><code class=\"language-html\">{%- if collections.playlists %} {%- asyncEach collections.playlist in playlists<br>| fetchYouTubePlaylists %} {%- include 'partials/video-playlist.njk' %} {%-<br>endeach %} {%- endif %}</code></pre>\n</copy-to-clipboard><blockquote>\n<p>If you are unfamiliar with template languages in 11ty you can read about them over <a href=\"https://www.11ty.dev/docs/templates/\" rel=\"noopener\" target=\"_blank\">here</a>.</p>\n</blockquote>\n<p>I'll show what <code>partials/video-playlist.njk</code> is later on in the article.</p>\n<p><code>fetchYouTubePlaylists</code> is where the magic happens and where we will start to use <code>@11ty/eleventy-cache-assets</code>.<br>\nThis is an 11ty filter which is defined in my <code>.eleventy.js</code> config file.</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\">eleventyConfig<span class=\"token punctuation\">.</span><span class=\"token function\">addNunjucksAsyncFilter</span><span class=\"token punctuation\">(</span><br>  <span class=\"token string\">\"fetchYouTubePlaylists\"</span><span class=\"token punctuation\">,</span><br>  <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">playlists<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getPlaylists</span><span class=\"token punctuation\">(</span>playlists<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</copy-to-clipboard><p>Let's take a dive a layer deeper: <code>getPlaylists</code> is making a call to <code>getPlaylistItem</code> which is where I'm actually doing the data caching.</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">getPlaylists</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">playlists</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>playlists<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br>  <span class=\"token keyword\">const</span> lists <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><br>    playlists<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">,</span> title<span class=\"token punctuation\">,</span> description <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">const</span> content <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getPlaylistItem</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><br>        title<span class=\"token punctuation\">,</span><br>        id<span class=\"token punctuation\">,</span><br>        description<span class=\"token punctuation\">,</span><br>        link<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">https://www.youtube.com/playlist?list=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span><br>        <span class=\"token operator\">...</span><span class=\"token punctuation\">(</span>content <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">return</span> lists<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n</copy-to-clipboard><p>This function is looping through all of my playlists and fetching the items (videos) in that playlist. It is also adding the name, description and direct link to YouTube for the whole playlist.</p>\n<p>Now for <code>getPlaylistItem</code>:</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getPlaylistItem</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">playlistId</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">const</span> apiUrl <span class=\"token operator\">=</span> <span class=\"token string\">\"https://www.googleapis.com/youtube/v3/playlistItems\"</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">const</span> maxResults <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">const</span> order <span class=\"token operator\">=</span> <span class=\"token string\">\"viewCount\"</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>apiUrl<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">?key=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>apiKey<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&amp;part=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">encodeURIComponent</span><span class=\"token punctuation\">(</span><br>    <span class=\"token string\">\"snippet,contentDetails\"</span><br>  <span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&amp;type=video%2C%20playlist&amp;maxResults=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>maxResults<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&amp;playlistId=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>playlistId<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&amp;order=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>order<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br><br>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Fetching YouTube videos for playlist: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>playlistId<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">const</span> videos <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">Cache</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br>    duration<span class=\"token operator\">:</span> <span class=\"token string\">\"1d\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 1 day</span><br>    type<span class=\"token operator\">:</span> <span class=\"token string\">\"json\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// also supports \"text\" or \"buffer\"</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">const</span> videoIds <span class=\"token operator\">=</span> videos<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><br>    <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> contentDetails <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> contentDetails<span class=\"token punctuation\">.</span>videoId<br>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">const</span> metaInfo <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetchMetaInfo</span><span class=\"token punctuation\">(</span>videoIds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><br>    videos<span class=\"token operator\">:</span> <span class=\"token keyword\">await</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><br>      videos<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> snippet<span class=\"token punctuation\">,</span> contentDetails <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">const</span> hqThumbnail <span class=\"token operator\">=</span><br>          snippet<span class=\"token punctuation\">.</span>thumbnails<span class=\"token punctuation\">.</span>maxres <span class=\"token operator\">||</span><br>          snippet<span class=\"token punctuation\">.</span>thumbnails<span class=\"token punctuation\">.</span>high <span class=\"token operator\">||</span><br>          snippet<span class=\"token punctuation\">.</span>thumbnails<span class=\"token punctuation\">.</span>medium <span class=\"token operator\">||</span><br>          snippet<span class=\"token punctuation\">.</span>thumbnails<span class=\"token punctuation\">.</span>default<span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">const</span> smallThumbnail <span class=\"token operator\">=</span><br>          snippet<span class=\"token punctuation\">.</span>thumbnails<span class=\"token punctuation\">.</span>medium <span class=\"token operator\">||</span> snippet<span class=\"token punctuation\">.</span>thumbnails<span class=\"token punctuation\">.</span>default<span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">const</span> defaultThumbnail <span class=\"token operator\">=</span> snippet<span class=\"token punctuation\">.</span>thumbnails<span class=\"token punctuation\">.</span>high<span class=\"token punctuation\">;</span><br><br>        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><br>          hqThumbnail<span class=\"token punctuation\">,</span><br>          smallThumbnail<span class=\"token punctuation\">,</span><br>          defaultThumbnail<span class=\"token punctuation\">,</span><br>          channelTitle<span class=\"token operator\">:</span> snippet<span class=\"token punctuation\">.</span>channelTitle<span class=\"token punctuation\">,</span><br>          channelId<span class=\"token operator\">:</span> snippet<span class=\"token punctuation\">.</span>channelId<span class=\"token punctuation\">,</span><br>          title<span class=\"token operator\">:</span> snippet<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span><br>          id<span class=\"token operator\">:</span> contentDetails<span class=\"token punctuation\">.</span>videoId<span class=\"token punctuation\">,</span><br>          <span class=\"token operator\">...</span><span class=\"token punctuation\">(</span>metaInfo<span class=\"token punctuation\">[</span>contentDetails<span class=\"token punctuation\">.</span>videoId<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    hasMore<span class=\"token operator\">:</span> <span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span>videos<span class=\"token punctuation\">.</span>nextPageToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n</copy-to-clipboard><p>The first few things this function does is:</p>\n<ul>\n<li>Set base url for YouTube API: <a href=\"https://www.googleapis.com/youtube/v3/playlistItems\" rel=\"noopener\" target=\"_blank\">https://www.googleapis.com/youtube/v3/playlistItems</a></li>\n<li>Set the max number of items in a playlist to return on a page</li>\n<li>Pass in APIKey and build up url in accordance with the <a href=\"https://developers.google.com/youtube/v3/docs/playlistItems/list\" rel=\"noopener\" target=\"_blank\">API Docs</a>.</li>\n</ul>\n<blockquote>\n<p>You will want to store your API key as an environment variable e.g. <code>const apiKey = process.env.YT_API_KEY;</code>. For production you can add this environment variable where ever you choose to build/host the site e.g. on Netlify.</p>\n</blockquote>\n<p>Next up it fetches some extra metadata. <code>fetchMetaInfo</code> fetches things like view count and likes, this is another API call which we would be concerned about if this was client side, but since it's build time, who cares!<br>\nImplementation available on <a href=\"https://github.com/Georgegriff/cgguitar-site/blob/178a8ae66a4b22f4566dfe579b748369abf0f297/src/_filters/youtube.js#L57\" rel=\"noopener\" target=\"_blank\">Github</a>.</p>\n<p>Finally I'm looping through all the data and returning an array of <code>videos</code> for each playlist and a flag <code>hasMore</code> if the playlist has more than then 20 items shown. In my HTML when I see this flag I add an link out to YouTube to watch the full playlist.</p>\n<p>The above code a modified version of the original, where I'm doing a a few extra things you can checkout the full version on <a href=\"https://github.com/Georgegriff/cgguitar-site/blob/178a8ae66a4b22f4566dfe579b748369abf0f297/src/_filters/youtube.js#L6\" rel=\"noopener\" target=\"_blank\">Github</a>.</p>\n<h2 id=\"progressive-enhancement\">Progressive Enhancement <a class=\"direct-link\" href=\"#progressive-enhancement\" aria-label=\"progressive enhancement\"><span class=\"copy-link\"></span></a></h2>\n<p>Now I have the website fetching the external data, let's see how I could approach displaying the content in the HTML.</p>\n<p>When designing an dynamic experience its a good idea to think about what is the minimal experience you can provide without needing JavaScript, and build from there.<br>\nYou could start out very simply and just load a link <code>&lt;a&gt;</code> to the YouTube videos, perhaps the thumbnail could open a tab to YouTube, this needs no JS at all, and is what I did:</p>\n<copy-to-clipboard><pre class=\"language-html\"><code class=\"language-html\">{%- if playlist -%}<br> {%- set firstVideo = playlist.videos[0] -%}<br> {%- set description = playlist.description or (playlist.templateContent | safe) %}<br>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>youtube-playlist</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{playlist.title | slug }}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>         <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fallback<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">slot</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fallback<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>img-btn-wrapper<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">decoding</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>async<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">loading</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>lazy<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{firstVideo.hqThumbnailWidth}}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{firstVideo.hqThumbnaillWdith}}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{firstVideo.hqThumbnailUrl}}<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>noopener<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Play playlist: {{playlist.title}}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>_blank<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{playlist.link}}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><br>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>        {%- for video in playlist.videos -%}<br>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">{{helpers.spread(video,</span> <span class=\"token attr-name\">\"data-\")</span> <span class=\"token attr-name\">|</span> <span class=\"token attr-name\">safe}}</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><br>        {%- endfor -%}<br>        {%- if playlist.hasMore -%}<br>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">slot</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>more-link<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{playlist.link}}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Watch more on YouTube.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><br>        {%- endif -%}<br>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>youtube-playlist</span><span class=\"token punctuation\">></span></span><br>{%- endif -%}</code></pre>\n</copy-to-clipboard><p>You will see that I'm wrapping the whole code in a <code>youtube-playlist</code> Custom Element.<br>\nWhen the component loads without JavaScript it is just a link out to YouTube, which is then upgraded to a full playlist experience. This will disable the default &quot;link&quot; behavior too.</p>\n<p>I'm not going to go into the implementation of my Web Component in this post but you can check out the source code on <a href=\"https://github.com/Georgegriff/cgguitar-site/blob/178a8ae66a4b22f4566dfe579b748369abf0f297/src/scripts/components/youtube-playlist/YoutubePlaylist.js\" rel=\"noopener\" target=\"_blank\">Github</a>. The general idea is to consume <code>&lt;li&gt;</code> list items as child content inside of my <code>&lt;youtube-playlist&gt;</code> and when JavaScript loads move this content in the Shadow DOM, and make them look pretty/interactive.</p>\n<p>Here is my full Nunjucks template for my html:</p>\n<copy-to-clipboard><pre class=\"language-html\"><code class=\"language-html\">{%- if playlist -%}<br> {%- set firstVideo = playlist.videos[0] -%}<br> {%- set description = playlist.description or (playlist.templateContent | safe) %}<br>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>youtube-playlist</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{playlist.title | slug }}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">slot</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>heading<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#{{playlist.title | slug }}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>{{playlist.title | safe}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><br>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">slot</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>description<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{description}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br>         <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fallback<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">slot</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fallback<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>img-btn-wrapper<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">decoding</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>async<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">loading</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>lazy<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{firstVideo.hqThumbnailWidth}}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{firstVideo.hqThumbnaillWdith}}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{firstVideo.hqThumbnailUrl}}<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>svg</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">pointer-events</span><span class=\"token punctuation\">:</span>none<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>playbtn<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2000/svg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">viewBox</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0 0 32 32<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>g</span> <span class=\"token attr-name\">transform</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>translate(-339 -150.484)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>path</span> <span class=\"token attr-name\">fill</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>var(--White, #fff)<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>M-1978.639,24.261h0a1.555,1.555,0,0,1-1.555-1.551V9.291a1.555,1.555,0,0,1,1.555-1.551,1.527,1.527,0,0,1,.748.2l11.355,6.9a1.538,1.538,0,0,1,.793,1.362,1.526,1.526,0,0,1-.793,1.348l-11.355,6.516A1.52,1.52,0,0,1-1978.639,24.261Z<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">transform</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>translate(2329 150.484)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span><br>                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>path</span> <span class=\"token attr-name\">fill</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>var(--Primary, #000)<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>M16.563.563a16,16,0,1,0,16,16A16,16,0,0,0,16.563.563Zm7.465,17.548L12.672,24.627a1.551,1.551,0,0,1-2.3-1.355V9.853a1.552,1.552,0,0,1,2.3-1.355l11.355,6.9A1.553,1.553,0,0,1,24.027,18.111Z<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">transform</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>translate(338.438 149.922)<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>g</span><span class=\"token punctuation\">></span></span><br>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>svg</span><span class=\"token punctuation\">></span></span><br>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>noopener<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Play playlist: {{playlist.title}}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>_blank<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{playlist.link}}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><br>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>        {%- for video in playlist.videos -%}<br>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">{{helpers.spread(video,</span> <span class=\"token attr-name\">\"data-\")</span> <span class=\"token attr-name\">|</span> <span class=\"token attr-name\">safe}}</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><br>        {%- endfor -%}<br>        {%- if playlist.hasMore -%}<br>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">slot</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>more-link<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{playlist.link}}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Watch more on YouTube.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><br>        {%- endif -%}<br>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>youtube-playlist</span><span class=\"token punctuation\">></span></span><br>{%- endif -%}</code></pre>\n</copy-to-clipboard><p>Using Web Components like this is a perfect way of enhancing a base HTML experience with limited JavaScript.</p>\n<h2 id=\"periodically-building-your-website\">Periodically building your website <a class=\"direct-link\" href=\"#periodically-building-your-website\" aria-label=\"periodically building your website\"><span class=\"copy-link\"></span></a></h2>\n<p>In order to keep the YouTube playlists up to date I want to be able to build the website every day on schedule.</p>\n<p>There are many options when it comes to periodically building a website, I wrote about my approach to doing this in: <a href=\"https://griffa.dev/posts/scheduling-builds-on-netlify/\">Scheduling builds on Netlify</a>. In brief, I opted to use Circle CI to call my Netlify build hook every day at 3 PM. I tried Github Actions but there is a major limitation to using an Action for this use case, which I go into in the linked article.</p>\n<h2 id=\"summary\">Summary <a class=\"direct-link\" href=\"#summary\" aria-label=\"summary\"><span class=\"copy-link\"></span></a></h2>\n<p>I hope this article was helpful and you can see some of the advantages to moving dynamic content that changes infrequently to be rendered at build time.</p>\n<p>If you want to read more of my work, please follow me on Twitter <a href=\"https://twitter.com/griffadev\" rel=\"noopener\" target=\"_blank\">@griffadev</a>, or get me a <a href=\"https://ko-fi.com/griffadev\" rel=\"noopener\" target=\"_blank\">coffee</a> if you feel like it ☕.</p>\n",
      "date_published": "2021-06-21T00:00:00+00:00"
    },{
      "id": "https://griffa.dev/posts/natural-language-search-for-blog-posts-using-tensorflowjs/",
      "url": "https://griffa.dev/posts/natural-language-search-for-blog-posts-using-tensorflowjs/",
      "title": "Natural language search for blog posts using TensorflowJS",
      "tags": ["JavaScript","MachineLearning","TensorflowJS","11ty"],
      "summary": "I&#39;ve been learning TensorflowJS and Machine Learning, as an experiment, I thought I would implement a search across my current blog posts using sentence similarity on natural language, running in the browser.",
      "content_html": "<!-- needed so example runs!! -->\n<script src=\"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@latest\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/@tensorflow-models/universal-sentence-encoder\"></script>\n<p>In this post i'll go into how you can get started using pre-trained Tensorflow models to do Machine learning in the browser, examine some of the potential gotchas, such as not blocking the main thread with custom logic and consider the impact of the size of models on UX.</p>\n<p>The demo that I developed as part of this article is a &quot;search engine&quot; using my blog posts as a data set, which I converted into an API, the idea being: can I find blog posts based on a search query by a user, by comparing the similarity of the query with a blog posts title and description?</p>\n<p>Search is a solved problem and there are better ways of achieving the same thing, but I created this to learn and to have a bit of fun!</p>\n<p>If you want to check out a live demo for what I built in this post, I've <a href=\"https://griffa.dev/demos/natural-language-search/\" target=\"_blank\">hosted it on my website</a>.</p>\n<h2 id=\"sentence-similarity-with-tensorflowjs\">Sentence similarity with TensorflowJS <a class=\"direct-link\" href=\"#sentence-similarity-with-tensorflowjs\" aria-label=\"sentence similarity with tensorflowjs\"><span class=\"copy-link\"></span></a></h2>\n<p>I'm going to explain how this all works with a smaller example rather than the full demo that I linked earlier, but the source code for the example is available on <a href=\"https://github.com/Georgegriff/griffadev/tree/main/src/demos/natural-language-search\" rel=\"noopener\" target=\"_blank\">Github</a>, it's the same code, just with things like UI simplified.</p>\n<p>First up, let's load in the library we are going to use. We're just going to load them from a CDN, when you're just experimenting, you don't want to be messing around with build processes.</p>\n<p>Create a HTML file called <code>index.html</code>, with the following content:</p>\n<copy-to-clipboard><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">http-equiv</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>X-UA-Compatible<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>IE=edge<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Blog post search<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@latest<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.jsdelivr.net/npm/@tensorflow-models/universal-sentence-encoder<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>module<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>index.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n</copy-to-clipboard><p>We're loading in two libraries here, the first is TensorflowJS and the second is a the Universal Sentence Encoder model, which uses TensforflowJS, you can read about <a href=\"https://github.com/tensorflow/tfjs-models/tree/master/universal-sentence-encoder\" rel=\"noopener\" target=\"_blank\">over here</a>.</p>\n<blockquote>\n<p>If you want to code along, host your files on a local dev server. I personally recommend the <a href=\"https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer\" rel=\"noopener\" target=\"_blank\">Live Server VS Code extension</a>.</p>\n</blockquote>\n<p>Next, create <code>index.js</code> add the following code:</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// IIFE - because no top level await in all browsers at time of writing.</span><br><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token comment\">// download the model</span><br>  <span class=\"token keyword\">const</span> model <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> use<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">const</span> blogPosts <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><br>    <span class=\"token string\">\"How I got started with 11ty\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"Building a responsive, progressively enhanced, masonry layout with only CSS and HTML\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"Using the Web Share API and meta tags, for simple native sharing\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"Tips for debugging in 11ty\"</span><span class=\"token punctuation\">,</span><br>  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">const</span> userQuery <span class=\"token operator\">=</span> <span class=\"token string\">\"Sharing to social media\"</span><span class=\"token punctuation\">;</span><br>  <span class=\"token comment\">// embed the user input and the blog posts using the model -  explained next!</span><br>  <span class=\"token keyword\">const</span> blogPostsTensor <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> model<span class=\"token punctuation\">.</span><span class=\"token function\">embed</span><span class=\"token punctuation\">(</span>blogPosts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">const</span> userInputTensor <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> model<span class=\"token punctuation\">.</span><span class=\"token function\">embed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>userQuery<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</copy-to-clipboard><blockquote>\n<p>In Chrome, and other browsers soon, you won't need to wrap the code in an IIFE because you could use <a href=\"https://caniuse.com/?search=top%20level%20await\" rel=\"noopener\" target=\"_blank\">top level await instead</a>.</p>\n</blockquote>\n<p>This code is loading the model, and then passing our <code>userQuery</code> of &quot;Sharing to social media&quot; and our array of <code>blogPosts</code> into the model.<br>\nDoing this converts the sentences into vectors (arrays) with 512 entries in the vector for each sentence, this is how the model sees the sentence.<br>\nUniversal sentence encoder has been trained on a large vocabulary and is encoding the provided data based on the data it saw during training.</p>\n<p>To help make this a bit clearer, <code>blogPostsTensor</code> and <code>userInputTensor</code> will be an instance of <a href=\"https://js.tensorflow.org/api/latest/#tensor2d\" rel=\"noopener\" target=\"_blank\">tensor2d</a>.<br>\nThese are 2D arrays (on the GPU) with 512 entries in each of the arrays, which represents a provided phase.</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// The following are example embedding output of 512 dimensions per sentence</span><br><span class=\"token comment\">// Embedding for user input: \"Sharing to social media\"</span><br><span class=\"token comment\">// userInputTensor = tf.tensor2d([[0.01305108  0.02235125 -0.03263278, ...]])</span><br><span class=\"token comment\">// Embedding for: I am a sentence for which I would like to get its embedding.</span><br><span class=\"token comment\">// blogPostsTensor = tf.tensor2d([[0.05833394 -0.0818501   0.06890938, ...], [0.05833394 -0.0818501   0.06890938, ...]])</span></code></pre>\n</copy-to-clipboard><p>Next, in order to find potentially good results based our input sentence we need to check how similar our input vector is to the vectors of the blog post titles, we can achieve this by calculating Cosine Similarity between the vectors, which will give us a value between -1 and 1. 1 being most similar and -1 being not very similar at all.</p>\n<p>I'm not going to explain the mathematics of cosine similarity, but I've provided an implementation of it.<br>\nIf you want to know how it works, there are lots of great explanations on YouTube, <a href=\"https://www.youtube.com/watch?v=5lvS8078ykA\" rel=\"noopener\" target=\"_blank\">such as this one.</a>.</p>\n<p>Define these at the top of your index.js file.</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// multiply with value with corresponding value in the other array at the same index, then sum.</span><br><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">dotProduct</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">vector1<span class=\"token punctuation\">,</span> vector2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">return</span> vector1<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">product<span class=\"token punctuation\">,</span> current<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>    product <span class=\"token operator\">+=</span> current <span class=\"token operator\">*</span> vector2<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">return</span> product<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br><span class=\"token comment\">// square each value in the array and add them all up, then square root.</span><br><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">vectorMagnitude</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">vector</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span><br>    vector<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">sum<span class=\"token punctuation\">,</span> current</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>      sum <span class=\"token operator\">+=</span> current <span class=\"token operator\">*</span> current<span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">return</span> sum<span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">cosineSimilarity</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">vector1<span class=\"token punctuation\">,</span> vector2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><br>    <span class=\"token function\">dotProduct</span><span class=\"token punctuation\">(</span>vector1<span class=\"token punctuation\">,</span> vector2<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span><br>    <span class=\"token punctuation\">(</span><span class=\"token function\">vectorMagnitude</span><span class=\"token punctuation\">(</span>vector1<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token function\">vectorMagnitude</span><span class=\"token punctuation\">(</span>vector2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n</copy-to-clipboard><p>I tried to implement this maths purely in TensorflowJS, so that I could take advantage of the GPU, but after much trial and error, I could not find a solution. If anyone knows how to do this I'd love to hear about it. Doing this calculation myself is performing a large tradeoff of having these calculations happen on the main thread, which can cause bad UX, i'll explain this in more detail towards the end of the post, including ways around this.</p>\n<p>Now lets use the functions in our code,</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token comment\">// download the model</span><br>  <span class=\"token keyword\">const</span> model <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> use<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">const</span> blogPosts <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><br>    <span class=\"token string\">\"How I got started with 11ty\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"Building a responsive, progressively enhanced, masonry layout with only CSS and HTML\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"Using the Web Share API and meta tags, for simple native sharing\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"Tips for debugging in 11ty\"</span><span class=\"token punctuation\">,</span><br>  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">const</span> userQuery <span class=\"token operator\">=</span> <span class=\"token string\">\"Sharing to social media\"</span><span class=\"token punctuation\">;</span><br>  <span class=\"token comment\">// embed the user input and the blog posts using the model -  explained next!</span><br>  <span class=\"token keyword\">const</span> blogPostsTensor <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> model<span class=\"token punctuation\">.</span><span class=\"token function\">embed</span><span class=\"token punctuation\">(</span>blogPosts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token comment\">// wrap the user input in an array so model can work with it</span><br>  <span class=\"token keyword\">const</span> userInputTensor <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> model<span class=\"token punctuation\">.</span><span class=\"token function\">embed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>userQuery<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// == New code starts here //</span><br>  <span class=\"token comment\">// convert to JS arrays from the tensors</span><br>  <span class=\"token keyword\">const</span> inputVector <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> userInputTensor<span class=\"token punctuation\">.</span><span class=\"token function\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">const</span> dataVector <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> blogPostsTensor<span class=\"token punctuation\">.</span><span class=\"token function\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// this is an array of arrays, we only care about one piece of user input, one search query so</span><br>  <span class=\"token keyword\">const</span> userQueryVector <span class=\"token operator\">=</span> inputVector<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// how many results do i want to show</span><br>  <span class=\"token keyword\">const</span> <span class=\"token constant\">MAX_RESULTS</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span><br>  <span class=\"token comment\">// loop through the blog  post data</span><br>  <span class=\"token keyword\">const</span> predictions <span class=\"token operator\">=</span> dataVector<br>    <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">dataEntry<span class=\"token punctuation\">,</span> dataEntryIndex</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>      <span class=\"token comment\">// COSINE SIMILARITY - compare the user input tensor with each blog post.</span><br>      <span class=\"token keyword\">const</span> similarity <span class=\"token operator\">=</span> <span class=\"token function\">cosineSimilarity</span><span class=\"token punctuation\">(</span>userQueryVector<span class=\"token punctuation\">,</span> dataEntry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><br>        similarity<span class=\"token punctuation\">,</span><br>        result<span class=\"token operator\">:</span> blogPosts<span class=\"token punctuation\">[</span>dataEntryIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>      <span class=\"token comment\">// sort descending</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br>    <span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> b<span class=\"token punctuation\">.</span>similarity <span class=\"token operator\">-</span> a<span class=\"token punctuation\">.</span>similarity<span class=\"token punctuation\">)</span><br>    <span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">MAX_RESULTS</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#initial-example-results\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><br>    predictions<span class=\"token punctuation\">,</span><br>    <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span><br>    <span class=\"token number\">2</span><br>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</copy-to-clipboard><p>On the last line of the above example we're updating the text of an element with id &quot;initial-example-results&quot;, to make this work, let's add the following to your html file, inside the <code>&lt;body&gt;</code> tag.</p>\n<copy-to-clipboard><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><br>  This will take a few moments for the model to load and run. Query: \"Sharing to<br>  social media\"<br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pre</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>initial-example-results<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pre</span><span class=\"token punctuation\">></span></span></code></pre>\n</copy-to-clipboard><p>Here's a link to the code we've built so far: <a href=\"https://codesandbox.io/s/tensorflow-js-hardcoded-blog-search-0q5o9\" rel=\"noopener\" target=\"_blank\">https://codesandbox.io/s/tensorflow-js-hardcoded-blog-search-0q5o9</a></p>\n\n          <live-demo id=initial-example>\n          <div contenteditable slot=\"html\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><br>  This will take a few moments for the model to load and run. Query: \"Sharing to<br>  social media\"<br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pre</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>initial-example-results<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pre</span><span class=\"token punctuation\">></span></span></code></pre>\n</div><div contenteditable slot=\"js\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">dotProduct</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">vector1<span class=\"token punctuation\">,</span> vector2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">return</span> vector1<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">product<span class=\"token punctuation\">,</span> current<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>    product <span class=\"token operator\">+=</span> current <span class=\"token operator\">*</span> vector2<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">return</span> product<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">vectorMagnitude</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">vector</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span><br>    vector<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">sum<span class=\"token punctuation\">,</span> current</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>      sum <span class=\"token operator\">+=</span> current <span class=\"token operator\">*</span> current<span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">return</span> sum<span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">cosineSimilarity</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">vector1<span class=\"token punctuation\">,</span> vector2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><br>    <span class=\"token function\">dotProduct</span><span class=\"token punctuation\">(</span>vector1<span class=\"token punctuation\">,</span> vector2<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span><br>    <span class=\"token punctuation\">(</span><span class=\"token function\">vectorMagnitude</span><span class=\"token punctuation\">(</span>vector1<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token function\">vectorMagnitude</span><span class=\"token punctuation\">(</span>vector2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br><span class=\"token comment\">/* swap out this.querySelectorDeep for document.querySelector, this is custom for my website demos */</span><br><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorDeep</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#initial-example-results\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span><br>  <span class=\"token string\">\"Downloading model...\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">const</span> model <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> use<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">const</span> blogPosts <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><br>  <span class=\"token string\">\"How I got started with 11ty\"</span><span class=\"token punctuation\">,</span><br>  <span class=\"token string\">\"Building a responsive, progressively enhanced, masonry layout with only CSS and HTML\"</span><span class=\"token punctuation\">,</span><br>  <span class=\"token string\">\"Using the Web Share API and meta tags, for simple native sharing\"</span><span class=\"token punctuation\">,</span><br>  <span class=\"token string\">\"Tips for debugging in 11ty\"</span><span class=\"token punctuation\">,</span><br><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">const</span> userQuery <span class=\"token operator\">=</span> <span class=\"token string\">\"Sharing to social media\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorDeep</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#initial-example-results\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span><br>  <span class=\"token string\">\"Encoding data...\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">const</span> blogPostsTensor <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> model<span class=\"token punctuation\">.</span><span class=\"token function\">embed</span><span class=\"token punctuation\">(</span>blogPosts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">const</span> userInputTensor <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> model<span class=\"token punctuation\">.</span><span class=\"token function\">embed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>userQuery<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token comment\">/* convert to JS arrays from the tensors */</span><br><span class=\"token keyword\">const</span> inputVector <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> userInputTensor<span class=\"token punctuation\">.</span><span class=\"token function\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">const</span> dataVector <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> blogPostsTensor<span class=\"token punctuation\">.</span><span class=\"token function\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token comment\">/* this is an array of arrays, we only care about one piece of user input, one search query so */</span><br><span class=\"token keyword\">const</span> userQueryVector <span class=\"token operator\">=</span> inputVector<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br><br><span class=\"token comment\">/* how many results do i want to show */</span><br><span class=\"token keyword\">const</span> <span class=\"token constant\">MAX_RESULTS</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorDeep</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#initial-example-results\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span><br>  <span class=\"token string\">\"Cosine similarity calculations...\"</span><span class=\"token punctuation\">;</span><br><span class=\"token comment\">/* loop through the blog  post data */</span><br><span class=\"token keyword\">const</span> predictions <span class=\"token operator\">=</span> dataVector<br>  <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">dataEntry<span class=\"token punctuation\">,</span> dataEntryIndex</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>    <span class=\"token comment\">/* compare the user input tensor with tensor of a blog post. */</span><br>    <span class=\"token keyword\">const</span> similarity <span class=\"token operator\">=</span> <span class=\"token function\">cosineSimilarity</span><span class=\"token punctuation\">(</span>userQueryVector<span class=\"token punctuation\">,</span> dataEntry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><br>      similarity<span class=\"token punctuation\">,</span><br>      result<span class=\"token operator\">:</span> blogPosts<span class=\"token punctuation\">[</span>dataEntryIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>    <span class=\"token comment\">/* sort descending */</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> b<span class=\"token punctuation\">.</span>similarity <span class=\"token operator\">-</span> a<span class=\"token punctuation\">.</span>similarity<span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">MAX_RESULTS</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>predictions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorDeep</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#initial-example-results\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><br>  predictions<span class=\"token punctuation\">,</span><br>  <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span><br>  <span class=\"token number\">2</span><br><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</div></live-demo><h2 id=\"turning-posts-into-an-api\">Turning posts into an API <a class=\"direct-link\" href=\"#turning-posts-into-an-api\" aria-label=\"turning posts into an api\"><span class=\"copy-link\"></span></a></h2>\n<p>My blog is written using the static site generator tool Eleventy. If you haven't heard of <a href=\"https://www.11ty.dev/\" rel=\"noopener\" target=\"_blank\">Eleventy</a> and you're into building fast websites, seriously check it out, it's awesome. I'm not going to explain how Eleventy works, but I wrote a post about how <a href=\"https://griffa.dev/posts/how-i-got-started-with-11ty/\">I got started with Eleventy</a>.</p>\n<p>To create an API out of my blog posts I generate a JSON file in the form of a <a href=\"https://jsonfeed.org/\" rel=\"noopener\" target=\"_blank\">JSON Feed</a>, which can be hosted on my server.</p>\n<p>Here's my template for my json feed, this template is based on the <a href=\"https://github.com/11ty/eleventy-base-blog\" rel=\"noopener\" target=\"_blank\">11ty base blog</a>. The templating syntax being used is Nunjucks, and comes supported out of the box with Eleventy.</p>\n<p>If you are curious and want to check out the source code of my blog it's over here on <a href=\"https://github.com/Georgegriff/griffadev\" rel=\"noopener\" target=\"_blank\">Github</a>.</p>\n<copy-to-clipboard><pre class=\"language-html\"><code class=\"language-html\">---<br># Metadata comes from _data/metadata.json<br>permalink: \"{{ metadata.jsonfeed.path | url }}\"<br>eleventyExcludeFromCollections: true<br>---<br><br>{ \"version\": \"https://jsonfeed.org/version/1\", \"title\": \"{{ metadata.title }}\",<br>\"home_page_url\": \"{{ metadata.url }}\", \"feed_url\": \"{{ metadata.jsonfeed.url<br>}}\", \"description\": \"{{ metadata.description }}\", \"author\": { \"name\": \"{{<br>metadata.author.name }}\", \"url\": \"{{ metadata.author.url }}\" }, \"items\": [ {%-<br>for post in collections.posts | reverse %} {%- set absolutePostUrl %}{{ post.url<br>| url | absoluteUrl(metadata.url) }}{% endset -%} { \"id\": \"{{ absolutePostUrl<br>}}\", \"url\": \"{{ absolutePostUrl }}\", \"title\": \"{{ post.data.title }}\", \"tags\": [<br>{%- for tag in helpers.removeCollectionTags(post.data.tags) -%} \"{{tag}}\" {%- if<br>not loop.last %}, {%- endif %} {%- endfor %}], \"summary\": \"{{<br>post.data.description }}\", \"content_html\": {% if post.templateContent %}{{<br>post.templateContent | dump | safe }}{% else %}\"\"{% endif %}, \"date_published\":<br>\"{{ post.date | rssDate }}\" } {%- if not loop.last -%} , {%- endif -%} {%-<br>endfor %} ] }</code></pre>\n</copy-to-clipboard><p>This template is iterating through my blog posts and populating a JSON array with post data, as well as some other site metadata, ultimately the result is a JSON file which i can request on my server: <a href=\"https://griffa.dev/feed/feed.json\">https://griffa.dev/feed/feed.json</a>.</p>\n<p>Now I have an API which I can use in my search, success!</p>\n<p>We can now update our code sample to pull data from this api instead of hard-coding it.<br>\nAdd this function to the top of &quot;index.js&quot;.</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">loadBlogPosts</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://griffa.dev/feed/feed.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">const</span> feed <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">return</span> feed<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token comment\">/* search on title and summary */</span><br>      searchData<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>item<span class=\"token punctuation\">.</span>title<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>item<span class=\"token punctuation\">.</span>summary<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span><br>      title<span class=\"token operator\">:</span> item<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span><br>      description<span class=\"token operator\">:</span> item<span class=\"token punctuation\">.</span>summary<span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n</copy-to-clipboard><p>Replace the following code:</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> model <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> use<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">const</span> blogPosts <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><br>  <span class=\"token string\">\"How I got started with 11ty\"</span><span class=\"token punctuation\">,</span><br>  <span class=\"token string\">\"Building a responsive, progressively enhanced, masonry layout with only CSS and HTML\"</span><span class=\"token punctuation\">,</span><br>  <span class=\"token string\">\"Using the Web Share API and meta tags, for simple native sharing\"</span><span class=\"token punctuation\">,</span><br>  <span class=\"token string\">\"Tips for debugging in 11ty\"</span><span class=\"token punctuation\">,</span><br><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre>\n</copy-to-clipboard><p>with:</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>model<span class=\"token punctuation\">,</span> blogPosts<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>use<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">loadBlogPosts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</copy-to-clipboard><p>Also replace</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> blogPostsTensor <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> model<span class=\"token punctuation\">.</span><span class=\"token function\">embed</span><span class=\"token punctuation\">(</span>blogPosts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</copy-to-clipboard><p>with:</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> blogPostsTensor <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> model<span class=\"token punctuation\">.</span><span class=\"token function\">embed</span><span class=\"token punctuation\">(</span><br>  blogPosts<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> searchData <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> searchData<span class=\"token punctuation\">)</span><br><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</copy-to-clipboard>\n          <live-demo id=api-example>\n          <div contenteditable slot=\"html\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><br>  This will take a few moments for the model to load and run. Query: \"Building a<br>  blog with javascript\"<br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pre</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>initial-example-results<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pre</span><span class=\"token punctuation\">></span></span></code></pre>\n</div><div contenteditable slot=\"js\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">dotProduct</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">vector1<span class=\"token punctuation\">,</span> vector2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">return</span> vector1<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">product<span class=\"token punctuation\">,</span> current<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>    product <span class=\"token operator\">+=</span> current <span class=\"token operator\">*</span> vector2<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">return</span> product<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">vectorMagnitude</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">vector</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span><br>    vector<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">sum<span class=\"token punctuation\">,</span> current</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>      sum <span class=\"token operator\">+=</span> current <span class=\"token operator\">*</span> current<span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">return</span> sum<span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">cosineSimilarity</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">vector1<span class=\"token punctuation\">,</span> vector2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><br>    <span class=\"token function\">dotProduct</span><span class=\"token punctuation\">(</span>vector1<span class=\"token punctuation\">,</span> vector2<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span><br>    <span class=\"token punctuation\">(</span><span class=\"token function\">vectorMagnitude</span><span class=\"token punctuation\">(</span>vector1<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token function\">vectorMagnitude</span><span class=\"token punctuation\">(</span>vector2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br><span class=\"token comment\">/* swap out this.querySelectorDeep for document.querySelector, this is custom for my website demos */</span><br><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorDeep</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#initial-example-results\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span><br>  <span class=\"token string\">\"Downloading model and blog posts...\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">loadBlogPosts</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://griffa.dev/feed/feed.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">const</span> feed <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">return</span> feed<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token comment\">/* search on title and summary */</span><br>      searchData<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>item<span class=\"token punctuation\">.</span>title<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>item<span class=\"token punctuation\">.</span>summary<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span><br>      title<span class=\"token operator\">:</span> item<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span><br>      description<span class=\"token operator\">:</span> item<span class=\"token punctuation\">.</span>summary<span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>model<span class=\"token punctuation\">,</span> blogPosts<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>use<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">loadBlogPosts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">const</span> userQuery <span class=\"token operator\">=</span> <span class=\"token string\">\"Building a blog with javascript\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorDeep</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#initial-example-results\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span><br>  <span class=\"token string\">\"Encoding data...\"</span><span class=\"token punctuation\">;</span><br><span class=\"token comment\">/* extract the searchData from the blog posts */</span><br><span class=\"token keyword\">const</span> blogPostsTensor <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> model<span class=\"token punctuation\">.</span><span class=\"token function\">embed</span><span class=\"token punctuation\">(</span><br>  blogPosts<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> searchData <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> searchData<span class=\"token punctuation\">)</span><br><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token comment\">/* wrap the user input in an array so model can work with it */</span><br><span class=\"token keyword\">const</span> userInputTensor <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> model<span class=\"token punctuation\">.</span><span class=\"token function\">embed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>userQuery<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token comment\">/* convert to JS arrays from the tensors */</span><br><span class=\"token keyword\">const</span> inputVector <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> userInputTensor<span class=\"token punctuation\">.</span><span class=\"token function\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">const</span> dataVector <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> blogPostsTensor<span class=\"token punctuation\">.</span><span class=\"token function\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token comment\">/* this is an array of arrays, we only care about one piece of user input, one search query so */</span><br><span class=\"token keyword\">const</span> userQueryVector <span class=\"token operator\">=</span> inputVector<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br><br><span class=\"token comment\">/* how many results do i want to show */</span><br><span class=\"token keyword\">const</span> <span class=\"token constant\">MAX_RESULTS</span> <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorDeep</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#initial-example-results\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span><br>  <span class=\"token string\">\"Cosine similarity calculations...\"</span><span class=\"token punctuation\">;</span><br><span class=\"token comment\">/* loop through the blog  post data */</span><br><span class=\"token keyword\">const</span> predictions <span class=\"token operator\">=</span> dataVector<br>  <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">dataEntry<span class=\"token punctuation\">,</span> dataEntryIndex</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>    <span class=\"token comment\">/* compare the user input tensor with tensor of a blog post. */</span><br>    <span class=\"token keyword\">const</span> similarity <span class=\"token operator\">=</span> <span class=\"token function\">cosineSimilarity</span><span class=\"token punctuation\">(</span>userQueryVector<span class=\"token punctuation\">,</span> dataEntry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><br>      similarity<span class=\"token punctuation\">,</span><br>      result<span class=\"token operator\">:</span> blogPosts<span class=\"token punctuation\">[</span>dataEntryIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>    <span class=\"token comment\">/* sort descending */</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> b<span class=\"token punctuation\">.</span>similarity <span class=\"token operator\">-</span> a<span class=\"token punctuation\">.</span>similarity<span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">MAX_RESULTS</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>predictions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorDeep</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#initial-example-results\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><br>  predictions<span class=\"token punctuation\">,</span><br>  <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span><br>  <span class=\"token number\">2</span><br><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</div></live-demo><p>Here's a link to the code we've built so far: <a href=\"https://codesandbox.io/s/tensorflow-js-blog-search-3k7x2\" rel=\"noopener\" target=\"_blank\">https://codesandbox.io/s/tensorflow-js-blog-search-3k7x2</a></p>\n<h2 id=\"ml-in-the-browser%2C-why%3F\">ML in the browser, why? <a class=\"direct-link\" href=\"#ml-in-the-browser%2C-why%3F\" aria-label=\"ml in the browser%2C why%3F\"><span class=\"copy-link\"></span></a></h2>\n<p>Hopefully the examples so far have made sense, I thought i'd take a moment to talk about some of benefits and tradeoffs of doing Machine learning in the browser with TensorflowJS.</p>\n<p>One of the first things you might think of when you think Machine learning in JavaScript is it's slow, well that's where one of the great things about TensorflowJS comes in, it performs all of its expensive calculations on the GPU, under the hood it's utilising WebGL shader programs to achieve this.</p>\n<p>Running Machine learning in the browser opens up the possibilities of offering Machine learning in applications without needing to build complex server architectures, or learning another language. It also means that it's possible to provide on-device Machine learning to users, without their data ever hitting a server.</p>\n<p>One of the other great things about the JavaScript ecosystem is its ability to not just run in the browser, but on the server too, with NodeJS. TensorflowJS is also available in Node JS, where it can be bound directly to the Tensorflow API, the same API that the python implementations of the library consume. I've considered the possibility of modifying my experiment in this blog post so that when I generate my static site at build time with Eleventy, I could run the model against my data and pre-generate the data for my blog posts, that might be cool.</p>\n<p>The final great thing is that it is possible to convert/re-use models created by the other Tensorflow ecosystems (Python etc) so that they run in the browser.</p>\n<p>Now for one of the big trade offs, Machine learning models can be large, there is a lot of work going to make these models smaller and smaller, but the model used in this demo for example is approximately 28 MB. To be fair, for a general purpose natural language model, this is quite impressively small. Many of these models, are split into chunks so that the model can be downloaded in parallel, which improves things a bit. This tradeoff might be acceptable if it unlocks the ability to provide a good enough UX, without the need to hit a server, which once the model is downloaded can be lightning fast. The model can only be as fast the end-user machine it's running on, which, especially on mobile, can vary dramatically.</p>\n<p>In applications you might be able to do some different things to make this tradeoff worth it, for example:</p>\n<ul>\n<li>Enabling good caching headers</li>\n<li>Using service workers to background fetch and cache the model, and enable the feature</li>\n<li>Allowing users to opt in/out</li>\n<li>Offer the feature as a progressive enhancement that enables once downloaded</li>\n</ul>\n<p><figure>\n        <div class=\"img-wrap\" ><img src=\"/images/download-sentence-model.png\" alt=\"Chrome network panel showing model chunks downloading.\">\n        <figcaption>Chrome network panel showing model chunks downloading.</figcaption>\n      </div>\n      </figure></p>\n<p>With the above tradeoffs in mind it might, or might not, make sense to do ML in the browser. Where you need to try and run your models immediately as the site/app loads, or end user device constraints are a problem, maybe server side is the better choice.</p>\n<p>When using JavaScript it's always important to not block the main thread, I mentioned above that Tensorflow utilises the GPU for its calculations, but as soon as you stop using its API you're back in the JS main thread, and if you perform expensive calculations there ,you are at risk of providing a bad UX to your users.</p>\n<p>The sample in this post is guilty of this, when performing the <code>cosineSimilarity</code> calculations, let's fix it.</p>\n<h2 id=\"unblocking-the-main-thread\">Unblocking the main thread <a class=\"direct-link\" href=\"#unblocking-the-main-thread\" aria-label=\"unblocking the main thread\"><span class=\"copy-link\"></span></a></h2>\n<p>In the browser you can create additional threads called &quot;Workers&quot;, these are isolated threads, that do not have access to any DOM APIs, or variables in the main thread.<br>\nThe only way to communicate between the main thread is via <code>postMessage</code>, which can be cumbersome.</p>\n<p>There is an absolutely fantastic library <a href=\"https://www.npmjs.com/package/comlink\" rel=\"noopener\" target=\"_blank\">Comlink</a> that makes working with Worker threads basically invisible, it allows you to work with functions as if they were on the main thread, I believe it achieves this using <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy\" rel=\"noopener\" target=\"_blank\">Proxy</a> objects, hiding the need to work with postMessage directly 🎉.</p>\n<p>Let's convert our example to use Comlink and move our maths off the main thread.</p>\n<p>We're going to import the Tensorflow libraries in our worker instead so your HTML should look like this.</p>\n<p>Let's also add in some user input, to make the demo a bit more spicy.</p>\n<copy-to-clipboard><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">http-equiv</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>X-UA-Compatible<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>IE=edge<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Blog post search<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>module<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>index.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>search<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">disabled</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>query<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">disabled</span><span class=\"token punctuation\">></span></span>Search<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pre</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>initial-example-results<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pre</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n</copy-to-clipboard><p>Next up, delete all of the code in &quot;index.js&quot;. Now in &quot;index.js&quot; lets add the code to work with our new &quot;worker.js&quot; file and update the UI.</p>\n<p>We're going to add all of the same code, except this time, expose a function called &quot;search&quot; which returns our predictions.<br>\nThere are few other changes too, such as using importScripts to import the libraries into the Worker.</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">importScripts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://unpkg.com/comlink/dist/umd/comlink.min.js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token function\">importScripts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@latest\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token function\">importScripts</span><span class=\"token punctuation\">(</span><br>  <span class=\"token string\">\"https://cdn.jsdelivr.net/npm/@tensorflow-models/universal-sentence-encoder\"</span><br><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">let</span> model<span class=\"token punctuation\">;</span><br><span class=\"token keyword\">let</span> blogPosts<span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">loadBlogPosts</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token comment\">// fetch + cache comparison data</span><br>  <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://griffa.dev/feed/feed.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">const</span> feed <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> feed<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><br>      searchData<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>item<span class=\"token punctuation\">.</span>title<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>item<span class=\"token punctuation\">.</span>summary<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span><br>      title<span class=\"token operator\">:</span> item<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span><br>      description<span class=\"token operator\">:</span> item<span class=\"token punctuation\">.</span>summary<span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">return</span> data<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">loadModel</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">const</span> model <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> use<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">return</span> model<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">load</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token punctuation\">[</span>model<span class=\"token punctuation\">,</span> blogPosts<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token function\">loadModel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">loadBlogPosts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br><span class=\"token comment\">//// cosine similarity fns</span><br><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">dotProduct</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">vector1<span class=\"token punctuation\">,</span> vector2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">return</span> vector1<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">product<span class=\"token punctuation\">,</span> current<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>    product <span class=\"token operator\">+=</span> current <span class=\"token operator\">*</span> vector2<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">return</span> product<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">vectorMagnitude</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">vector</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span><br>    vector<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">sum<span class=\"token punctuation\">,</span> current</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>      sum <span class=\"token operator\">+=</span> current <span class=\"token operator\">*</span> current<span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">return</span> sum<span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">cosineSimilarity</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">vector1<span class=\"token punctuation\">,</span> vector2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><br>    <span class=\"token function\">dotProduct</span><span class=\"token punctuation\">(</span>vector1<span class=\"token punctuation\">,</span> vector2<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span><br>    <span class=\"token punctuation\">(</span><span class=\"token function\">vectorMagnitude</span><span class=\"token punctuation\">(</span>vector1<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token function\">vectorMagnitude</span><span class=\"token punctuation\">(</span>vector2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><span class=\"token comment\">////</span><br><br><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">search</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">userQuery</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">const</span> blogPostsTensor <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> model<span class=\"token punctuation\">.</span><span class=\"token function\">embed</span><span class=\"token punctuation\">(</span><br>    blogPosts<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> searchData <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> searchData<span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">const</span> userInputTensor <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> model<span class=\"token punctuation\">.</span><span class=\"token function\">embed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>userQuery<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">const</span> inputVector <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> userInputTensor<span class=\"token punctuation\">.</span><span class=\"token function\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">const</span> dataVector <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> blogPostsTensor<span class=\"token punctuation\">.</span><span class=\"token function\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/* this is an array of arrays, we only care about one piece of user input, one search query so */</span><br>  <span class=\"token keyword\">const</span> userQueryVector <span class=\"token operator\">=</span> inputVector<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/* how many results do i want to show */</span><br>  <span class=\"token keyword\">const</span> <span class=\"token constant\">MAX_RESULTS</span> <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span><br>  <span class=\"token comment\">/* loop through the blog  post data */</span><br>  <span class=\"token keyword\">const</span> predictions <span class=\"token operator\">=</span> dataVector<br>    <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">dataEntry<span class=\"token punctuation\">,</span> dataEntryIndex</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>      <span class=\"token comment\">/* compare the user input tensor with tensor of a blog post. */</span><br>      <span class=\"token keyword\">const</span> similarity <span class=\"token operator\">=</span> <span class=\"token function\">cosineSimilarity</span><span class=\"token punctuation\">(</span>userQueryVector<span class=\"token punctuation\">,</span> dataEntry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><br>        similarity<span class=\"token punctuation\">,</span><br>        result<span class=\"token operator\">:</span> blogPosts<span class=\"token punctuation\">[</span>dataEntryIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>      <span class=\"token comment\">/* sort descending */</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br>    <span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> b<span class=\"token punctuation\">.</span>similarity <span class=\"token operator\">-</span> a<span class=\"token punctuation\">.</span>similarity<span class=\"token punctuation\">)</span><br>    <span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">MAX_RESULTS</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">return</span> predictions<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">const</span> SearchService <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><br>  search<span class=\"token punctuation\">,</span><br>  load<span class=\"token punctuation\">,</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><span class=\"token comment\">/* expose the SearchService api to comlink */</span><br>Comlink<span class=\"token punctuation\">.</span><span class=\"token function\">expose</span><span class=\"token punctuation\">(</span>SearchService<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</copy-to-clipboard><p>Now, let's use our new <code>SearchService</code> in &quot;index.js&quot;.</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> Comlink <span class=\"token keyword\">from</span> <span class=\"token string\">\"https://unpkg.com/comlink@4.3.0/dist/esm/comlink.min.mjs\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">const</span> worker <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Worker</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"worker.js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">const</span> SearchService <span class=\"token operator\">=</span> Comlink<span class=\"token punctuation\">.</span><span class=\"token function\">wrap</span><span class=\"token punctuation\">(</span>worker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#initial-example-results\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span><br>    <span class=\"token string\">\"Loading model...\"</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">await</span> SearchService<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#search input[name=\"query\"]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>disabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span><br>  document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#search button\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>disabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span><br>  document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#initial-example-results\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span><br>    <span class=\"token string\">\"Model loaded, try out some queries e.g. Building a blog with JavaScript\"</span><span class=\"token punctuation\">;</span><br><br>  document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#search\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"submit\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>    e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FormData</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">const</span> query <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"query\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#initial-example-results\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span><br>      <span class=\"token string\">\"Searching...\"</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">const</span> predictions <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> SearchService<span class=\"token punctuation\">.</span><span class=\"token function\">search</span><span class=\"token punctuation\">(</span>query<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#initial-example-results\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span><br>      <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>predictions<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</copy-to-clipboard><p>If you load this demo code up in the browser you should get similar result to before, but with the heavy-work offloaded to a Worker thread.</p>\n<p>Here's a live demo project for reference: <a href=\"https://codesandbox.io/s/tensorflow-js-with-web-workers-blog-searching-1shbq\" rel=\"noopener\" target=\"_blank\">https://codesandbox.io/s/tensorflow-js-with-web-workers-blog-searching-1shbq</a></p>\n<p>Hopefully you can see from the example how you can offload work into a worker using Comlink, you can also build for production using popular tools such as Rollup, but I won't cover that here.</p>\n<p>One of the neat things about using Worker threads is because they don't have access to the DOM you are forced to separate your application logic from your UI, making your code more modular and reusable in the future.</p>\n<h2 id=\"future-thoughts\">Future thoughts <a class=\"direct-link\" href=\"#future-thoughts\" aria-label=\"future thoughts\"><span class=\"copy-link\"></span></a></h2>\n<p>In case you missed the links earlier:</p>\n<ul>\n<li>Source code: <a href=\"https://github.com/Georgegriff/griffadev/tree/main/src/demos/natural-language-search\" rel=\"noopener\" target=\"_blank\">https://github.com/Georgegriff/griffadev/tree/main/src/demos/natural-language-search</a></li>\n<li>Demo: <a href=\"https://griffa.dev/demos/natural-language-search/\">https://griffa.dev/demos/natural-language-search/</a></li>\n</ul>\n<p>If I was to continue this idea through i'd probably explore some of the following:</p>\n<ul>\n<li>Making the code more production ready using module imports and a build tool chain.</li>\n<li>Investigate ways to use TensorflowJS at build time of my blog to pre-calculate embeddings for posts.</li>\n<li>See if there is in-fact ways to do cosine similarity directly in TensorflowJS, again, i'd love to know if anybody knows how!</li>\n</ul>\n<p>I hope to continue my Machine learning journey, I have some other blog related ideas that I might try to explore in the future:</p>\n<ul>\n<li>Recommending similar blog posts</li>\n<li>Text summary generation of blog posts.</li>\n</ul>\n<p>I'm fairly early on in my AI learning journey, but one of the initial resources that helped me out and inspired me was watching content from <a href=\"https://twitter.com/jlengstorf\" rel=\"noopener\" target=\"_blank\">Jason Lengstorf</a> from his <a href=\"https://www.learnwithjason.dev/\" rel=\"noopener\" target=\"_blank\">Learn with Jason</a> series, which I highly recommend. One of the truly awesome things about this series is closed captioning is provided, making this content more accessible to everybody 🎉.</p>\n<p>At the time of writing there are 3 sessions relating to Machine Learning and TensorflowJS, here is one of them:</p>\n<div class=\"video-size\">\n    <div class=\"video-wrapper\">\n        <lite-youtube class=\"video\" videoid=\"WIHZ7kjJ35o\" style=\"background-image: url('https://i.ytimg.com/vi/WIHZ7kjJ35o/hqdefault.jpg');\">\n            <a rel=\"noopener\" onclick=\"('customElements' in window) && event.preventDefault()\" title=\"Play Video\" class=\"no-js\" target=\"_blank\" href=\"https://youtube.com?w=WIHZ7kjJ35o\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\">\n                <g transform=\"translate(-339 -150.484)\">\n                    <path fill=\"var(--White, #fff)\" d=\"M-1978.639,24.261h0a1.555,1.555,0,0,1-1.555-1.551V9.291a1.555,1.555,0,0,1,1.555-1.551,1.527,1.527,0,0,1,.748.2l11.355,6.9a1.538,1.538,0,0,1,.793,1.362,1.526,1.526,0,0,1-.793,1.348l-11.355,6.516A1.52,1.52,0,0,1-1978.639,24.261Z\" transform=\"translate(2329 150.484)\"/>\n                    <path fill=\"var(--Primary, #000)\" d=\"M16.563.563a16,16,0,1,0,16,16A16,16,0,0,0,16.563.563Zm7.465,17.548L12.672,24.627a1.551,1.551,0,0,1-2.3-1.355V9.853a1.552,1.552,0,0,1,2.3-1.355l11.355,6.9A1.553,1.553,0,0,1,24.027,18.111Z\" transform=\"translate(338.438 149.922)\" />\n                </g>\n            </svg>\n        </a>\n        </lite-youtube>\n    </div>\n</div>\n<p>I hope this was a good read, if you feel like reading more of my work, please follow me on Twitter <a href=\"https://twitter.com/griffadev\" rel=\"noopener\" target=\"_blank\">@griffadev</a>, or get me a <a href=\"https://ko-fi.com/griffadev\" rel=\"noopener\" target=\"_blank\">coffee</a> if you feel like it ☕.</p>\n",
      "date_published": "2021-04-22T00:00:00+00:00"
    },{
      "id": "https://griffa.dev/posts/type-checking-global-javascript-libraries-in-vs-code-for-when-you-just-want-learn-and-code./",
      "url": "https://griffa.dev/posts/type-checking-global-javascript-libraries-in-vs-code-for-when-you-just-want-learn-and-code./",
      "title": "Type checking global JavaScript libraries in VS Code for when you just want learn and code.",
      "tags": ["JavaScript","VSCode","TypeScript","TensorflowJS"],
      "summary": "Sometimes when you&#39;re prototyping and learning a new library you want a quick way to get type-checking/intellisense/auto-complete to assist with your learning. Here is a quick way to enable type checking without fully opting into TypeScript.",
      "content_html": "<p>I've been learning a little bit of artificial intelligence/machine learning in my spare time and I recently started learning a little TensorflowJS. The quickest and simplest way of getting TensorflowJS is a good old script tag. When you are experimenting and prototyping you <em>really</em> don't want to waste time with build tools.</p>\n<p>Whilst this tutorial explains setting up basic type-checking for TensorflowJS it should work for any global library that has TypeScript documentation. When building a production project you may want to consider build tools, but for Machine learning experiments, I find you just want to get to the coding using documentation and examples.</p>\n<p>This post explains how you can prototype with files from a CDN whilst opting in to certain nice-to-have features of TypeScript that can assist with learning a library, without fully adopting TypeScript.</p>\n<p>You can just load TensorflowJS like so:</p>\n<copy-to-clipboard><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@latest<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n</copy-to-clipboard><p>Doing so will make the library available on the global <code>window</code> object as <code>tf</code></p>\n<p>e.g.</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\">window<span class=\"token punctuation\">.</span>tf<span class=\"token punctuation\">;</span> <span class=\"token comment\">// the Tensorflow library</span></code></pre>\n</copy-to-clipboard><p>One downside to doing this is that when you are working with Tensorflow you won't get any auto-complete in your IDE/Editor, because there are no import references for VS Code (or other) to analyze, unlike if you were to use ES6 Imports or Common JS require statements.</p>\n<p>Let's take a look at how we can make no changes to the code but give you some nice type checking, and the real bonus for learning a library: inline documentation, which is so fantastic.</p>\n<blockquote>\n<p>Whilst this tutorial explains how to enable type-checking and library documentation in VS Code, it may work for other IDEs, the reason VS Code is so great here is its built in TypeScript support.</p>\n</blockquote>\n<h2 id=\"type-checking-on-a-global-library\">Type checking on a global library <a class=\"direct-link\" href=\"#type-checking-on-a-global-library\" aria-label=\"type checking on a global library\"><span class=\"copy-link\"></span></a></h2>\n<p>Create a directory and open it up in VS Code.</p>\n<blockquote>\n<p>If you don't have it yet, you can download VS Code over <a href=\"https://code.visualstudio.com/download\" rel=\"noopener\" target=\"_blank\">here</a>.</p>\n</blockquote>\n<p>Create a simple HTML file called <code>index.html</code> with two script imports, one for the library and one for your code.<br>\nWe won't actually boot up this file on a server and load it in a browser in this tutorial, but I'm putting this in for completeness.</p>\n<copy-to-clipboard><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@latest<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>./index.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n</copy-to-clipboard><p>The reason for creating a separate <code>index.js</code> instead of inline JavaScript in a <code>&lt;script&gt;</code>, is as far as I could find, type checking does not seem to work in HTML files. If there is a way to get it to work easily, I'd love to know!</p>\n<p>If you don't have one yet, first initialise an NPM project in your directory, you may be able to do this without an NPM project by using global libraries with <code>-g</code>, I haven't tried this though.</p>\n<blockquote>\n<p>If you don't have NodeJS and NPM installed you can download it here: <a href=\"https://nodejs.org/en/\" rel=\"noopener\" target=\"_blank\">https://nodejs.org/en/</a>.</p>\n</blockquote>\n<p>Install the TensorflowJS library, we won't actually be using the code in the library, this is for just referencing the types, which come along with the NPM module.</p>\n<copy-to-clipboard><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i @tensorflow/tfjs</code></pre>\n</copy-to-clipboard><p>Next up we're going to create a <a href=\"https://www.typescriptlang.org/docs/handbook/declaration-files/by-example.html\" rel=\"noopener\" target=\"_blank\">TypeScript declaration file</a>.<br>\nIn this file we're going to tell TypeScript that the TensorflowJS library will be available on the global <code>Window</code> interface with a variable named <code>tf</code></p>\n<p>Create a file called <code>index.d.ts</code></p>\n<copy-to-clipboard><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Global</span> <span class=\"token punctuation\">{</span><br>  tf<span class=\"token operator\">:</span> <span class=\"token keyword\">typeof</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"@tensorflow/tfjs\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Window</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Global</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre>\n</copy-to-clipboard><p>Now finally create <code>index.js</code> and open it up.</p>\n<p>Inside the file put the following at the top:</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">/// &lt;reference path=\"../index.d.ts\" /></span><br><span class=\"token keyword\">const</span> tf <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>tf<span class=\"token punctuation\">;</span></code></pre>\n</copy-to-clipboard><blockquote>\n<p>If you want find out more about the notation with the triple-slashes, you can find out more in the <a href=\"https://www.typescriptlang.org/docs/handbook/triple-slash-directives.html\" rel=\"noopener\" target=\"_blank\">TypeScript documentation</a></p>\n</blockquote>\n<p>Now here comes the magic, when typing you will now get auto-complete, for example if you type <code>tf.</code> you should get some suggestions 🥳.</p>\n<p><figure>\n        <div class=\"img-wrap\" ><img src=\"/images/auto-complete.png\" alt=\"When typing 'tf.' VS Code now provides auto-completion.\">\n        <figcaption>When typing 'tf.' VS Code now provides auto-completion.</figcaption>\n      </div>\n      </figure></p>\n<p>But the really fantastic thing here, and where it can really help if you are learning the library, is if the library author provides good function documentation you have that available right in your editor.</p>\n<p><figure>\n        <div class=\"img-wrap\" ><img src=\"/images/documentation.png\" alt=\"VS Code documentation for the tensor2d function.\">\n        <figcaption>VS Code documentation for the tensor2d function.</figcaption>\n      </div>\n      </figure></p>\n<h2 id=\"adding-simple-type-checking\">Adding simple Type-checking <a class=\"direct-link\" href=\"#adding-simple-type-checking\" aria-label=\"adding simple type checking\"><span class=\"copy-link\"></span></a></h2>\n<p>You can also add strict type-checking with single comment in a file.</p>\n<p>In index.js add the following to the top of your file.</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// @ts-check</span></code></pre>\n</copy-to-clipboard><p>You should now see that when you code you will get type warning, like so:</p>\n<p><figure>\n        <div class=\"img-wrap\" ><img src=\"/images/type-checking.png\" alt=\"Code: 'tf.tensor2d(420)', showing error Argument of type 'number' is not assignable to parameter of type 'TensorLike2D', in VS Code\">\n        <figcaption>Code: 'tf.tensor2d(420)', showing error Argument of type 'number' is not assignable to parameter of type 'TensorLike2D', in VS Code</figcaption>\n      </div>\n      </figure></p>\n<p>Congratulations, you have now adopted TypeScript!<br>\nIf you wanted to, you could even define your own types in <code>index.d.ts</code>.</p>\n<p>If you want to learn more about ways of adopting TypeScript in small ways, this is a really great video that shows the different &quot;degrees&quot; of adopting TypeScript in a project, without needing to go &quot;all in&quot;.</p>\n<div class=\"video-size\">\n    <div class=\"video-wrapper\">\n        <lite-youtube class=\"video\" videoid=\"BHYgpbPC4wM\" style=\"background-image: url('https://i.ytimg.com/vi/BHYgpbPC4wM/hqdefault.jpg');\">\n            <a rel=\"noopener\" onclick=\"('customElements' in window) && event.preventDefault()\" title=\"Play Video\" class=\"no-js\" target=\"_blank\" href=\"https://youtube.com?w=BHYgpbPC4wM\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\">\n                <g transform=\"translate(-339 -150.484)\">\n                    <path fill=\"var(--White, #fff)\" d=\"M-1978.639,24.261h0a1.555,1.555,0,0,1-1.555-1.551V9.291a1.555,1.555,0,0,1,1.555-1.551,1.527,1.527,0,0,1,.748.2l11.355,6.9a1.538,1.538,0,0,1,.793,1.362,1.526,1.526,0,0,1-.793,1.348l-11.355,6.516A1.52,1.52,0,0,1-1978.639,24.261Z\" transform=\"translate(2329 150.484)\"/>\n                    <path fill=\"var(--Primary, #000)\" d=\"M16.563.563a16,16,0,1,0,16,16A16,16,0,0,0,16.563.563Zm7.465,17.548L12.672,24.627a1.551,1.551,0,0,1-2.3-1.355V9.853a1.552,1.552,0,0,1,2.3-1.355l11.355,6.9A1.553,1.553,0,0,1,24.027,18.111Z\" transform=\"translate(338.438 149.922)\" />\n                </g>\n            </svg>\n        </a>\n        </lite-youtube>\n    </div>\n</div>\n<h2 id=\"learning-tensorflowjs\">Learning TensorflowJS <a class=\"direct-link\" href=\"#learning-tensorflowjs\" aria-label=\"learning tensorflowjs\"><span class=\"copy-link\"></span></a></h2>\n<p>If you want to learn more about Machine learning/Tensorflow, I got inspired by watching content from <a href=\"https://twitter.com/jlengstorf\" rel=\"noopener\" target=\"_blank\">Jason Lengstorf</a> from his <a href=\"https://www.learnwithjason.dev/\" rel=\"noopener\" target=\"_blank\">Learn with Jason</a> series, which I highly recommend (if it wasn't obvious already). One of the truly awesome things about this series is closed captioning is provided, making this content more accessible to everybody 🎉.</p>\n<p>At the time of writing there are 3 sessions relating to Machine Learning and TensorflowJS, here is one of them:</p>\n<div class=\"video-size\">\n    <div class=\"video-wrapper\">\n        <lite-youtube class=\"video\" videoid=\"WIHZ7kjJ35o\" style=\"background-image: url('https://i.ytimg.com/vi/WIHZ7kjJ35o/hqdefault.jpg');\">\n            <a rel=\"noopener\" onclick=\"('customElements' in window) && event.preventDefault()\" title=\"Play Video\" class=\"no-js\" target=\"_blank\" href=\"https://youtube.com?w=WIHZ7kjJ35o\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\">\n                <g transform=\"translate(-339 -150.484)\">\n                    <path fill=\"var(--White, #fff)\" d=\"M-1978.639,24.261h0a1.555,1.555,0,0,1-1.555-1.551V9.291a1.555,1.555,0,0,1,1.555-1.551,1.527,1.527,0,0,1,.748.2l11.355,6.9a1.538,1.538,0,0,1,.793,1.362,1.526,1.526,0,0,1-.793,1.348l-11.355,6.516A1.52,1.52,0,0,1-1978.639,24.261Z\" transform=\"translate(2329 150.484)\"/>\n                    <path fill=\"var(--Primary, #000)\" d=\"M16.563.563a16,16,0,1,0,16,16A16,16,0,0,0,16.563.563Zm7.465,17.548L12.672,24.627a1.551,1.551,0,0,1-2.3-1.355V9.853a1.552,1.552,0,0,1,2.3-1.355l11.355,6.9A1.553,1.553,0,0,1,24.027,18.111Z\" transform=\"translate(338.438 149.922)\" />\n                </g>\n            </svg>\n        </a>\n        </lite-youtube>\n    </div>\n</div>\n<p>I hope this was a good read, if you feel like reading more of my ramblings, please follow me on Twitter <a href=\"https://twitter.com/griffadev\" rel=\"noopener\" target=\"_blank\">@griffadev</a>.</p>\n",
      "date_published": "2021-04-18T00:00:00+00:00"
    },{
      "id": "https://griffa.dev/posts/memory-leaks-and-why-should-you-never-write-such-bad-code-even-for-tests/",
      "url": "https://griffa.dev/posts/memory-leaks-and-why-should-you-never-write-such-bad-code-even-for-tests/",
      "title": "Memory leaks and why should you never write such bad code, even for tests",
      "tags": ["JavaScript","NodeJS","ExpressJS","Kubernetes"],
      "summary": "That feeling when you see some awful code, and then realise you wrote it. Here&#39;s a story of how some bad code I wrote in a unit test, made it into production and caused a memory leak in a NodeJS application.",
      "content_html": "<p>A project that I work on started showing crashed Pods in our Kubernetes (K8s) cluster, which runs a NodeJS server in a container, it was failing with a dreaded &quot;OOMKilled&quot; (Out of memory killed) error, which sent me down the path of learning about profiling NodeJS applications for memory leaks.</p>\n<p>If you don't know much about Kubernetes, that doesn't matter for this article, the fact the NodeJS application is running in K8s is incidental to the tale, and I will only mention it briefly when discussing debugging in Kubernetes.</p>\n<p>I learnt a lot through investigating this memory leak, not just about memory profiling, but about the risk of writing &quot;quick and dirty code&quot;, even if it's not for production use.</p>\n<p>Here is an obfuscated and simplified explanation of the terrible, terrible code that I originally wrote.</p>\n<h2 id=\"the-bad-code\">The bad code <a class=\"direct-link\" href=\"#the-bad-code\" aria-label=\"the bad code\"><span class=\"copy-link\"></span></a></h2>\n<p>So, a few months ago I wrote some code some unit tests which exercised some file validation logic. When I wrote this code I needed to get access to the supported file extensions for the validator, for doing some checks, which lived somewhere else, so I very lazily dumped the file extensions onto an object that I was processing in the test, just for test purposes, right? it'll be fine.</p>\n<p>My simplified version of the production module:</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> supportedValidators <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token function-variable function\">validators</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> supportedValidators<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">validator</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>      <span class=\"token comment\">// imports ./validators/name.js what name.js does is not important.</span><br>      <span class=\"token keyword\">return</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">./validators/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>validator<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.js</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n</copy-to-clipboard><p>What's happening here is a function is exported which exposes other modules via a dynamic require statement. This dynamic require statement is <code>very important</code> to the memory leak and i'll come back to it.</p>\n<blockquote>\n<p>As an aside using require like this in the code is blocking, so it might not be the best thing to use. For more modern code we could use <code>import()</code> in ES Module code.</p>\n</blockquote>\n<p>Now for the bad code, I had in my unit test:</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> validators <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./validate\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">badFunction</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">const</span> myValidators <span class=\"token operator\">=</span> <span class=\"token function\">validators</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  myValidators<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">validator</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>    <span class=\"token comment\">// mutating someone elses object, yeah i know, this is super bad.</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>validator<span class=\"token punctuation\">.</span>supportedExtensions<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      validator<span class=\"token punctuation\">.</span>supportedExtensions <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token comment\">// the code didn't do this exactly this is demo</span><br>    validator<span class=\"token punctuation\">.</span>supportedExtensions<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".pdf\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n</copy-to-clipboard><p>This code is terrible for so many reasons, but it was <code>only for unit tests</code>. This code looks weird, I know, but in context of what I used this for in our tests does make sense, I promise, but this simplified sample is to demonstrate the memory leak.</p>\n<p>Unfortunately, <code>only for unit tests</code> ended up not being true, and here is my first learning from this experience:</p>\n<blockquote>\n<p>Any code that you write anywhere, including inside of unit tests, could be copied by any well meaning developer adapting the code for their use case.</p>\n</blockquote>\n<p>This happened, and unfortunately the &quot;just for test&quot; code with the <code>supportedExtensions = []</code> and <code>.push(&quot;.pdf&quot;)</code> came along for the ride, even though it wasn't needed at all for the production use case.</p>\n<h2 id=\"why-is-this-a-memory-leak%3F\">Why is this a memory leak? <a class=\"direct-link\" href=\"#why-is-this-a-memory-leak%3F\" aria-label=\"why is this a memory leak%3F\"><span class=\"copy-link\"></span></a></h2>\n<p>So on the face of it if you were to look at the <code>myValidators.map</code> code it doesn't look like I'm holding any references to the <code>supportedExtensions</code> object once <code>badFunction</code> its finished. But that assumption ignores that the Array, or the contents of it, that <code>validators()</code> supplies could be retained in memory forever.</p>\n<blockquote>\n<p>Objects in Memory are available for Garbage collection when there are no references to the object anymore and nothing is holding on to those objects. This is a massive over-simplification, I'll link a great talk later in this article which describes it much better than I ever could.</p>\n</blockquote>\n<p>Do you remember this line of code?</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">return</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">./validators/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>validator<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.js</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</copy-to-clipboard><p>A NodeJS module is being imported into the current scope, the important thing about NodeJs modules though is that:</p>\n<p>No matter how many times you import a module you always get the a reference to the same module object, so:</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> foo <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./foo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">const</span> foo2 <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./foo2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>foo <span class=\"token operator\">===</span> foo2<span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></code></pre>\n</copy-to-clipboard><p>This means that even if we lose all references to the imported module, it wont be garbage collected.<br>\nIn this case, this is extremely problematic because <code>validator.supportedExtensions.push(&quot;.pdf&quot;);</code> will add a new entry to an array, that lives on this module object forever, every time the function is called. Imagine if this was on an REST API call (it was). Yikes.</p>\n<p>A couple more learnings here:</p>\n<ul>\n<li>Mutating objects in an array someone else passed to you is dangerous, you have no idea what references are held to that object, your modifications may never be garbage collected.</li>\n<li>If you do have to put bad non-production code in, put a massive comment around it warning future developers, not to copy it.</li>\n<li>Avoid changing objects you don't control.</li>\n</ul>\n<p>On a somewhat related note to the learnings above, Jake Archibald recently wrote about the risks of calling methods with potentially non-future proof parameters, it's a good read: <a href=\"https://jakearchibald.com/2021/function-callback-risks/\" rel=\"noopener\" target=\"_blank\">https://jakearchibald.com/2021/function-callback-risks/</a>.</p>\n<h2 id=\"memory-profiling-and-finding-the-problem-code\">Memory profiling and finding the problem code <a class=\"direct-link\" href=\"#memory-profiling-and-finding-the-problem-code\" aria-label=\"memory profiling and finding the problem code\"><span class=\"copy-link\"></span></a></h2>\n<p>When I first realised that we might have a Memory leak I first wanted to make sure I knew what tools where at my disposal,<br>\nI headed to YouTube and found this great video on the topic.</p>\n<div class=\"video-size\">\n    <div class=\"video-wrapper\">\n        <lite-youtube class=\"video\" videoid=\"hliOMEQRqf8\" style=\"background-image: url('https://i.ytimg.com/vi/hliOMEQRqf8/hqdefault.jpg');\">\n            <a rel=\"noopener\" onclick=\"('customElements' in window) && event.preventDefault()\" title=\"Play Video\" class=\"no-js\" target=\"_blank\" href=\"https://youtube.com?w=hliOMEQRqf8\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\">\n                <g transform=\"translate(-339 -150.484)\">\n                    <path fill=\"var(--White, #fff)\" d=\"M-1978.639,24.261h0a1.555,1.555,0,0,1-1.555-1.551V9.291a1.555,1.555,0,0,1,1.555-1.551,1.527,1.527,0,0,1,.748.2l11.355,6.9a1.538,1.538,0,0,1,.793,1.362,1.526,1.526,0,0,1-.793,1.348l-11.355,6.516A1.52,1.52,0,0,1-1978.639,24.261Z\" transform=\"translate(2329 150.484)\"/>\n                    <path fill=\"var(--Primary, #000)\" d=\"M16.563.563a16,16,0,1,0,16,16A16,16,0,0,0,16.563.563Zm7.465,17.548L12.672,24.627a1.551,1.551,0,0,1-2.3-1.355V9.853a1.552,1.552,0,0,1,2.3-1.355l11.355,6.9A1.553,1.553,0,0,1,24.027,18.111Z\" transform=\"translate(338.438 149.922)\" />\n                </g>\n            </svg>\n        </a>\n        </lite-youtube>\n    </div>\n</div>\nOne way to profile for memory leaks in NodeJS is to use the `--inspect` flag when running your process e.g. `node --inspect index.js`\nThis starts a remote debugging session by default on port 9229.\nI find that the best way to hook into this is via the Chrome Developer Tools.\n<p>If you open the Developer Tools when you have a <code>node --inspect</code> process running you should notice a new Node logo, like the one shown below:</p>\n<p><figure>\n        <div class=\"img-wrap\" ><img src=\"/images/nodejs-dev-tools.png\" alt=\"Open dedicated DevTools for NodeJS\">\n        <figcaption>Open dedicated DevTools for NodeJS</figcaption>\n      </div>\n      </figure></p>\n<p>When you activate this mode, a new window will open where one of the tabs in the new window is &quot;Memory&quot;.</p>\n<p><figure>\n        <div class=\"img-wrap\" ><img src=\"/images/memory-profiling.png\" alt=\"Memory profiling options in NodeJS dedicated DevTools for NodeJS\">\n        <figcaption>Memory profiling options in NodeJS dedicated DevTools for NodeJS</figcaption>\n      </div>\n      </figure></p>\n<p>To try and find the issue I selected the option &quot;Allocation instrumentation timeline&quot;, I then proceeded to run our application tests which had caused the original &quot;OOMKilled&quot; on our cluster. After these tests ran I stopped the instrumentation and proceeded to sort through the results.<br>\nI found that sorting by size and then searching the largest allocated objects helped me find the problem.</p>\n<p>Sure enough after filtering through a lot of noise I found something like this:</p>\n<p><figure>\n        <div class=\"img-wrap\" ><img src=\"/images/leaked-memory.png\" alt=\"Shows lots of memory allocated to the \"supportedExtensions\"\">\n        <figcaption>Shows lots of memory allocated to the \"supportedExtensions\"</figcaption>\n      </div>\n      </figure></p>\n<p>Luckily for me, I know our codebase quite well and was able to identify the problem area based on the variable name of the large array and also the array contents, which is where to my shame I found my awful code being used inside of an API call.</p>\n<h2 id=\"memory-profile-in-kubernetes\">Memory profile in Kubernetes <a class=\"direct-link\" href=\"#memory-profile-in-kubernetes\" aria-label=\"memory profile in kubernetes\"><span class=\"copy-link\"></span></a></h2>\n<p>Memory profiling in Kubernetes is quite similar to when you are running locally, you need to end up with a server on your machine exposing a debugging session.</p>\n<p>Recommendations:</p>\n<ul>\n<li>Scale your deployment down to 1 replica.</li>\n<li>Edit your deployment so your NodeJS server sets the <code>--inspect</code> flag</li>\n<li>Disable liveness and readiness probes for the container, otherwise K8s may kill your session whilst debugging.</li>\n<li>Increase your memory limits and requests, profiling can take up to 2x more memory than usual.</li>\n<li>Locate the pod you want to debug and run <code>kubectl port-forward pod-name 9229</code> this will result in the same debugging session as earlier running on your machine, forwarded from the K8s cluster.</li>\n</ul>\n<h2 id=\"reproducing-the-memory-leak-with-demo-code\">Reproducing the memory leak with demo code <a class=\"direct-link\" href=\"#reproducing-the-memory-leak-with-demo-code\" aria-label=\"reproducing the memory leak with demo code\"><span class=\"copy-link\"></span></a></h2>\n<p>If you want to have a play reproducing the memory leak you could do this:</p>\n<ol>\n<li>Create the following folder and file: <code>validators/name.js</code> Can be empty module exports:</li>\n</ol>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n</copy-to-clipboard><ol start=\"2\">\n<li>Create <code>validate.js</code></li>\n</ol>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> supportedValidators <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token function-variable function\">validators</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> supportedValidators<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">validator</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">./validators/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>validator<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.js</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n</copy-to-clipboard><ol start=\"3\">\n<li>Create <code>bad-code.js</code></li>\n</ol>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> validators <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./validate\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">badFunction</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">const</span> myValidators <span class=\"token operator\">=</span> <span class=\"token function\">validators</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  myValidators<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">validator</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>validator<span class=\"token punctuation\">.</span>supportedExtensions<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      validator<span class=\"token punctuation\">.</span>supportedExtensions <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token comment\">// the code didnt do this exactly this is demo</span><br>    validator<span class=\"token punctuation\">.</span>supportedExtensions<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".pdf\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">let</span> index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><br><br><span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token comment\">// even though theres no references to myValidators array</span><br>  <span class=\"token comment\">// there is a memory leak with the .push</span><br>  <span class=\"token function\">badFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  index<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><br>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Running bad code cycle: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>index<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</copy-to-clipboard><ol start=\"4\">\n<li>Run <code>node --inspect bad-code.js</code> You will need NodeJS installed <a href=\"https://nodejs.org\" rel=\"noopener\" target=\"_blank\">https://nodejs.org</a>.</li>\n<li>Open Chrome developer tools, you should see the NodeJS logo which says &quot;Open dedicated DevTools for NodeJS&quot;</li>\n<li>Run the profiling techniques as described in the previous section.</li>\n</ol>\n<h2 id=\"learnings\">Learnings <a class=\"direct-link\" href=\"#learnings\" aria-label=\"learnings\"><span class=\"copy-link\"></span></a></h2>\n<p>I learnt a lot through this experience.</p>\n<ul>\n<li>Avoid writing sloppy code, even if it is non-production.</li>\n<li>Mutating data that is passed to you is dangerous, you have no idea what references are held to that object, your modifications may never be garbage collected.</li>\n<li>How to Memory profile in NodeJS</li>\n</ul>\n<p>I hope this was a good read, if only to laugh at my terrible code, if you feel like reading more of my ramblings, please follow me on Twitter <a href=\"https://twitter.com/griffadev\" rel=\"noopener\" target=\"_blank\">@griffadev</a>.</p>\n",
      "date_published": "2021-03-18T00:00:00+00:00"
    },{
      "id": "https://griffa.dev/posts/building-a-responsive-progressively-enhanced-masonry-layout-with-only-css-and-html/",
      "url": "https://griffa.dev/posts/building-a-responsive-progressively-enhanced-masonry-layout-with-only-css-and-html/",
      "title": "Building a responsive, progressively enhanced, masonry layout with only CSS and HTML",
      "tags": ["HTML","CSS"],
      "summary": "Masonry layouts, think bricks, think Pinterest, have had many solutions in the web over the years. Many use too much JavaScript, but there is some exciting new things coming to CSS grid to enable Masonry layouts. But you don&#39;t have to wait, you could implement today, using progressive enhancement. Progressive enhancement is like technical debt that fixes itself.",
      "content_html": "<p>A few days ago I found that I had talked myself into re-designing a website. The website is for my brothers' <a href=\"https://cgguitar.co.uk/\" rel=\"noopener\" target=\"_blank\">guitar teaching business</a> which I had previously worked a few years ago, when I was a student.</p>\n<p>As part of the redesign I was trying to think of ways to lay out testimonials from students, which may have varying length/content, I stumbled onto the idea of using a masonry layout (think bricks, think Pinterest).</p>\n<p><figure>\n        <div class=\"img-wrap\" ><img src=\"/images/masonry.png\" alt=\"Mock masonry design testimonials that inspired this tutorial\">\n        <figcaption>Mock masonry design testimonials that inspired this tutorial</figcaption>\n      </div>\n      </figure></p>\n<p>There are many ways to go about building out a Masonry layout, this CSS tricks article lays out a few of the options, <a href=\"https://css-tricks.com/piecing-together-approaches-for-a-css-masonry-layout/\" rel=\"noopener\" target=\"_blank\">Approaches for a CSS Masonry Layout</a>.</p>\n<p>When looking into the solution I knew I wanted to adhere to a couple of rules:</p>\n<ul>\n<li>No committing the huge sin of using JavaScript for layout.</li>\n<li>It's okay if the experience upgrades or downgrades based on browser support.</li>\n</ul>\n<h3 id=\"what-are-we-building\">What are we building <a class=\"direct-link\" href=\"#what-are-we-building\" aria-label=\"what are we building\"><span class=\"copy-link\"></span></a></h3>\n<ul>\n<li>Masonry layout using <code>grid-template-rows: masonry</code></li>\n<li>CSS Columns as a fallback</li>\n</ul>\n<p>This article will explain how to build out the following responsive masonry cards layout with only HTML and CSS.<br>\nThis final demo uses some features only available in Firefox, behind a flag, which is detailed in the article.</p>\n<p>Here is the full finished demo code:</p>\n\n          <live-demo id=demo>\n          <div contenteditable slot=\"html\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>masonry<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Lorem ipsum dolor inventore saepe maiores<br>    delectus? Quaerat excepturi repudiandae magnam in corporis? Corporis<br>    veritatis necessitatibus rem veniam explicabo iure ea incidunt ut dicta?<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Perspiciatis dolor qui deserunt animi, quidem<br>    temporibus nam doloremque maiores quae ullam, quibusdam consequatur<br>    consequuntur et corporis laboriosam est facere ratione quaerat odio quas<br>    dolore fugit rem officiis odit! Ad.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Earum, voluptatum! Minima sapiente deserunt optio<br>    blanditiis, non atque voluptates libero molestias ipsam officiis<br>    reprehenderit ipsum tenetur deleniti quo dolore ut odio vero distinctio,<br>    error temporibus doloribus. Fugiat, accusantium aperiam!<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>4<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Voluptatibus vel magnam a cupiditate at veniam<br>    eos voluptates harum incidunt minus. Nisi alias quis ab odit perspiciatis<br>    quisquam officVoluptatibus vel magnam a cupiditate at veniam eos voluptates<br>    harum incidunt minus.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>5<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Suscipit cum nihil id voluptatem omnis officia<br>    dolor quia. Saepe perferendis, quas, fuga magnam iure soluta nemo eligendi<br>    dignissimos repudiandae maxime, beatae sapiente possimus obcaecati ab<br>    necessitatibus voluptatem numquam commodi.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>6<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Inventore maiores velit possimus dolore in ipsa<br>    praesentium obcaecati. Velit nihil porro pariatur id culpa earum soluta ipsa<br>    autem repellat quisquam iure facilis totam sint, quod a quae delectus<br>    perferendis.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>7<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Lorem ipsum dolor inventore saepe maiores<br>    delectus? Quaerat excepturi repudiandae magnam in corporis? Corporis<br>    veritatis necessitatibus rem veniam explicabo iure ea incidunt ut dicta?<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Perspiciatis dolor qui deserunt animi, quidem<br>    temporibus nam doloremque maiores quae ullam, quibusdam consequatur<br>    consequuntur et corporis laboriosam est facere ratione quaerat odio quas<br>    dolore fugit rem officiis odit! Ad.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>9<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Earum, voluptatum! Minima sapiente deserunt optio<br>    blanditiis, non atque voluptates libero molestias ipsam officiis<br>    reprehenderit ipsum tenetur deleniti quo dolore ut odio vero distinctio,<br>    error temporibus doloribus. Fugiat, accusantium aperiam!<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>10<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Voluptatibus vel magnam a cupiditate at veniam<br>    eos voluptates harum incidunt minus. Nisi alias quis ab odit perspiciatis<br>    quisquam officVoluptatibus vel magnam a cupiditate at veniam eos voluptates<br>    harum incidunt minus.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>11<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Suscipit cum nihil id voluptatem omnis officia<br>    dolor quia. Saepe perferendis, quas, fuga magnam iure soluta nemo eligendi<br>    dignissimos repudiandae maxime, beatae sapiente possimus obcaecati ab<br>    necessitatibus voluptatem numquam commodi.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>12<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Inventore maiores velit possimus dolore in ipsa<br>    praesentium obcaecati. Velit nihil porro pariatur id culpa earum soluta ipsa<br>    autem repellat quisquam iure facilis totam sint, quod a quae delectus<br>    perferendis.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>13<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Accusamus voluptates hic assumenda magni<br>    molestiae distinctio architecto, nihil error atque corporis, laudantium quo,<br>    dolores voluptatum exercitationem vero aliquid tenetur illo doloribus<br>    numquam! Autem impedit ab omnis qui optio rem!<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>14<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Adipisci tempora id veniam quos eligendi amet<br>    aut beatae laborum? Impedit tenetur consequuntur quae rerum numquam, ut<br>    quisquam dolor odio, quia expedita harum, laborum corrupti? Debitis corporis<br>    quas odit consectetur.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>15<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Labore vel asperiores at deleniti, optio<br>    explicabo minus dolorum culpa, totam perspiciatis maiores voluptas dicta<br>    excepturi facere nesciunt dolor ducimus aperiam nihil sint harum<br>    necessitatibus? Ullam, cupiditate! Ab, tempora alias.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>16<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> consequuntur temporibus omnis recusandae sunt,<br>    ratione excepturi quos voluptates obcaecati quo? Illum.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>17<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Accusamus voluptates hic assumenda magni<br>    molestiae distinctio architecto, nihil error atque corporis, laudantium quo,<br>    dolores voluptatum exercitationem vero aliquid tenetur illo doloribus<br>    numquam! Autem impedit ab omnis qui optio rem!<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>18<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Adipisci tempora id veniam quos eligendi amet<br>    aut beatae laborum? Impedit tenetur consequuntur quae rerum numquam, ut<br>    quisquam dolor odio, quia expedita harum, laborum corrupti? Debitis corporis<br>    quas odit consectetur.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>19<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Labore vel asperiores at deleniti, optio<br>    explicabo minus dolorum culpa, totam perspiciatis maiores voluptas dicta<br>    excepturi facere nesciunt dolor ducimus aperiam nihil sint harum<br>    necessitatibus? Ullam, cupiditate! Ab, tempora alias.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>20<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> consequuntur temporibus omnis recusandae sunt,<br>    ratione excepturi quos voluptates obcaecati quo? Illum.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n</div><div contenteditable slot=\"css\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.masonry</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">--masonry-gap</span><span class=\"token punctuation\">:</span> 1rem<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">--masonry-brick-width</span><span class=\"token punctuation\">:</span> 180px<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">column-gap</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--masonry-gap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token property\">column-fill</span><span class=\"token punctuation\">:</span> initial<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">column-width</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--masonry-brick-width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token selector\">.masonry > *</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">break-inside</span><span class=\"token punctuation\">:</span> avoid<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--masonry-gap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token atrule\"><span class=\"token rule\">@supports</span> <span class=\"token punctuation\">(</span><span class=\"token property\">grid-template-rows</span><span class=\"token punctuation\">:</span> masonry<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token selector\">.masonry</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> grid<span class=\"token punctuation\">;</span><br>    <span class=\"token property\">gap</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--masonry-gap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token property\">grid-template-rows</span><span class=\"token punctuation\">:</span> masonry<span class=\"token punctuation\">;</span><br>    <span class=\"token property\">grid-template-columns</span><span class=\"token punctuation\">:</span> <span class=\"token function\">repeat</span><span class=\"token punctuation\">(</span><br>      auto-fill<span class=\"token punctuation\">,</span><br>      <span class=\"token function\">minmax</span><span class=\"token punctuation\">(</span><span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--masonry-brick-width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> 1fr<span class=\"token punctuation\">)</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token property\">align-tracks</span><span class=\"token punctuation\">:</span> stretch<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token selector\">.masonry > *</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> initial<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token comment\">/* some styling not important */</span><br><span class=\"token selector\">.masonry</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #f3f3f3<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 2rem<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><span class=\"token selector\">.brick:nth-child(4n - 7)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #5a363a<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token selector\">.brick:nth-child(4n - 6)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #82212c<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token selector\">.brick:nth-child(4n - 5)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #3a3e41<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token selector\">.brick:nth-child(4n - 4)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #292a2b<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><span class=\"token selector\">.brick</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> white<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 1rem<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n</div></live-demo><h3 id=\"you'd-think-css-grid-could-do-it\">You'd think CSS Grid could do it <a class=\"direct-link\" href=\"#you'd-think-css-grid-could-do-it\" aria-label=\"you'd think css grid could do it\"><span class=\"copy-link\"></span></a></h3>\n<p>CSS Grid is amazing, and you'd think it would have shipped with a simple way of doing masonry layouts, the initial versions of the spec however, did not ship anything to really help out with these layouts.</p>\n<p>But fear not, Firefox has something cooking!</p>\n<blockquote>\n<p>Before I continue, the specification we're going to look into is experimental, and at the time of writing only is available in Firefox behind a flag, however, this article will outline how you could use the feature today and fallback to another approach for browsers without support.</p>\n</blockquote>\n<h3 id=\"enabling-masonry-layout-in-firefox\">Enabling Masonry layout in Firefox <a class=\"direct-link\" href=\"#enabling-masonry-layout-in-firefox\" aria-label=\"enabling masonry layout in firefox\"><span class=\"copy-link\"></span></a></h3>\n<p>It's January 2021, I'm using Firefox 84.0.2, depending on how the spec has progressed, you may not need to enable this flag, it may even be available in other browsers, <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/Masonry_Layout\" rel=\"noopener\" target=\"_blank\">this link may have more information</a>.</p>\n<p>To enable in Firefox:</p>\n<ol>\n<li>type <code>about:config</code> into your address bar</li>\n<li>Accept the warnings</li>\n<li>In the search box find: <code>layout.css.grid-template-masonry-value.enabled</code> and enable it.</li>\n</ol>\n<p>Over on MDN you can find this article: <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/Masonry_Layout\" rel=\"noopener\" target=\"_blank\">CSS Grid Layout &gt; Masonry Layout</a></p>\n<p>It details, an example very similar to this:</p>\n\n          <live-demo id=basic-example>\n          <div contenteditable slot=\"css\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.grid</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> grid<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">gap</span><span class=\"token punctuation\">:</span> 1rem<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">grid-template-columns</span><span class=\"token punctuation\">:</span> <span class=\"token function\">repeat</span><span class=\"token punctuation\">(</span>auto-fill<span class=\"token punctuation\">,</span> <span class=\"token function\">minmax</span><span class=\"token punctuation\">(</span>120px<span class=\"token punctuation\">,</span> 1fr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token comment\">/* this only works in firefox right now */</span><br>  <span class=\"token property\">grid-template-rows</span><span class=\"token punctuation\">:</span> masonry<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 1rem<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><span class=\"token selector\">.item</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--Primary<span class=\"token punctuation\">,</span> #74baff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n</div><div contenteditable slot=\"html\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>grid<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">block-size</span><span class=\"token punctuation\">:</span> 2em<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">block-size</span><span class=\"token punctuation\">:</span> 3em<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">block-size</span><span class=\"token punctuation\">:</span> 1.6em<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">block-size</span><span class=\"token punctuation\">:</span> 4em<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">block-size</span><span class=\"token punctuation\">:</span> 2.2em<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">block-size</span><span class=\"token punctuation\">:</span> 3em<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">block-size</span><span class=\"token punctuation\">:</span> 4.5em<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">block-size</span><span class=\"token punctuation\">:</span> 1em<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">block-size</span><span class=\"token punctuation\">:</span> 3.5em<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">block-size</span><span class=\"token punctuation\">:</span> 2.8em<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n</div></live-demo><p>With this small amount of CSS we can get a layout which is almost what we want already, exciting! It has hardcoded sizing, lets improve it, and enable responsive masonry layouts,</p>\n<h2 id=\"building-out-our-example\">Building out our example <a class=\"direct-link\" href=\"#building-out-our-example\" aria-label=\"building out our example\"><span class=\"copy-link\"></span></a></h2>\n<p>Let's start with a fresh example, starting with a little html and &quot;lorem ipsum&quot; to generate some &quot;bricks&quot; for masonry layout.</p>\n<p>To see the effect you will need to be view these examples in a browser that supports masonry layouts (at the time of writing Firefox behind a flag).</p>\n\n          <live-demo id=masonry-wonky-bottom>\n          <div contenteditable slot=\"html\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>masonry<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Lorem ipsum dolor inventore saepe maiores<br>    delectus? Quaerat excepturi repudiandae magnam in corporis? Corporis<br>    veritatis necessitatibus rem veniam explicabo iure ea incidunt ut dicta?<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Perspiciatis dolor qui deserunt animi, quidem<br>    temporibus nam doloremque maiores quae ullam, quibusdam consequatur<br>    consequuntur et corporis laboriosam est facere ratione quaerat odio quas<br>    dolore fugit rem officiis odit! Ad.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Earum, voluptatum! Minima sapiente deserunt optio<br>    blanditiis, non atque voluptates libero molestias ipsam officiis<br>    reprehenderit ipsum tenetur deleniti quo dolore ut odio vero distinctio,<br>    error temporibus doloribus. Fugiat, accusantium aperiam!<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>4<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Voluptatibus vel magnam a cupiditate at veniam<br>    eos voluptates harum incidunt minus. Nisi alias quis ab odit perspiciatis<br>    quisquam officVoluptatibus vel magnam a cupiditate at veniam eos voluptates<br>    harum incidunt minus.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>5<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Suscipit cum nihil id voluptatem omnis officia<br>    dolor quia. Saepe perferendis, quas, fuga magnam iure soluta nemo eligendi<br>    dignissimos repudiandae maxime, beatae sapiente possimus obcaecati ab<br>    necessitatibus voluptatem numquam commodi.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>6<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Inventore maiores velit possimus dolore in ipsa<br>    praesentium obcaecati. Velit nihil porro pariatur id culpa earum soluta ipsa<br>    autem repellat quisquam iure facilis totam sint, quod a quae delectus<br>    perferendis.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>7<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Accusamus voluptates hic assumenda magni<br>    molestiae distinctio architecto, nihil error atque corporis, laudantium quo,<br>    dolores voluptatum exercitationem vero aliquid tenetur illo doloribus<br>    numquam! Autem impedit ab omnis qui optio rem!<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Adipisci tempora id veniam quos eligendi amet aut<br>    beatae laborum? Impedit tenetur consequuntur quae rerum numquam, ut quisquam<br>    dolor odio, quia expedita harum, laborum corrupti? Debitis corporis quas<br>    odit consectetur.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>9<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Labore vel asperiores at deleniti, optio<br>    explicabo minus dolorum culpa, totam perspiciatis maiores voluptas dicta<br>    excepturi facere nesciunt dolor ducimus aperiam nihil sint harum<br>    necessitatibus? Ullam, cupiditate! Ab, tempora alias.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>10<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> consequuntur temporibus omnis recusandae sunt,<br>    ratione excepturi quos voluptates obcaecati quo? Illum.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n</div><div contenteditable slot=\"css\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.masonry</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> grid<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">gap</span><span class=\"token punctuation\">:</span> 1rem<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">grid-template-rows</span><span class=\"token punctuation\">:</span> masonry<span class=\"token punctuation\">;</span><br>  <span class=\"token comment\">/* magic responsiveness */</span><br>  <span class=\"token property\">grid-template-columns</span><span class=\"token punctuation\">:</span> <span class=\"token function\">repeat</span><span class=\"token punctuation\">(</span>auto-fill<span class=\"token punctuation\">,</span> <span class=\"token function\">minmax</span><span class=\"token punctuation\">(</span>180px<span class=\"token punctuation\">,</span> 1fr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token comment\">/* some styling not important */</span><br><span class=\"token selector\">.brick</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--Text<span class=\"token punctuation\">,</span> #f0f0f0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--Primary<span class=\"token punctuation\">,</span> #74baff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 1rem<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n</div></live-demo><p>This code will result in a masonry style layout, which automatically reduces the number of columns as the screen shrinks down, until you reach a single column.</p>\n<p><figure>\n        <div class=\"img-wrap\" ><img src=\"/images/responsive-grid.gif\" alt=\"Animated resizing of demo showing masonry layout with responsive columns with css grid\">\n        <figcaption>Animated resizing of demo showing masonry layout with responsive columns with css grid</figcaption>\n      </div>\n      </figure></p>\n<p>If you run this example you should notice that there is no clean edge on the bottom, it has a <code>wonky bottom</code>.</p>\n<p><figure>\n        <div class=\"img-wrap\" ><img src=\"/images/wonky-bottom.png\" alt=\"Image of result of demo showing masonry layout without a flat bottom\">\n        <figcaption>Image of result of demo showing masonry layout without a flat bottom</figcaption>\n      </div>\n      </figure></p>\n<blockquote>\n<p>No one likes a <s>soggy</s> wonky bottom.</p>\n</blockquote>\n<p>The masonry specification also allows for a new property: <code>align-tracks</code>, which you can set to <code>stretch</code> to fix this problem.</p>\n<p><code>align-tracks</code> also has some other <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/align-tracks\" rel=\"noopener\" target=\"_blank\">support modes</a>, beware of potential issues with <code>align-tracks</code> if you want a masonry layout where a &quot;brick&quot; can span multiple columns, hopefully these things will get ironed out as the spec progresses.</p>\n\n          <live-demo id=masonry-straight-bottom>\n          <div contenteditable slot=\"html\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>masonry<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Lorem ipsum dolor inventore saepe maiores<br>    delectus? Quaerat excepturi repudiandae magnam in corporis? Corporis<br>    veritatis necessitatibus rem veniam explicabo iure ea incidunt ut dicta?<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Perspiciatis dolor qui deserunt animi, quidem<br>    temporibus nam doloremque maiores quae ullam, quibusdam consequatur<br>    consequuntur et corporis laboriosam est facere ratione quaerat odio quas<br>    dolore fugit rem officiis odit! Ad.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Earum, voluptatum! Minima sapiente deserunt optio<br>    blanditiis, non atque voluptates libero molestias ipsam officiis<br>    reprehenderit ipsum tenetur deleniti quo dolore ut odio vero distinctio,<br>    error temporibus doloribus. Fugiat, accusantium aperiam!<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>4<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Voluptatibus vel magnam a cupiditate at veniam<br>    eos voluptates harum incidunt minus. Nisi alias quis ab odit perspiciatis<br>    quisquam officVoluptatibus vel magnam a cupiditate at veniam eos voluptates<br>    harum incidunt minus.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>5<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Suscipit cum nihil id voluptatem omnis officia<br>    dolor quia. Saepe perferendis, quas, fuga magnam iure soluta nemo eligendi<br>    dignissimos repudiandae maxime, beatae sapiente possimus obcaecati ab<br>    necessitatibus voluptatem numquam commodi.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>6<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Inventore maiores velit possimus dolore in ipsa<br>    praesentium obcaecati. Velit nihil porro pariatur id culpa earum soluta ipsa<br>    autem repellat quisquam iure facilis totam sint, quod a quae delectus<br>    perferendis.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>7<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Accusamus voluptates hic assumenda magni<br>    molestiae distinctio architecto, nihil error atque corporis, laudantium quo,<br>    dolores voluptatum exercitationem vero aliquid tenetur illo doloribus<br>    numquam! Autem impedit ab omnis qui optio rem!<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Adipisci tempora id veniam quos eligendi amet aut<br>    beatae laborum? Impedit tenetur consequuntur quae rerum numquam, ut quisquam<br>    dolor odio, quia expedita harum, laborum corrupti? Debitis corporis quas<br>    odit consectetur.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>9<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Labore vel asperiores at deleniti, optio<br>    explicabo minus dolorum culpa, totam perspiciatis maiores voluptas dicta<br>    excepturi facere nesciunt dolor ducimus aperiam nihil sint harum<br>    necessitatibus? Ullam, cupiditate! Ab, tempora alias.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>10<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> consequuntur temporibus omnis recusandae sunt,<br>    ratione excepturi quos voluptates obcaecati quo? Illum.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n</div><div contenteditable slot=\"css\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.masonry</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> grid<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">gap</span><span class=\"token punctuation\">:</span> 1rem<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">grid-template-rows</span><span class=\"token punctuation\">:</span> masonry<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">grid-template-columns</span><span class=\"token punctuation\">:</span> <span class=\"token function\">repeat</span><span class=\"token punctuation\">(</span>auto-fill<span class=\"token punctuation\">,</span> <span class=\"token function\">minmax</span><span class=\"token punctuation\">(</span>180px<span class=\"token punctuation\">,</span> 1fr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token comment\">/* no more wonky bottom */</span><br>  <span class=\"token property\">align-tracks</span><span class=\"token punctuation\">:</span> stretch<span class=\"token punctuation\">;</span><br>  <span class=\"token comment\">/* just so you can see the edge in the example */</span><br>  <span class=\"token property\">padding-bottom</span><span class=\"token punctuation\">:</span> 3rem<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token comment\">/* some styling not important */</span><br><span class=\"token selector\">.brick</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--Text<span class=\"token punctuation\">,</span> #f0f0f0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--Primary<span class=\"token punctuation\">,</span> #74baff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 1rem<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n</div></live-demo><p>And now as if by magic, the bottom edge is now straight.</p>\n<p><figure>\n        <div class=\"img-wrap\" ><img src=\"/images/responsive-straight.gif\" alt=\"Image of result of demo showing masonry layout without a straight bottom\">\n        <figcaption>Image of result of demo showing masonry layout without a straight bottom</figcaption>\n      </div>\n      </figure></p>\n<h3 id=\"what-about-a-fallback\">What about a fallback <a class=\"direct-link\" href=\"#what-about-a-fallback\" aria-label=\"what about a fallback\"><span class=\"copy-link\"></span></a></h3>\n<p>Okay, so now we made something work in a single browser only, and it's not even shipped there, not ideal.<br>\nLet's try to achieve something similar, this time with CSS columns.</p>\n<p>I'd never used CSS columns before looking into them for implementing this masonry layout, they are actually quite clever, and they can made to be responsive, without media queries, which we will take a look at now.</p>\n<p>For this example, I'm going to start to make use of <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/--*\" rel=\"noopener\" target=\"_blank\">CSS Custom Properties</a> which will become extremely useful once we enable our progressive enhancement, we can use these variables to share sizes and other config.</p>\n<p>For the css we're going to make use of some column properties:</p>\n<copy-to-clipboard><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">column-gap</span><span class=\"token punctuation\">:</span> 1rem<span class=\"token punctuation\">;</span><br><span class=\"token property\">column-fill</span><span class=\"token punctuation\">:</span> initial<span class=\"token punctuation\">;</span><br><span class=\"token property\">column-width</span><span class=\"token punctuation\">:</span> 180px<span class=\"token punctuation\">;</span></code></pre>\n</copy-to-clipboard><p>Setting a <code>column-width</code> will set a minimum width of a column before columns need to shrink down, meaning on smaller devices we can get a single column, the same as with our CSS grid implementation.</p>\n<p>If you want to set a specific number of columns you can use the <code>column-count</code> property. You could adjust the number of columns using CSS media queries too, if you wanted to:</p>\n<p>Optional example:</p>\n<copy-to-clipboard><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token comment\">/* larger */</span><br><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 1024px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token selector\">.masonry</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token property\">column-count</span><span class=\"token punctuation\">:</span> 4<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token comment\">/* medium */</span><br><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 1023px<span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 768px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token selector\">.masonry</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token property\">column-count</span><span class=\"token punctuation\">:</span> 3<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token comment\">/* small, anything smaller will be 1 column by default */</span><br><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 767px<span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 540px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token selector\">.masonry</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token property\">column-count</span><span class=\"token punctuation\">:</span> 2<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span></code></pre>\n</copy-to-clipboard><p>We're not going to do that, we're just going to make use of <code>column-width</code> and allow our columns to grow up to a maximum card width.</p>\n<p>Same html as before, with some changes to the css:</p>\n\n          <live-demo id=masonry-fallback-basic>\n          <div contenteditable slot=\"html\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>masonry<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Lorem ipsum dolor inventore saepe maiores<br>    delectus? Quaerat excepturi repudiandae magnam in corporis? Corporis<br>    veritatis necessitatibus rem veniam explicabo iure ea incidunt ut dicta?<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Perspiciatis dolor qui deserunt animi, quidem<br>    temporibus nam doloremque maiores quae ullam, quibusdam consequatur<br>    consequuntur et corporis laboriosam est facere ratione quaerat odio quas<br>    dolore fugit rem officiis odit! Ad.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Earum, voluptatum! Minima sapiente deserunt optio<br>    blanditiis, non atque voluptates libero molestias ipsam officiis<br>    reprehenderit ipsum tenetur deleniti quo dolore ut odio vero distinctio,<br>    error temporibus doloribus. Fugiat, accusantium aperiam!<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>4<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Voluptatibus vel magnam a cupiditate at veniam<br>    eos voluptates harum incidunt minus. Nisi alias quis ab odit perspiciatis<br>    quisquam officVoluptatibus vel magnam a cupiditate at veniam eos voluptates<br>    harum incidunt minus.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>5<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Suscipit cum nihil id voluptatem omnis officia<br>    dolor quia. Saepe perferendis, quas, fuga magnam iure soluta nemo eligendi<br>    dignissimos repudiandae maxime, beatae sapiente possimus obcaecati ab<br>    necessitatibus voluptatem numquam commodi.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>6<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Inventore maiores velit possimus dolore in ipsa<br>    praesentium obcaecati. Velit nihil porro pariatur id culpa earum soluta ipsa<br>    autem repellat quisquam iure facilis totam sint, quod a quae delectus<br>    perferendis.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>7<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Accusamus voluptates hic assumenda magni<br>    molestiae distinctio architecto, nihil error atque corporis, laudantium quo,<br>    dolores voluptatum exercitationem vero aliquid tenetur illo doloribus<br>    numquam! Autem impedit ab omnis qui optio rem!<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Adipisci tempora id veniam quos eligendi amet aut<br>    beatae laborum? Impedit tenetur consequuntur quae rerum numquam, ut quisquam<br>    dolor odio, quia expedita harum, laborum corrupti? Debitis corporis quas<br>    odit consectetur.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>9<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Labore vel asperiores at deleniti, optio<br>    explicabo minus dolorum culpa, totam perspiciatis maiores voluptas dicta<br>    excepturi facere nesciunt dolor ducimus aperiam nihil sint harum<br>    necessitatibus? Ullam, cupiditate! Ab, tempora alias.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>10<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> consequuntur temporibus omnis recusandae sunt,<br>    ratione excepturi quos voluptates obcaecati quo? Illum.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n</div><div contenteditable slot=\"css\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.masonry</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">--masonry-gap</span><span class=\"token punctuation\">:</span> 1rem<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">--masonry-brick-width</span><span class=\"token punctuation\">:</span> 180px<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">column-gap</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--masonry-gap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token property\">column-fill</span><span class=\"token punctuation\">:</span> initial<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">column-width</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--masonry-brick-width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><span class=\"token selector\">.masonry > *</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token comment\">/* Sometimes elements get stuck between columns. */</span><br>  <span class=\"token property\">break-inside</span><span class=\"token punctuation\">:</span> avoid<span class=\"token punctuation\">;</span><br>  <span class=\"token comment\">/* add gap at bottom */</span><br>  <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--masonry-gap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token comment\">/* some styling not important */</span><br><span class=\"token selector\">.brick</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--Text<span class=\"token punctuation\">,</span> #f0f0f0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--Primary<span class=\"token punctuation\">,</span> #74baff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 1rem<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n</div></live-demo><p>The result is very similar, however, there are two main differences:</p>\n<ul>\n<li>The order of items goes down the columns as opposed to across the rows with css grid. Columns: ⬇️ Grid: ➡️</li>\n<li>We have the wonky bottom back (there is no easy fix with css columns)</li>\n</ul>\n<p>The first difference may be a deal breaker, depending on the use case, for me, order didn't really matter very much.</p>\n<p><figure>\n        <div class=\"img-wrap\" ><img src=\"/images/responsive-column.gif\" alt=\"Animated resizing of demo showing masonry layout with responsive columns with css columns\">\n        <figcaption>Animated resizing of demo showing masonry layout with responsive columns with css columns</figcaption>\n      </div>\n      </figure></p>\n<h2 id=\"progressive-enhancement\">Progressive enhancement <a class=\"direct-link\" href=\"#progressive-enhancement\" aria-label=\"progressive enhancement\"><span class=\"copy-link\"></span></a></h2>\n<p>Now we've seen how to implement a masonry layout in the future and with a fallback, lets put it all together with the magical <code>@supports</code> keyword in css.</p>\n<copy-to-clipboard><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@supports</span> <span class=\"token punctuation\">(</span><span class=\"token property\">grid-template-rows</span><span class=\"token punctuation\">:</span> masonry<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token selector\">.masonry</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> grid<span class=\"token punctuation\">;</span><br>    <span class=\"token property\">gap</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--masonry-gap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token property\">grid-template-rows</span><span class=\"token punctuation\">:</span> masonry<span class=\"token punctuation\">;</span><br>    <span class=\"token property\">grid-template-columns</span><span class=\"token punctuation\">:</span> <span class=\"token function\">repeat</span><span class=\"token punctuation\">(</span><br>      auto-fill<span class=\"token punctuation\">,</span><br>      <span class=\"token function\">minmax</span><span class=\"token punctuation\">(</span><span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--masonry-brick-width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> 1fr<span class=\"token punctuation\">)</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token property\">align-tracks</span><span class=\"token punctuation\">:</span> stretch<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token selector\">.masonry > *</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token comment\">/* use this to reset the margin that the column variant set */</span><br>    <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> initial<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span></code></pre>\n</copy-to-clipboard><p>Again, with no changes to the HTML again, we're going to implement an <code>@supports</code> just for the masonry layout using css grid:</p>\n\n          <live-demo id=progressive-enhancement>\n          <div contenteditable slot=\"html\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>masonry<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Lorem ipsum dolor inventore saepe maiores<br>    delectus? Quaerat excepturi repudiandae magnam in corporis? Corporis<br>    veritatis necessitatibus rem veniam explicabo iure ea incidunt ut dicta?<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Perspiciatis dolor qui deserunt animi, quidem<br>    temporibus nam doloremque maiores quae ullam, quibusdam consequatur<br>    consequuntur et corporis laboriosam est facere ratione quaerat odio quas<br>    dolore fugit rem officiis odit! Ad.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Earum, voluptatum! Minima sapiente deserunt optio<br>    blanditiis, non atque voluptates libero molestias ipsam officiis<br>    reprehenderit ipsum tenetur deleniti quo dolore ut odio vero distinctio,<br>    error temporibus doloribus. Fugiat, accusantium aperiam!<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>4<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Voluptatibus vel magnam a cupiditate at veniam<br>    eos voluptates harum incidunt minus. Nisi alias quis ab odit perspiciatis<br>    quisquam officVoluptatibus vel magnam a cupiditate at veniam eos voluptates<br>    harum incidunt minus.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>5<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Suscipit cum nihil id voluptatem omnis officia<br>    dolor quia. Saepe perferendis, quas, fuga magnam iure soluta nemo eligendi<br>    dignissimos repudiandae maxime, beatae sapiente possimus obcaecati ab<br>    necessitatibus voluptatem numquam commodi.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>6<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Inventore maiores velit possimus dolore in ipsa<br>    praesentium obcaecati. Velit nihil porro pariatur id culpa earum soluta ipsa<br>    autem repellat quisquam iure facilis totam sint, quod a quae delectus<br>    perferendis.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>7<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Accusamus voluptates hic assumenda magni<br>    molestiae distinctio architecto, nihil error atque corporis, laudantium quo,<br>    dolores voluptatum exercitationem vero aliquid tenetur illo doloribus<br>    numquam! Autem impedit ab omnis qui optio rem!<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Adipisci tempora id veniam quos eligendi amet aut<br>    beatae laborum? Impedit tenetur consequuntur quae rerum numquam, ut quisquam<br>    dolor odio, quia expedita harum, laborum corrupti? Debitis corporis quas<br>    odit consectetur.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>9<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Labore vel asperiores at deleniti, optio<br>    explicabo minus dolorum culpa, totam perspiciatis maiores voluptas dicta<br>    excepturi facere nesciunt dolor ducimus aperiam nihil sint harum<br>    necessitatibus? Ullam, cupiditate! Ab, tempora alias.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>10<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> consequuntur temporibus omnis recusandae sunt,<br>    ratione excepturi quos voluptates obcaecati quo? Illum.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n</div><div contenteditable slot=\"css\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.masonry</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">--masonry-gap</span><span class=\"token punctuation\">:</span> 1rem<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">--masonry-brick-width</span><span class=\"token punctuation\">:</span> 180px<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">column-gap</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--masonry-gap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token property\">column-fill</span><span class=\"token punctuation\">:</span> initial<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">column-width</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--masonry-brick-width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token selector\">.masonry > *</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">break-inside</span><span class=\"token punctuation\">:</span> avoid<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--masonry-gap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token atrule\"><span class=\"token rule\">@supports</span> <span class=\"token punctuation\">(</span><span class=\"token property\">grid-template-rows</span><span class=\"token punctuation\">:</span> masonry<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token selector\">.masonry</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> grid<span class=\"token punctuation\">;</span><br>    <span class=\"token property\">gap</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--masonry-gap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token property\">grid-template-rows</span><span class=\"token punctuation\">:</span> masonry<span class=\"token punctuation\">;</span><br>    <span class=\"token property\">grid-template-columns</span><span class=\"token punctuation\">:</span> <span class=\"token function\">repeat</span><span class=\"token punctuation\">(</span><br>      auto-fill<span class=\"token punctuation\">,</span><br>      <span class=\"token function\">minmax</span><span class=\"token punctuation\">(</span><span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--masonry-brick-width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> 1fr<span class=\"token punctuation\">)</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token property\">align-tracks</span><span class=\"token punctuation\">:</span> stretch<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token selector\">.masonry > *</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> initial<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token comment\">/* some styling not important */</span><br><span class=\"token selector\">.brick</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--Text<span class=\"token punctuation\">,</span> #f0f0f0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--Primary<span class=\"token punctuation\">,</span> #74baff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 1rem<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n</div></live-demo><p>Now with this example, depending on what your browser supports, you will either get the CSS Grid or the CSS Columns version.</p>\n<p>As long as the <code>grid-template-rows: masonry</code> doesn't change between now and more browsers shipping, we have just written some CSS that will automatically upgrade itself over time, fixing the technical debt/UX &quot;bug&quot; of a wonky bottom and vertical ordering instead of horizontal.</p>\n<h2 id=\"bonus-round\">Bonus round <a class=\"direct-link\" href=\"#bonus-round\" aria-label=\"bonus round\"><span class=\"copy-link\"></span></a></h2>\n<p>In my implementation I was toying around with having different cards backgrounds every nth &quot;brick&quot; in the masonry layout.</p>\n<copy-to-clipboard><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.brick:nth-child(4n - 7)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #5a363a<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token selector\">.brick:nth-child(4n - 6)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #82212c<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token selector\">.brick:nth-child(4n - 5)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #3a3e41<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token selector\">.brick:nth-child(4n - 4)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #292a2b<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n</copy-to-clipboard><p>There are some really neat tricks you can do with the <code>nth-child</code> property in CSS, some useful background reading if you are new to this:</p>\n<ul>\n<li><a href=\"https://css-tricks.com/how-nth-child-works/\" rel=\"noopener\" target=\"_blank\">How nth-child Works</a></li>\n<li><a href=\"https://css-tricks.com/useful-nth-child-recipies/\" rel=\"noopener\" target=\"_blank\">Useful :nth-child Recipes</a></li>\n</ul>\n<p>Here's the full demo:</p>\n\n          <live-demo id=bonus>\n          <div contenteditable slot=\"html\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>masonry<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Lorem ipsum dolor inventore saepe maiores<br>    delectus? Quaerat excepturi repudiandae magnam in corporis? Corporis<br>    veritatis necessitatibus rem veniam explicabo iure ea incidunt ut dicta?<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Perspiciatis dolor qui deserunt animi, quidem<br>    temporibus nam doloremque maiores quae ullam, quibusdam consequatur<br>    consequuntur et corporis laboriosam est facere ratione quaerat odio quas<br>    dolore fugit rem officiis odit! Ad.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Earum, voluptatum! Minima sapiente deserunt optio<br>    blanditiis, non atque voluptates libero molestias ipsam officiis<br>    reprehenderit ipsum tenetur deleniti quo dolore ut odio vero distinctio,<br>    error temporibus doloribus. Fugiat, accusantium aperiam!<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>4<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Voluptatibus vel magnam a cupiditate at veniam<br>    eos voluptates harum incidunt minus. Nisi alias quis ab odit perspiciatis<br>    quisquam officVoluptatibus vel magnam a cupiditate at veniam eos voluptates<br>    harum incidunt minus.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>5<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Suscipit cum nihil id voluptatem omnis officia<br>    dolor quia. Saepe perferendis, quas, fuga magnam iure soluta nemo eligendi<br>    dignissimos repudiandae maxime, beatae sapiente possimus obcaecati ab<br>    necessitatibus voluptatem numquam commodi.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>6<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Inventore maiores velit possimus dolore in ipsa<br>    praesentium obcaecati. Velit nihil porro pariatur id culpa earum soluta ipsa<br>    autem repellat quisquam iure facilis totam sint, quod a quae delectus<br>    perferendis.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>7<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Lorem ipsum dolor inventore saepe maiores<br>    delectus? Quaerat excepturi repudiandae magnam in corporis? Corporis<br>    veritatis necessitatibus rem veniam explicabo iure ea incidunt ut dicta?<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Perspiciatis dolor qui deserunt animi, quidem<br>    temporibus nam doloremque maiores quae ullam, quibusdam consequatur<br>    consequuntur et corporis laboriosam est facere ratione quaerat odio quas<br>    dolore fugit rem officiis odit! Ad.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>9<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Earum, voluptatum! Minima sapiente deserunt optio<br>    blanditiis, non atque voluptates libero molestias ipsam officiis<br>    reprehenderit ipsum tenetur deleniti quo dolore ut odio vero distinctio,<br>    error temporibus doloribus. Fugiat, accusantium aperiam!<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>10<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Voluptatibus vel magnam a cupiditate at veniam<br>    eos voluptates harum incidunt minus. Nisi alias quis ab odit perspiciatis<br>    quisquam officVoluptatibus vel magnam a cupiditate at veniam eos voluptates<br>    harum incidunt minus.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>11<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Suscipit cum nihil id voluptatem omnis officia<br>    dolor quia. Saepe perferendis, quas, fuga magnam iure soluta nemo eligendi<br>    dignissimos repudiandae maxime, beatae sapiente possimus obcaecati ab<br>    necessitatibus voluptatem numquam commodi.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>12<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Inventore maiores velit possimus dolore in ipsa<br>    praesentium obcaecati. Velit nihil porro pariatur id culpa earum soluta ipsa<br>    autem repellat quisquam iure facilis totam sint, quod a quae delectus<br>    perferendis.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>13<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Accusamus voluptates hic assumenda magni<br>    molestiae distinctio architecto, nihil error atque corporis, laudantium quo,<br>    dolores voluptatum exercitationem vero aliquid tenetur illo doloribus<br>    numquam! Autem impedit ab omnis qui optio rem!<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>14<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Adipisci tempora id veniam quos eligendi amet<br>    aut beatae laborum? Impedit tenetur consequuntur quae rerum numquam, ut<br>    quisquam dolor odio, quia expedita harum, laborum corrupti? Debitis corporis<br>    quas odit consectetur.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>15<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Labore vel asperiores at deleniti, optio<br>    explicabo minus dolorum culpa, totam perspiciatis maiores voluptas dicta<br>    excepturi facere nesciunt dolor ducimus aperiam nihil sint harum<br>    necessitatibus? Ullam, cupiditate! Ab, tempora alias.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>16<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> consequuntur temporibus omnis recusandae sunt,<br>    ratione excepturi quos voluptates obcaecati quo? Illum.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>17<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Accusamus voluptates hic assumenda magni<br>    molestiae distinctio architecto, nihil error atque corporis, laudantium quo,<br>    dolores voluptatum exercitationem vero aliquid tenetur illo doloribus<br>    numquam! Autem impedit ab omnis qui optio rem!<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>18<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Adipisci tempora id veniam quos eligendi amet<br>    aut beatae laborum? Impedit tenetur consequuntur quae rerum numquam, ut<br>    quisquam dolor odio, quia expedita harum, laborum corrupti? Debitis corporis<br>    quas odit consectetur.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>19<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> Labore vel asperiores at deleniti, optio<br>    explicabo minus dolorum culpa, totam perspiciatis maiores voluptas dicta<br>    excepturi facere nesciunt dolor ducimus aperiam nihil sint harum<br>    necessitatibus? Ullam, cupiditate! Ab, tempora alias.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>brick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>num<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>20<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> consequuntur temporibus omnis recusandae sunt,<br>    ratione excepturi quos voluptates obcaecati quo? Illum.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n</div><div contenteditable slot=\"css\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.masonry</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">--masonry-gap</span><span class=\"token punctuation\">:</span> 1rem<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">--masonry-brick-width</span><span class=\"token punctuation\">:</span> 180px<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">column-gap</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--masonry-gap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token property\">column-fill</span><span class=\"token punctuation\">:</span> initial<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">column-width</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--masonry-brick-width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token selector\">.masonry > *</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">break-inside</span><span class=\"token punctuation\">:</span> avoid<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--masonry-gap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token atrule\"><span class=\"token rule\">@supports</span> <span class=\"token punctuation\">(</span><span class=\"token property\">grid-template-rows</span><span class=\"token punctuation\">:</span> masonry<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token selector\">.masonry</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> grid<span class=\"token punctuation\">;</span><br>    <span class=\"token property\">gap</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--masonry-gap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token property\">grid-template-rows</span><span class=\"token punctuation\">:</span> masonry<span class=\"token punctuation\">;</span><br>    <span class=\"token property\">grid-template-columns</span><span class=\"token punctuation\">:</span> <span class=\"token function\">repeat</span><span class=\"token punctuation\">(</span><br>      auto-fill<span class=\"token punctuation\">,</span><br>      <span class=\"token function\">minmax</span><span class=\"token punctuation\">(</span><span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--masonry-brick-width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> 1fr<span class=\"token punctuation\">)</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token property\">align-tracks</span><span class=\"token punctuation\">:</span> stretch<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token selector\">.masonry > *</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> initial<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token comment\">/* some styling not important */</span><br><span class=\"token selector\">.masonry</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #f3f3f3<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 2rem<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><span class=\"token selector\">.brick:nth-child(4n - 7)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #5a363a<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token selector\">.brick:nth-child(4n - 6)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #82212c<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token selector\">.brick:nth-child(4n - 5)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #3a3e41<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token selector\">.brick:nth-child(4n - 4)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #292a2b<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><span class=\"token selector\">.brick</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> white<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 1rem<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n</div></live-demo><p>Thanks for reading all the way through, I hope this was useful and one day soonish we will be able to easily deal with wonky bottoms in just CSS.</p>\n",
      "date_published": "2021-01-13T00:00:00+00:00"
    },{
      "id": "https://griffa.dev/posts/setting-up-eslint-to-work-with-new-or-proposed-javascript-features-such-as-private-class-fields./",
      "url": "https://griffa.dev/posts/setting-up-eslint-to-work-with-new-or-proposed-javascript-features-such-as-private-class-fields./",
      "title": "Setting up ESLint to work with new or proposed JavaScript features such as private class fields.",
      "tags": ["QuickTip","JavaScript","ESLint","Jest","Babel"],
      "summary": "It turns out configuring ESLint to use Stage 3 proposals is actually a massive pain, and sends you down a rabbit hole of Babel, assumed knowledge, renamed packages and half answered questions.",
      "content_html": "<p>Some members in my team this week wanted to make use of <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes/Private_class_fields\" rel=\"noopener\" target=\"_blank\">Private class fields</a> in a NodeJS server. This proposal is currently shipped in Chrome, Edge, Firefox and NodeJS, with Safari notably absent. In this instance, we wanted to get them working for a backend server application, so support since Node 12, we're good to go, or so I thought, turns out linters aren't always here to save you time.</p>\n<p>I summed my feelings on the whole process of figuring this out on Twitter.</p>\n<p><a href=\"https://twitter.com/anyuser/status/1333779719074955264\" rel=\"noopener\" target=\"_blank\">https://twitter.com/anyuser/status/1333779719074955264</a></p>\n<p>Feel free if you want to skip ahead past the story, and to head right to <a href=\"#configuring-eslint\">Configuring ESLint</a>.</p>\n<p>For this article, i'll be using this code example of using Private class fields, the code used is irrelevant.</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Animal</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token comment\">// this is a private class field!</span><br>  #noise <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">noise</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>#noise <span class=\"token operator\">=</span> noise<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token function\">makeNoise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>#noise<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span></code></pre>\n</copy-to-clipboard><p>The first issue we hit when writing this new code, was of course, the linter started failing, so off to Google we went!</p>\n<h2 id=\"struggling-to-finding-a-solution\">Struggling to finding a solution <a class=\"direct-link\" href=\"#struggling-to-finding-a-solution\" aria-label=\"struggling to finding a solution\"><span class=\"copy-link\"></span></a></h2>\n<p>A quick search for: <code>eslint private class fields</code> you will most likely end up in this <a href=\"https://stackoverflow.com/questions/57385125/eslint-does-not-recognize-private-field-declaration-using-nodejs-12\" rel=\"noopener\" target=\"_blank\">Stack Overflow issue</a>.<br>\nIt will tell you that ESLint does not support experimental stage 3 features, which is indeed correct, and to:</p>\n<copy-to-clipboard><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> eslint babel-eslint --save-dev</code></pre>\n</copy-to-clipboard><p>and to update your ESLint config file over to use:</p>\n<copy-to-clipboard><pre class=\"language-json\"><code class=\"language-json\">  <span class=\"token property\">\"parser\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"babel-eslint\"</span><span class=\"token punctuation\">,</span></code></pre>\n</copy-to-clipboard><p>Sadly, it seems this is not an entire solution, it seems to make a couple of assumptions:</p>\n<ul>\n<li>You have babel-core installed</li>\n<li>You have a babel configuration file set up that knows how to transform code with a preset.</li>\n<li>Its possible that when the answer was posted <code>babel-eslint</code> did indeed solve al the problems.</li>\n</ul>\n<p>If you are in a NodeJS server module, a lot of these assumptions are probably not met.</p>\n<p>If you are a developer that has never had to use Babel because you work on the backend or on a build-less frontend, all this stuff can get daunting very fast.</p>\n<p>Additionally, it seems since this answer was posted, things have moved on and the recommended <code>parser</code> now lives at:</p>\n<copy-to-clipboard><pre class=\"language-json\"><code class=\"language-json\">    <span class=\"token property\">\"parser\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"@babel/eslint-parser\"</span><span class=\"token punctuation\">,</span></code></pre>\n</copy-to-clipboard><p>The ESLint website does have some information about the Past, Present and Future of the babel-eslint over on its <a href=\"https://babeljs.io/blog/2020/07/13/the-state-of-babel-eslint\" rel=\"noopener\" target=\"_blank\">website</a>.</p>\n<p>Finding this information out was a bit of an adventure, and even on the official babel or ESLint website, it's super unclear that you need to set up a babel config, and then still, what to put in it. I'm pretty sure the only reason I managed to figure it out in the end was because I'm familiar with the mess that is configuring Webpack, Jest and Babel.</p>\n<h2 id=\"configuring-eslint\">Configuring ESLint <a class=\"direct-link\" href=\"#configuring-eslint\" aria-label=\"configuring eslint\"><span class=\"copy-link\"></span></a></h2>\n<p>Let's get our new syntax working!</p>\n<p>First off, lets do the <code>npm install</code> dance:</p>\n<copy-to-clipboard><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i eslint @babel/core @babel/eslint-parser @babel/preset-env -D</code></pre>\n</copy-to-clipboard><p>It's nice to set up a linter task in your package json so you can run <code>npm run lint</code></p>\n<copy-to-clipboard><pre class=\"language-json\"><code class=\"language-json\">  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token property\">\"lint\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"eslint ./\"</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre>\n</copy-to-clipboard><p>I'm opting to use <code>@babel/preset-env</code> because it has an easy way to enabled proposals that are <code>shipped</code> in Browsers/Node. Other presets/plugins are available.</p>\n<p>Next we need to construct an <code>.eslintrc</code> file.<br>\nYou can generate one using: <code>./node_modules/.bin/eslint --init</code> or just copy this starter:</p>\n<copy-to-clipboard><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span><br>  <span class=\"token property\">\"env\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token property\">\"browser\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"es2021\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"node\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>  <span class=\"token property\">\"extends\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"eslint:recommended\"</span><span class=\"token punctuation\">,</span><br>  <span class=\"token property\">\"parser\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"@babel/eslint-parser\"</span><span class=\"token punctuation\">,</span><br>  <span class=\"token property\">\"parserOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token property\">\"ecmaVersion\"</span><span class=\"token operator\">:</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"sourceType\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"module\"</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>  <span class=\"token property\">\"rules\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span></code></pre>\n</copy-to-clipboard><p>Now if you run <code>npm run lint</code> You will hit the following error:</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">/</span>path<span class=\"token operator\">/</span>to<span class=\"token operator\">/</span>code<span class=\"token operator\">/</span>Animal<span class=\"token punctuation\">.</span>js<br>  <span class=\"token number\">0</span><span class=\"token operator\">:</span><span class=\"token number\">0</span>  error  Parsing error<span class=\"token operator\">:</span> No Babel config file detected <span class=\"token keyword\">for</span> <span class=\"token operator\">/</span>path<span class=\"token operator\">/</span>to<span class=\"token operator\">/</span>code<span class=\"token operator\">/</span>Animal<span class=\"token punctuation\">.</span>js<span class=\"token punctuation\">.</span> Either disable config file checking <span class=\"token keyword\">with</span> requireConfigFile<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> or configure Babel so that it can find the config files<br><br>✖ <span class=\"token number\">1</span> <span class=\"token function\">problem</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> error<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> warnings<span class=\"token punctuation\">)</span></code></pre>\n</copy-to-clipboard><p>It's telling you we need to configure babel for <code>@babel/eslint-parser</code> to work.</p>\n<p>Lets set up a babel config file.</p>\n<p>Create a file called <code>.babelrc</code> and populate it with:</p>\n<copy-to-clipboard><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span><br>  <span class=\"token property\">\"presets\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"@babel/preset-env\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><br><span class=\"token punctuation\">}</span></code></pre>\n</copy-to-clipboard><p>You can read about <code>@babel/preset-env</code> on the <a href=\"https://babeljs.io/docs/en/babel-preset-env\" rel=\"noopener\" target=\"_blank\">Babel website</a>.</p>\n<p>Now if you run <code>npm run lint</code> again you will hit the final error:</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">/</span>path<span class=\"token operator\">/</span>to<span class=\"token operator\">/</span>code<span class=\"token operator\">/</span>Animal<span class=\"token punctuation\">.</span>js<br>  <span class=\"token number\">2</span><span class=\"token operator\">:</span><span class=\"token number\">4</span>  error  Parsing error<span class=\"token operator\">:</span> <span class=\"token operator\">/</span>path<span class=\"token operator\">/</span>to<span class=\"token operator\">/</span>code<span class=\"token operator\">/</span>Animal<span class=\"token punctuation\">.</span>js<span class=\"token operator\">:</span> Support <span class=\"token keyword\">for</span> the experimental syntax <span class=\"token string\">'classPrivateProperties'</span> isn't currently <span class=\"token function\">enabled</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><br><br>  <span class=\"token number\">1</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Animal</span> <span class=\"token punctuation\">{</span><br><span class=\"token operator\">></span> <span class=\"token number\">2</span> <span class=\"token operator\">|</span>     #noise <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span><br>    <span class=\"token operator\">|</span>     <span class=\"token operator\">^</span><br>  <span class=\"token number\">3</span> <span class=\"token operator\">|</span><br>  <span class=\"token number\">4</span> <span class=\"token operator\">|</span>     <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">noise</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token number\">5</span> <span class=\"token operator\">|</span>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>#noise <span class=\"token operator\">=</span> noise<span class=\"token punctuation\">;</span><br><br>Add @babel<span class=\"token operator\">/</span>plugin<span class=\"token operator\">-</span>proposal<span class=\"token operator\">-</span><span class=\"token keyword\">class</span><span class=\"token operator\">-</span><span class=\"token function\">properties</span> <span class=\"token punctuation\">(</span>https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>git<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>vb4SL<span class=\"token punctuation\">)</span> to the <span class=\"token string\">'plugins'</span> section <span class=\"token keyword\">of</span> your Babel config to enable transformation<span class=\"token punctuation\">.</span><br>If you want to leave it <span class=\"token keyword\">as</span><span class=\"token operator\">-</span>is<span class=\"token punctuation\">,</span> add @babel<span class=\"token operator\">/</span>plugin<span class=\"token operator\">-</span>syntax<span class=\"token operator\">-</span><span class=\"token keyword\">class</span><span class=\"token operator\">-</span><span class=\"token function\">properties</span> <span class=\"token punctuation\">(</span>https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>git<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>vb4yQ<span class=\"token punctuation\">)</span> to the <span class=\"token string\">'plugins'</span> section to enable parsing<br><br>✖ <span class=\"token number\">1</span> <span class=\"token function\">problem</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> error<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> warnings<span class=\"token punctuation\">)</span></code></pre>\n</copy-to-clipboard><blockquote>\n<p>You could proceed to add plugins for each of the proposals as the instructions say, alternatively you can opt to say <code>I want all shipped proposals</code>.</p>\n</blockquote>\n<p>To do this change your <code>.babelrc</code> over to:</p>\n<copy-to-clipboard><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span><br>  <span class=\"token property\">\"presets\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><br>    <span class=\"token punctuation\">[</span><br>      <span class=\"token string\">\"@babel/preset-env\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">{</span><br>        <span class=\"token property\">\"shippedProposals\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><br>      <span class=\"token punctuation\">}</span><br>    <span class=\"token punctuation\">]</span><br>  <span class=\"token punctuation\">]</span><br><span class=\"token punctuation\">}</span></code></pre>\n</copy-to-clipboard><blockquote>\n<p>From the Babel docs: &quot;set the shippedProposals option to true. This will enable polyfills and transforms for proposal which have already been shipped in browsers for a while.&quot;</p>\n</blockquote>\n<h2 id=\"if-you-are-using-jest\">If you are using Jest <a class=\"direct-link\" href=\"#if-you-are-using-jest\" aria-label=\"if you are using jest\"><span class=\"copy-link\"></span></a></h2>\n<p>If you are using Jest, it will automatically pick up <code>.babelrc</code> files, this might be problematic, as it will very helpfully start to try to transpile things like <code>async/await</code>, potentially leading you down even more rabbit holes. With really helpful messages like:</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\">ReferenceError<span class=\"token operator\">:</span> regeneratorRuntime is not defined</code></pre>\n</copy-to-clipboard><p>By dumb luck, I've been through the pain of this message many times, and knew exactly what was wrong, Jest was trying to transform the perfectly valid code.</p>\n<p>It's almost 2021, and this is a server app, I certainly do not want to transpile <code>async/await</code> especially not in unit tests!</p>\n<p>One way to work around this is to use a non-standard name for your <code>.babelrc</code> file e.g. <code>.babel-eslintrc</code>. There may be better solutions, but I certainly don't want Jest unnecessarily transforming code.</p>\n<p>In your <code>.eslintrc</code> file you can update <code>babelOptions</code> to use a custom <code>configFile</code></p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token string\">\"babelOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token string\">\"configFile\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./.babel-eslintrc\"</span><br> <span class=\"token punctuation\">}</span></code></pre>\n</copy-to-clipboard><p>And there we go, Jest is now happy again because it's not using the Babel configuration.</p>\n<h3 id=\"summary\">Summary <a class=\"direct-link\" href=\"#summary\" aria-label=\"summary\"><span class=\"copy-link\"></span></a></h3>\n<p>All in all this was a lot harder than I thought it would be, my guess is that many people don't hit this issue because they happen to already have Babel configured. But in the case of backend dev, getting along happily, just trying to make use of a shipped JavaScript feature in a server, you can get dragged into the hellscape of frontend development tooling, and no one has fun there.</p>\n",
      "date_published": "2020-12-01T00:00:00+00:00"
    },{
      "id": "https://griffa.dev/posts/using-the-web-share-api-and-meta-tags-for-simple-native-sharing/",
      "url": "https://griffa.dev/posts/using-the-web-share-api-and-meta-tags-for-simple-native-sharing/",
      "title": "Using the Web Share API and meta tags, for simple native sharing",
      "tags": ["JavaScript","11ty","Webdev"],
      "summary": "Adding share links for all the various places users can share content from Twitter, to LinkedIn or Reddit and many more, can be a real pain. The Web Share API is growing in support, making sharing content on the web easier than ever. For browsers that don&#39;t support the API you can fall back to self generated share targets.",
      "content_html": "<p>Supporting all of various places that content can be shared on a web site is tricky, all sites have their own mechanisms for doing it, and you can never support all of the places that a user may want to share content.</p>\n<p>Thats where the Web Share API comes in, with it, sharing content on the Web is much more straight forward, using this API also gives your users the freedom to share content wherever they like, from chat apps and social media to a notes app.</p>\n<p>At the end of the article I go into the all important html meta tags, to make sure that sites/apps can pick up nice previews for your content.</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>navigator<span class=\"token punctuation\">.</span>share<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    navigator<span class=\"token punctuation\">.</span><span class=\"token function\">share</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><br>            text<span class=\"token operator\">:</span><span class=\"token string\">\"Some text to share\"</span><span class=\"token punctuation\">,</span><br>            title<span class=\"token operator\">:</span> <span class=\"token string\">\"Title of what you are sharing\"</span><span class=\"token punctuation\">,</span><br>            url<span class=\"token operator\">:</span> <span class=\"token string\">\"url to share\"</span><br>        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>            <span class=\"token comment\">// do something on success</span><br>        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>  <span class=\"token punctuation\">{</span><br>            <span class=\"token comment\">// handle errors</span><br>        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br><span class=\"token punctuation\">}</span></code></pre>\n</copy-to-clipboard><p>And your user will end up with a &quot;share sheet&quot;, where they can decide where they want to share.</p>\n<p><figure>\n        <div class=\"img-wrap\" ><img src=\"/images/share-action.jpg\" alt=\"Phone screen showing share action UI\">\n        <figcaption>No more having to decide where you think your users will want to share content</figcaption>\n      </div>\n      </figure></p>\n<h2 id=\"browser-support\">Browser support <a class=\"direct-link\" href=\"#browser-support\" aria-label=\"browser support\"><span class=\"copy-link\"></span></a></h2>\n<p>At this point you're probably thinking yeah, this is great and all but the browser support is terrible, but I think you might be surprised, the browser support is good in the place it matters most: <em>mobile</em>.</p>\n<p><figure>\n        <div class=\"img-wrap\" ><img src=\"/images/web-share-cani.png\" alt=\"Screenshot of caniuse.com data for the Web Share API\">\n        <figcaption>Things aren't as bleak as all the red would indicate</figcaption>\n      </div>\n      </figure></p>\n<p>Yeah that is a lot of red, but if you analyze the data, the support is decent in key places:</p>\n<ul>\n<li>Safari 14 on IOS AND Safari on Mac OS.</li>\n<li>Chrome for Android</li>\n<li>Firefox for Android</li>\n<li>Edge (Windows only)</li>\n<li>Samsung Internet</li>\n</ul>\n<p>We're at around 55% of global users, however if you filter to just mobile you're looking at 91.96% according to <a href=\"https://caniuse.com/?search=web%20share%20api\" rel=\"noopener\" target=\"_blank\">caniuse.com</a>. Sure, the obvious missing pieces are cross platform support for Chrome and Firefox, as well as key OSs to capture non Western demographics, but you can always fallback to the older methods of sharing on browsers that don't support the API, and thats what i'll go into next.</p>\n<h2 id=\"web-share-api-as-progressive-enhancement\">Web Share API as progressive enhancement <a class=\"direct-link\" href=\"#web-share-api-as-progressive-enhancement\" aria-label=\"web share api as progressive enhancement\"><span class=\"copy-link\"></span></a></h2>\n<p>The rest of this article describes the approach that I took for implementing the Web Share API as a progressive enhancement to my blog. For browsers where the API is supported the option is offered, otherwise I added share buttons for common places where I might expect people to share e.g. Twitter.</p>\n<p>For my blog I'm using 11ty, a really flexible static site generator which encourages you to build lightweight and fast websites.<br>\nI wrote about my journey with 11ty over here: <a href=\"https://griffa.dev/posts/how-i-got-started-with-11ty/\">How I got started with 11ty</a>.</p>\n<h3 id=\"doing-things-the-old-way\">Doing things the old way <a class=\"direct-link\" href=\"#doing-things-the-old-way\" aria-label=\"doing things the old way\"><span class=\"copy-link\"></span></a></h3>\n<p>Supporting lots of different websites for share targets is quite time consuming, each does it in different ways.</p>\n<p>I started out with a bit of html templating:</p>\n<copy-to-clipboard><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nav</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sharing<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">aria-label</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Social Sharing<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>social-share<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    {%- for link in external.sharing %}<br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span><br>        <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>icon-share url-share<span class=\"token punctuation\">\"</span></span><br>        <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{link.text}}<span class=\"token punctuation\">\"</span></span><br>        <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>_blank<span class=\"token punctuation\">\"</span></span><br>        <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{link.url(title, tags, page) | url}}<span class=\"token punctuation\">\"</span></span><br>        <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>action external<span class=\"token punctuation\">\"</span></span><br>      <span class=\"token punctuation\">></span></span><br>        {% include link.icon %}<br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><br>    {%- endfor %}<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nav</span><span class=\"token punctuation\">></span></span></code></pre>\n</copy-to-clipboard><p>I'm making use of a few things here in 11ty, <a href=\"https://mozilla.github.io/nunjucks/templating.html\" rel=\"noopener\" target=\"_blank\">Nunjucks templating</a> and <a href=\"https://www.11ty.dev/docs/data-global/\" rel=\"noopener\" target=\"_blank\">global data</a>.</p>\n<p>Global data files are either JSON or javascript, you can see from the code snippet that i have a <code>sharing</code> array of objects and each object has the following:</p>\n<ul>\n<li>text</li>\n<li>icon</li>\n<li>url function: passing in the page title, tags for my blog post and the current 11ty page object.</li>\n</ul>\n<p>Let's take a look at how this is implemented; I have the following file <code>src/_data/external.js</code>, this is where the code earlier gets <code>external</code> from as its variable name.</p>\n<p>The file looks like this.</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><br>  sharing<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><br>    <span class=\"token punctuation\">{</span><br>      icon<span class=\"token operator\">:</span> <span class=\"token string\">\"img/twitter.svg\"</span><span class=\"token punctuation\">,</span><br>      text<span class=\"token operator\">:</span> <span class=\"token string\">\"Share to Twitter\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">title<span class=\"token punctuation\">,</span> tags <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> page</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">const</span> twitterUrl <span class=\"token operator\">=</span> <span class=\"token string\">\"https://twitter.com/intent/tweet?text=\"</span><span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> text<span class=\"token punctuation\">,</span> url <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> genericShare<span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">,</span> tags<span class=\"token punctuation\">,</span> page<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>twitterUrl<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">encodeURIComponent</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>text<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">{</span><br>      icon<span class=\"token operator\">:</span> <span class=\"token string\">\"img/linkedin.svg\"</span><span class=\"token punctuation\">,</span><br>      text<span class=\"token operator\">:</span> <span class=\"token string\">\"Share to LinkedIn\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">title<span class=\"token punctuation\">,</span> tags <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> page</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">https://www.linkedin.com/shareArticle?mini=true&amp;url=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">getUrl</span><span class=\"token punctuation\">(</span><br>          page<br>        <span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&amp;title=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">encodeURIComponent</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&amp;source=griffadev</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">{</span><br>      icon<span class=\"token operator\">:</span> <span class=\"token string\">\"img/reddit.svg\"</span><span class=\"token punctuation\">,</span><br>      text<span class=\"token operator\">:</span> <span class=\"token string\">\"Share to Reddit\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">title<span class=\"token punctuation\">,</span> tags <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> page</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">const</span> baseUrl <span class=\"token operator\">=</span> <span class=\"token string\">\"https://www.reddit.com/submit?\"</span><span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>baseUrl<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">uri=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">getUrl</span><span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&amp;title=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">encodeURIComponent</span><span class=\"token punctuation\">(</span><br>          title<br>        <span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">{</span><br>      icon<span class=\"token operator\">:</span> <span class=\"token string\">\"img/awful.svg\"</span><span class=\"token punctuation\">,</span><br>      text<span class=\"token operator\">:</span> <span class=\"token string\">\"Share to Hacker News\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">title<span class=\"token punctuation\">,</span> tags <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> page</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">const</span> baseUrl <span class=\"token operator\">=</span> <span class=\"token string\">\"https://news.ycombinator.com/submitlink?\"</span><span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>baseUrl<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">u=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">getUrl</span><span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&amp;t=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">encodeURIComponent</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n</copy-to-clipboard><p>Hopefully, you can see how the html maps over to the javascript. Each of the websites share the content in slightly different ways.<br>\nYou might be noticing <code>genericShare.data</code> is missing, you'd be right.</p>\n<p>Let's take a look at that function:</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> siteMeta <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./metadata.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">const</span> helpers <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./helpers\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getUrl</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">page</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">encodeURIComponent</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>siteMeta<span class=\"token punctuation\">.</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>page<span class=\"token punctuation\">.</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">const</span> genericShare <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">title<span class=\"token punctuation\">,</span> tags <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> page</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>siteMeta<span class=\"token punctuation\">.</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>page<span class=\"token punctuation\">.</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">const</span> text <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>title<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><br>      <span class=\"token comment\">// get my twitter handle</span><br>      siteMeta<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">.</span>twitter<br>    <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>tags<br>      <span class=\"token comment\">// remove 11t built in tags from the tags for my bpost</span><br>      <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>helpers<span class=\"token punctuation\">.</span>filterCollectionTags<span class=\"token punctuation\">)</span><br>      <span class=\"token comment\">// add a twitter style hashtag</span><br>      <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">tag</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">#</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>tag<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><br>      <span class=\"token comment\">// convert back to a string</span><br>      <span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><br>      text<span class=\"token punctuation\">,</span><br>      title<span class=\"token punctuation\">,</span><br>      url<span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n</copy-to-clipboard><p>In this function I'm getting the full url for my website <code>siteMeta.url</code> from a <code>metadata.json</code> and appending that to the current <code>page.url</code>.<br>\nAlso in my <a href=\"https://github.com/Georgegriff/griffadev/blob/main/src/_data/metadata.json\" rel=\"noopener\" target=\"_blank\">metadata.json</a> I have some more data about myself e.g. my twitter handle, when people share my posts I can get automatically tagged.</p>\n<p>Finally, I added all of the tags from my front matter, that are on the blog post, over to the text for the share content too, I filter out tags that I don't want, for example tags for my 11ty collection names.</p>\n<p>If you aren't sure what i mean by <a href=\"https://www.11ty.dev/docs/data-frontmatter/\" rel=\"noopener\" target=\"_blank\">front matter</a> it's the metadata at the top of my markdown files:</p>\n<copy-to-clipboard><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span><br><span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Using the Web Share API for simple native sharing\"</span><br><span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span><br>  <span class=\"token punctuation\">-</span> JavaScript<br>  <span class=\"token punctuation\">-</span> 11ty<br>  <span class=\"token punctuation\">-</span> Webdev<br><span class=\"token punctuation\">---</span></code></pre>\n</copy-to-clipboard><p>For a full implementation reference, checkout my Github repo for my blog:</p>\n<ul>\n<li><a href=\"https://github.com/Georgegriff/griffadev/blob/main/src/_includes/partials/share-page.html\" rel=\"noopener\" target=\"_blank\">share-page.html</a></li>\n<li><a href=\"https://github.com/Georgegriff/griffadev/blob/main/src/_data/external.js\" rel=\"noopener\" target=\"_blank\">src/_data/external.js</a></li>\n<li><a href=\"https://github.com/Georgegriff/griffadev/blob/main/src/_data/metadata.json\" rel=\"noopener\" target=\"_blank\">metadata.json</a></li>\n<li><a href=\"https://github.com/Georgegriff/griffadev/blob/e650469e09363ad5049d657c5ea50c6f0225e7ac/src/_data/helpers.js#L5\" rel=\"noopener\" target=\"_blank\">tag filters</a></li>\n</ul>\n<h3 id=\"adding-in-the-web-share-api\">Adding in the Web Share API <a class=\"direct-link\" href=\"#adding-in-the-web-share-api\" aria-label=\"adding in the web share api\"><span class=\"copy-link\"></span></a></h3>\n<p>Now we've implemented the basic behavior for everyone, we can progressively enhance the website for browsers that support the Web Share API.</p>\n<p>Updating the HTML template:</p>\n<copy-to-clipboard><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nav</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sharing<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">aria-label</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Social Sharing<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>social-share<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    {% set genericShareData = external.genericShare.data(title, tags, page) %}<br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>native-share<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">display</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token attr-name\">hidden</span><span class=\"token punctuation\">></span></span><br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><br>        <span class=\"token attr-name\">data-title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{genericShareData.title}}<span class=\"token punctuation\">\"</span></span><br>        <span class=\"token attr-name\">data-url</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{genericShareData.url}}<span class=\"token punctuation\">\"</span></span><br>        <span class=\"token attr-name\">data-text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{genericShareData.text}}<span class=\"token punctuation\">\"</span></span><br>        <span class=\"token attr-name\">aria-label</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Native share<span class=\"token punctuation\">\"</span></span><br>      <span class=\"token punctuation\">></span></span><br>        {% include 'img/share.svg' %}<br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><br>    {%- for link in external.sharing %}<br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span><br>        <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>icon-share url-share<span class=\"token punctuation\">\"</span></span><br>        <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{link.text}}<span class=\"token punctuation\">\"</span></span><br>        <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>_blank<span class=\"token punctuation\">\"</span></span><br>        <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{link.url(title, tags, page) | url}}<span class=\"token punctuation\">\"</span></span><br>        <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>action external<span class=\"token punctuation\">\"</span></span><br>      <span class=\"token punctuation\">></span></span><br>        {% include link.icon %}<br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><br>    {%- endfor %}<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nav</span><span class=\"token punctuation\">></span></span></code></pre>\n</copy-to-clipboard><p>The key thing that has changed from the original example is the addition of:</p>\n<copy-to-clipboard><pre class=\"language-html\"><code class=\"language-html\">{% set genericShareData = external.genericShare.data(title, tags, page) %}<br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>native-share<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">display</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token attr-name\">hidden</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><br>    <span class=\"token attr-name\">data-title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{genericShareData.title}}<span class=\"token punctuation\">\"</span></span><br>    <span class=\"token attr-name\">data-url</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{genericShareData.url}}<span class=\"token punctuation\">\"</span></span><br>    <span class=\"token attr-name\">data-text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{genericShareData.text}}<span class=\"token punctuation\">\"</span></span><br>    <span class=\"token attr-name\">aria-label</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Native share<span class=\"token punctuation\">\"</span></span><br>  <span class=\"token punctuation\">></span></span><br>    {% include 'img/share.svg' %}<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></code></pre>\n</copy-to-clipboard><p>You'll see that similar to the example above I'm passing <code>title</code>, <code>url</code> and <code>text</code> using <code>data-*</code> attributes,<br>\nand executing a function my global data object <code>external.genericShare.data(title, tags, page)</code>.</p>\n<p>By default this content is hidden with <code>display:none</code>, we're going to enable the content with a little bit of JavaScript.</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>navigator<span class=\"token punctuation\">.</span>share<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">const</span> nativeShare <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".native-share\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nativeShare<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token comment\">// make the button visible</span><br>    nativeShare<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">\"flex\"</span><span class=\"token punctuation\">;</span><br>    nativeShare<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"button\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">const</span> button <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>currentTarget<span class=\"token punctuation\">;</span><br>      navigator<br>        <span class=\"token punctuation\">.</span><span class=\"token function\">share</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><br>          <span class=\"token comment\">// grab the data attributes from the html</span><br>          text<span class=\"token operator\">:</span> button<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data-text\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>          title<span class=\"token operator\">:</span> button<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data-title\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>          url<span class=\"token operator\">:</span> button<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data-url\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br>        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>          <span class=\"token comment\">// show some content to say it was shared, e.g. thank the user.</span><br>          nativeShare<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"shared\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br>        <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span></code></pre>\n</copy-to-clipboard><p>First, I'm checking that we have access to <code>navigator.share</code>. If its available, the button is made visible, a <code>click</code> handler is added and on click the <code>data-*</code> attributes are read, finally <code>navigator.share</code> is called.</p>\n<p>If you wanted to, you could hide your fallback links when <code>navigator.share</code> is available, I chose not to just yet, but might do down the road, when more desktop site get support for the Web Share API.</p>\n<p>If you're wondering how to go about adding JavaScript into an 11ty project, there are many ways to go about it, I recently wrote about how to approach this <a href=\"https://griffa.dev/posts/using-web-components-with-11ty/\">for Web Components</a>.</p>\n<h2 id=\"meta-tags\">Meta tags <a class=\"direct-link\" href=\"#meta-tags\" aria-label=\"meta tags\"><span class=\"copy-link\"></span></a></h2>\n<p>To round all of this work out you will want to make sure that you have all of the appropriate meta tags set on your website so that sites can put the correct images/description in share link previews.</p>\n<p>For example:</p>\n<copy-to-clipboard><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>author<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{author or metadata.author.name}}<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>og:site_name<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{ siteTitle }}<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>og:title<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{ pageTitle }}<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>og:type<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>website<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>og:url<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{ currentUrl }}<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br><br>{% if socialImage %}<br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>twitter:card<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>summary_large_image<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>og:image<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{ socialImage }}<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>twitter:image<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{ socialImage }}<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>og:image:alt<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Page image for {{ metadata.title }}<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>twitter:image:alt<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Page image for {{ metadata.title }}<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>{% endif %} {% if tagline %}<br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>description<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{ tagline }}<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>twitter:description<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{ tagline }}<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>og:description<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{ tagline }}<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>{% endif %}</code></pre>\n</copy-to-clipboard><p>You can see my full metadata over on <a href=\"https://github.com/Georgegriff/griffadev/blob/main/src/_includes/partials/meta.html\" rel=\"noopener\" target=\"_blank\">Github</a>.</p>\n<h2 id=\"summary\">Summary <a class=\"direct-link\" href=\"#summary\" aria-label=\"summary\"><span class=\"copy-link\"></span></a></h2>\n<p>Support for the Web Share API is growing and with it progressive enhancement is a really great approach to building modern websites, I wrote about using this approach for fast sites, with interactivity sprinkled in: <a href=\"https://griffa.dev/posts/using-web-components-with-11ty/\">Using Web Components With 11ty</a>.</p>\n",
      "date_published": "2020-10-10T00:00:00+00:00"
    },{
      "id": "https://griffa.dev/posts/tips-for-debugging-in-11ty/",
      "url": "https://griffa.dev/posts/tips-for-debugging-in-11ty/",
      "title": "Tips for debugging in 11ty",
      "tags": ["QuickTip","JavaScript","11ty","VSCode"],
      "summary": "Some quick debugging tips that I came up with whilst building my personal blog.",
      "content_html": "<p>The 11ty documentation is  really great, but when it comes to developing and debugging, I really prefer to use a live debugger.<br>\nIt can help to understand a problem, but also can serve as a really great way of understanding how you might go about hooking into a framework, in this case 11ty.</p>\n<h2 id=\"using-a-filter-to-debug-11ty\">Using a filter to debug 11ty <a class=\"direct-link\" href=\"#using-a-filter-to-debug-11ty\" aria-label=\"using a filter to debug 11ty\"><span class=\"copy-link\"></span></a></h2>\n<p>In my config for 11ty projects I put in this little debugging filter.</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\">  eleventyConfig<span class=\"token punctuation\">.</span><span class=\"token function\">addFilter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"debugger\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>args</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>args<span class=\"token punctuation\">)</span><br>    <span class=\"token keyword\">debugger</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n</copy-to-clipboard><p>You could use this filter to find out the available attributes on a post, for you to use in your template, for example.</p>\n<p>I have a hero object on my posts:</p>\n<copy-to-clipboard><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span><br><span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> \"Tips for debugging in 11ty<br><span class=\"token key atrule\">hero</span><span class=\"token punctuation\">:</span><br>  <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"/images/debugging-11ty.png\"</span><br>  <span class=\"token key atrule\">alt</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Picture of vscode debugger and 11ty debugging filter'</span><br><span class=\"token punctuation\">---</span></code></pre>\n</copy-to-clipboard><p>In my code I can check out the variables, and have them logged to the console.</p>\n<copy-to-clipboard><pre class=\"language-html\"><code class=\"language-html\">{{ post.data.hero | debugger }}</code></pre>\n</copy-to-clipboard><p>This might seem really silly, but I found this incredibly useful, especially when hooked up with a live debugger (shown later).<br>\nOn save of a file, I get the object that was passed to the filter, this can be really handy in seeing what variables you have to play with.</p>\n<p>Example <code>console.log</code> output:</p>\n<copy-to-clipboard><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">{</span><br><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> Writing dist/tags/design/index.html from ./src/tags.md.<br><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span><br><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>   image: <span class=\"token string\">'/images/design-day1.png'</span>,<br><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>   alt: <span class=\"token string\">'Picture of day 1 design of blog'</span><br><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> Writing dist/tags/research/index.html from ./src/tags.md.<br><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> undefined<br><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> Writing dist/tags/webcomponents/index.html from ./src/tags.md.<br><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span><br><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>   image: <span class=\"token string\">'/images/custom-theme.png'</span>,<br><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>   alt: <span class=\"token string\">'Picture of using Chrome dev tools to adjust CSS variables'</span>,<br><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>   show: <span class=\"token boolean\">false</span><br><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> Writing dist/tags/accessibility/index.html from ./src/tags.md.<br><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span><br><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>   image: <span class=\"token string\">'/images/custom-theme.png'</span>,<br><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>   alt: <span class=\"token string\">'Picture of using Chrome dev tools to adjust CSS variables'</span>,<br><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>   show: <span class=\"token boolean\">false</span><br><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> Writing dist/tags/ux/index.html from ./src/tags.md.</code></pre>\n</copy-to-clipboard><p>Where this becomes really great is if you use the VSCode debugger to run 11ty, as soon as you use the filter and hit save because of the <code>debugger</code> statement you go right to the debug filter.</p>\n<h2 id=\"debugging-with-vs-code\">Debugging with VS Code <a class=\"direct-link\" href=\"#debugging-with-vs-code\" aria-label=\"debugging with vs code\"><span class=\"copy-link\"></span></a></h2>\n<p>Sure you could <code>console.log</code>, but using the VS Code debugger for this can be extremely helpful to do some of that variable treasure hunting.</p>\n<p>To do this, you will need to create a new debug task, you can do this in the UI, but a quick way is to:</p>\n<ol>\n<li>Create a folder in your workspace called <code>.vscode</code></li>\n<li>Create a file called inside <code>.vscode</code> folder called <code>launch.json</code></li>\n<li>Add a debug task for the <code>eleventy</code> runner, here is an example:</li>\n</ol>\n<copy-to-clipboard><pre class=\"language-json\"><code class=\"language-json\">  <span class=\"token punctuation\">{</span><br>      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"11ty\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token property\">\"request\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"launch\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token property\">\"program\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"${workspaceRoot}/node_modules/.bin/eleventy\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token property\">\"stopOnEntry\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><br>      <span class=\"token property\">\"args\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>      <span class=\"token property\">\"cwd\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"${workspaceRoot}\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token property\">\"console\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"internalConsole\"</span><span class=\"token punctuation\">,</span><br>  <span class=\"token punctuation\">}</span></code></pre>\n</copy-to-clipboard><p>If you want to put it in live watch mode, set args to:</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token string\">\"args\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"--watch\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></code></pre>\n</copy-to-clipboard><ol start=\"4\">\n<li>Head over to the debugging pane and find the task called <code>11ty</code>, set your breakpoints up and good to debug.</li>\n</ol>\n<p><figure>\n        <div class=\"img-wrap\" ><img src=\"/images/debugging-11ty.png\" alt=\"VSCode showing code paused on a line\">\n        <figcaption>You can now inspect all the variables you want.</figcaption>\n      </div>\n      </figure></p>\n<p>This approach also works really well with writing custom <a href=\"https://www.11ty.dev/docs/collections/\" rel=\"noopener\" target=\"_blank\">collections</a>, or using <a href=\"https://www.11ty.dev/docs/data/\" rel=\"noopener\" target=\"_blank\">data</a>.</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\">  eleventyConfig<span class=\"token punctuation\">.</span><span class=\"token function\">addCollection</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"series\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">collection</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token comment\">// i dont know whats in collection.</span><br>    <span class=\"token keyword\">debugger</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</copy-to-clipboard><p>Putting this together, the following GIF shows how this can be a nice interactive workflow.</p>\n<p><figure>\n        <div class=\"img-wrap\" ><img src=\"/images/debugging_11ty.gif\" alt=\"VSCode showing code paused on a line\">\n        <figcaption>Really interactive way of debugging and developing</figcaption>\n      </div>\n      </figure></p>\n<p>I hope this was helpful to people, 11ty is so lightning fast, that marrying it with the VS Code debugger when you're writing JavaScript is super interactive.</p>\n",
      "date_published": "2020-10-09T00:00:00+00:00"
    },{
      "id": "https://griffa.dev/posts/using-web-components-with-11ty/",
      "url": "https://griffa.dev/posts/using-web-components-with-11ty/",
      "title": "Using Web Components With 11ty",
      "tags": ["11ty","WebComponents","JavaScript"],
      "summary": "I took a progressive enhancement approach to using frontend javascript for my blog, Web Components are the perfect fit here.",
      "content_html": "<p>I've talked about earlier in this series that I wanted to bring things back to basics with this blog, focusing on web fundamentals e.g. html and css. In addition to this, by using 11ty, I'm able to author in Markdown, meaning I'm free to add HTML anywhere in my posts.</p>\n<p>However, whist I'm focusing on HTML/CSS, there are areas where it makes sense to sprinkle in JavaScript, for extra interactivity, this is where Web Components come in.</p>\n<p><figure>\n        <div class=\"img-wrap\" ><img src=\"/images/fighting-cats.gif\" alt=\"Picture of my fighting cats Chewie and Beau\">\n        <figcaption>Hey! He mentioned web components, get him! (Chewie and Beau are friends really)</figcaption>\n      </div>\n      </figure></p>\n<p>A Google engineer said it better than I could:</p>\n<p><a href=\"https://twitter.com/anyuser/status/1212847104718061569\" rel=\"noopener\" target=\"_blank\">https://twitter.com/anyuser/status/1212847104718061569</a></p>\n<p>In this article I'll explain how I went about setting up a development environment for Web Components, as well as simple production optimizations.</p>\n<p>But first, I want to discuss the approach that I've taken for consuming web components in this site. All content should be available without JavaScript/Web Components available, but where they are available, the content should be progressively enhanced.</p>\n<h2 id=\"progressive-enhancement-web-component-use-cases\">Progressive enhancement web component use cases <a class=\"direct-link\" href=\"#progressive-enhancement-web-component-use-cases\" aria-label=\"progressive enhancement web component use cases\"><span class=\"copy-link\"></span></a></h2>\n<p>Here are a couple of uses cases I had for progressively enhanced content, using JavaScript.</p>\n<h3 id=\"youtube-embed\">YouTube embed <a class=\"direct-link\" href=\"#youtube-embed\" aria-label=\"youtube embed\"><span class=\"copy-link\"></span></a></h3>\n<p>To embed a YouTube video via progressive enhancement, you first need to identify what is the minimal HTML-only implementation of the content, this is:</p>\n<ul>\n<li>A link which when clicked navigates to the video.</li>\n<li>An image thumbnail to be used for the link to wrap.</li>\n<li>A caption for the video, important for accessibility.</li>\n</ul>\n<p>The second part of this is identifying a component to use to embed the YouTube player, I wasn't going to re-invent the wheel here.</p>\n<p><a href=\"https://www.npmjs.com/package/lite-youtube-embed\" rel=\"noopener\" target=\"_blank\">lite-youtube-embed</a> from <a href=\"https://twitter.com/paul_irish\" rel=\"noopener\" target=\"_blank\">Paul Irish</a>, is the perfect fit here.</p>\n<p><code>npm install lite-youtube-embed</code></p>\n<copy-to-clipboard><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>lite-youtube</span><br>  <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>video<span class=\"token punctuation\">\"</span></span><br>  <span class=\"token attr-name\">videoid</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>j8mJrhhdHWc<span class=\"token punctuation\">\"</span></span><br>  <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token string url\">'https://i.ytimg.com/vi/j8mJrhhdHWc/hqdefault.jpg'</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><br><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span><br>    <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token punctuation\">(</span><span class=\"token string\">'customElements'</span> <span class=\"token keyword\">in</span> window<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span><br>    <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Play Video<span class=\"token punctuation\">\"</span></span><br>    <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>no-js<span class=\"token punctuation\">\"</span></span><br>    <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>_blank<span class=\"token punctuation\">\"</span></span><br>    <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://youtube.com?w=j8mJrhhdHWc<span class=\"token punctuation\">\"</span></span><br>    <span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>svg</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2000/svg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">viewBox</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0 0 32 32<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>g</span> <span class=\"token attr-name\">transform</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>translate(-339 -150.484)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>path</span> <span class=\"token attr-name\">fill</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>var(--White, #fff)<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>M-1978.639,24.261h0a1.555,1.555,0,0,1-1.555-1.551V9.291a1.555,1.555,0,0,1,1.555-1.551,1.527,1.527,0,0,1,.748.2l11.355,6.9a1.538,1.538,0,0,1,.793,1.362,1.526,1.526,0,0,1-.793,1.348l-11.355,6.516A1.52,1.52,0,0,1-1978.639,24.261Z<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">transform</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>translate(2329 150.484)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span><br>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>path</span> <span class=\"token attr-name\">fill</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>var(--Primary, #000)<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>M16.563.563a16,16,0,1,0,16,16A16,16,0,0,0,16.563.563Zm7.465,17.548L12.672,24.627a1.551,1.551,0,0,1-2.3-1.355V9.853a1.552,1.552,0,0,1,2.3-1.355l11.355,6.9A1.553,1.553,0,0,1,24.027,18.111Z<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">transform</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>translate(338.438 149.922)<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>g</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>svg</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><br>  <span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>lite-youtube</span><span class=\"token punctuation\">></span></span></code></pre>\n</copy-to-clipboard><p>There's a couple of things going on above:</p>\n<ul>\n<li>background-image server from youtube CDN.</li>\n<li>There is an <code>&lt;a&gt;</code> by default, this will open the youtube video in a new tab</li>\n<li>onclick to prevent opening a new tab.</li>\n</ul>\n<p>Explaining the onclick: Whats happening here is.</p>\n<ul>\n<li>If Web Components/JavaScript are not available on the site, the onclick is ignored, and links as expected, I do this by checking if <code>customElements</code> is supported in the browser.</li>\n<li>When JS/Web Components are enabled and the link is clicked, the tab does not open, and the click is instead handled by <code>lite-youtube</code>, resulting in a youtube embed.</li>\n</ul>\n<p>Like so:</p>\n<div class=\"video-size\">\n    <div class=\"video-wrapper\">\n        <lite-youtube class=\"video\" videoid=\"j8mJrhhdHWc\" style=\"background-image: url('https://i.ytimg.com/vi/j8mJrhhdHWc/hqdefault.jpg');\">\n            <a rel=\"noopener\" onclick=\"('customElements' in window) && event.preventDefault()\" title=\"Play Video\" class=\"no-js\" target=\"_blank\" href=\"https://youtube.com?w=j8mJrhhdHWc\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\">\n                <g transform=\"translate(-339 -150.484)\">\n                    <path fill=\"var(--White, #fff)\" d=\"M-1978.639,24.261h0a1.555,1.555,0,0,1-1.555-1.551V9.291a1.555,1.555,0,0,1,1.555-1.551,1.527,1.527,0,0,1,.748.2l11.355,6.9a1.538,1.538,0,0,1,.793,1.362,1.526,1.526,0,0,1-.793,1.348l-11.355,6.516A1.52,1.52,0,0,1-1978.639,24.261Z\" transform=\"translate(2329 150.484)\"/>\n                    <path fill=\"var(--Primary, #000)\" d=\"M16.563.563a16,16,0,1,0,16,16A16,16,0,0,0,16.563.563Zm7.465,17.548L12.672,24.627a1.551,1.551,0,0,1-2.3-1.355V9.853a1.552,1.552,0,0,1,2.3-1.355l11.355,6.9A1.553,1.553,0,0,1,24.027,18.111Z\" transform=\"translate(338.438 149.922)\" />\n                </g>\n            </svg>\n        </a>\n        </lite-youtube>\n    </div>\n</div>\n<h3 id=\"live-code-demos\">Live code demos <a class=\"direct-link\" href=\"#live-code-demos\" aria-label=\"live code demos\"><span class=\"copy-link\"></span></a></h3>\n<p>At some point I will have to do a post that goes into more detail of exactly how my live demos are authored using Markdown in 11ty, but they are ultimately rendered using a web component.</p>\n<p>Let's get meta, here is a Live demo web component that renders itself.</p>\n\n          <live-demo id=live-demo-demo>\n          <div contenteditable slot=\"html\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>live-demo</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>my-live-demo<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">slot</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>html<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>        <span class=\"token entity named-entity\" title=\"&lt;\">&amp;lt;</span>div class=<span class=\"token entity named-entity\" title=\"&quot;\">&amp;quot;</span>my-div<span class=\"token entity named-entity\" title=\"&quot;\">&amp;quot;</span><span class=\"token entity named-entity\" title=\"&gt;\">&amp;gt;</span>styled by the css<span class=\"token entity named-entity\" title=\"&lt;\">&amp;lt;</span>/div<span class=\"token entity named-entity\" title=\"&gt;\">&amp;gt;</span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">slot</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>        .my-div {<br>          color: var(--Primary, blue);<br>        }<br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n</div><div contenteditable slot=\"css\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">live-demo</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 400px<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 300px<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 3rem<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">min-height</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n</div></live-demo><p>The approach I've taken here is that when the web component is not available, the code is just rendered and syntax highlighted, but when JS is available a live demo component appears. If you were to disable JavaScript in your browser you should just see the code snippets instead.</p>\n<p>I made use of slots, one for <code>js</code> one for <code>html</code> and one for <code>css</code>. The web component then takes the text content and renders it appropriately.</p>\n<p>This approach is <code>a lot</code> like <a href=\"mdjs\" rel=\"noopener\" target=\"_blank\">https://open-wc.org/mdjs/</a>, which I hope to use in the future for my blog, but it was fun to see about how I could build this myself.</p>\n<h2 id=\"setting-up-a-dev-environment-for-11ty-and-web-components\">Setting up a dev environment for 11ty and Web Components <a class=\"direct-link\" href=\"#setting-up-a-dev-environment-for-11ty-and-web-components\" aria-label=\"setting up a dev environment for 11ty and web components\"><span class=\"copy-link\"></span></a></h2>\n<p>Setting up a development environment for 11ty and web components is pretty simple, especially if are using pure JavaScript, and don't need any build process. I found that having no build process was such a breath of fresh air, development tools should just get out of your way and let you code.</p>\n<blockquote>\n<p>If you are just working with vanilla web components and don't want to use any dependencies from NPM, then good news, you don't need to do anything special, just use the default 11ty dev server, and move on to create great content!</p>\n</blockquote>\n<p>If you want to use some components or libraries from NPM e.g. lit-html/lit-element you will need a way to transform <code>bare imports</code> into relative urls that work in the browser, e.g.</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> LitElement <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"lit\"</span><span class=\"token punctuation\">;</span></code></pre>\n</copy-to-clipboard><p>would become something like:</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> LitElement <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./../node_modules/lit-element/lit-element.js\"</span><span class=\"token punctuation\">;</span></code></pre>\n</copy-to-clipboard><p>The best tool for doing this is <a href=\"https://www.npmjs.com/package/es-dev-server\" rel=\"noopener\" target=\"_blank\">https://www.npmjs.com/package/es-dev-server</a>.</p>\n<blockquote>\n<p>At the time of writing this tool is in the process of getting moved over to <a href=\"https://www.npmjs.com/package/@web/dev-server\" rel=\"noopener\" target=\"_blank\">@web/dev-server</a>. For this example, i'll use <code>@web/dev-server</code> but <code>es-dev-server</code> would work too.</p>\n</blockquote>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\">npm i <span class=\"token operator\">--</span>save<span class=\"token operator\">-</span>dev @web<span class=\"token operator\">/</span>dev<span class=\"token operator\">-</span>server</code></pre>\n</copy-to-clipboard><p>First off, when serving an 11ty website you would normally use <code>npx eleventy --serve</code>, however instead we're going to use <code>npx eleventy --watch</code>.<br>\nThis will give us all the live building of your 11ty site, but without a server.</p>\n<p>For our server, this is where <code>@web/dev-server</code> will come in, which can be run like so:</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\">web<span class=\"token operator\">-</span>dev<span class=\"token operator\">-</span>server <span class=\"token operator\">--</span>node<span class=\"token operator\">-</span>resolve <span class=\"token operator\">--</span>open</code></pre>\n</copy-to-clipboard><p>In order to combine these two tasks we can use <code>concurrently</code></p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\">npm i concurrently <span class=\"token operator\">--</span>save<span class=\"token operator\">-</span>dev</code></pre>\n</copy-to-clipboard><p>and combine them into a npm script:</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\">    <span class=\"token string\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"concurrently \\\"npx eleventy --watch\\\" \\\"web-dev-server  --node-resolve\\\"\"</span><span class=\"token punctuation\">,</span></code></pre>\n</copy-to-clipboard><p>Combining the above will give us a dev server, however we have not told it how find our 11ty <code>_site</code> folder, as well as resolving our node modules.<br>\nIn order to do this we will need to introduce a small config file and implement a simple middleware to do the following:</p>\n<ul>\n<li>If the request is an 11ty asset serve it from <code>_site</code> by appending <code>_site</code> to url.</li>\n<li>If the request is for a html page serve it from <code>_site</code></li>\n<li>Otherwise move to <code>next()</code> which will allow JS files to be handled by logic to resolve ESM imports.</li>\n</ul>\n<p>Create a file call <code>web-dev-server.config.js</code></p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><br>  port<span class=\"token operator\">:</span> <span class=\"token number\">8000</span><span class=\"token punctuation\">,</span><br>  watch<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>  rootDir<span class=\"token operator\">:</span> <span class=\"token string\">\".\"</span><span class=\"token punctuation\">,</span><br>  middleware<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token function\">serve11tyAssets</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> dist<span class=\"token operator\">:</span> <span class=\"token string\">\"_site_\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>  nodeResolve<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n</copy-to-clipboard><p>This should all be quite straight forward to understand hopefully:</p>\n<ul>\n<li>port: Local port for the server</li>\n<li>watch: Makes browser reload whenever something changes</li>\n<li>rootDir: This should be the root dir that contains <code>node_modules</code> and the 11ty <code>_site</code> folder.</li>\n<li>middleware: functions that get executed on requests, i'll explain serve11tyAssets shortly.</li>\n<li>nodeResolve: flag to convert <code>import foo from 'bar'</code></li>\n</ul>\n<p><code>serve11tyAssets</code> will look something like this.</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"path\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fs\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>promises<span class=\"token punctuation\">;</span><br><span class=\"token keyword\">const</span> <span class=\"token constant\">URL</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"url\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token constant\">URL</span><span class=\"token punctuation\">;</span><br><span class=\"token comment\">/**<br> *<br> * Check if asset lives in 11ty _site folder, if not serve from root folder.<br> */</span><br><span class=\"token keyword\">const</span> serve11tyAssets <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> dist <span class=\"token operator\">=</span> <span class=\"token string\">\"_site\"</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">return</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">context<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>    <span class=\"token comment\">// Node URL requires a full url so... whatever.com (url isnot important)</span><br>    <span class=\"token keyword\">const</span> pathName <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URL</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">https://whatever.com</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>context<span class=\"token punctuation\">.</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>pathname<span class=\"token punctuation\">;</span><br>    <span class=\"token comment\">// is the request for a html file?</span><br>    <span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> pathName<span class=\"token punctuation\">.</span><span class=\"token function\">endsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>pathName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">index.html</span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token operator\">:</span> pathName<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token comment\">// check if the file exists, if so, modify the url to come from `_site` folder.</span><br>      <span class=\"token keyword\">const</span> stats <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">stat</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>dist<span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>stats<span class=\"token punctuation\">.</span><span class=\"token function\">isFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        context<span class=\"token punctuation\">.</span>url <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>dist<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>pathName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br>      <span class=\"token keyword\">return</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n</copy-to-clipboard><p>Hopefully this example makes sense, and shows how simple it is to add vanilla JavaScript modules into your 11ty development server.<br>\nYou can easily add new tools into this chain if you need as well e.g. gulp</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\">    <span class=\"token string\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npx gulp &amp;&amp; concurrently \\\"npx gulp watch\\\" \\\"npx eleventy --watch\\\" \\\"web-dev-server\\\"\"</span></code></pre>\n</copy-to-clipboard><h2 id=\"production-optimization-of-javascript\">Production optimization of JavaScript <a class=\"direct-link\" href=\"#production-optimization-of-javascript\" aria-label=\"production optimization of javascript\"><span class=\"copy-link\"></span></a></h2>\n<p>When it comes to choosing tools to optimize your JavaScript for an 11ty project, the choice is entirely up to you, if like me you don't want to configure a complex build, you can leverage the great work of others, by using <a href=\"https://open-wc.org/building/building-rollup.html\" rel=\"noopener\" target=\"_blank\">Open WC rollup config</a>.</p>\n<p>Here is my config.</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\">npm i rollup deepmerge rollup<span class=\"token operator\">-</span>plugin<span class=\"token operator\">-</span>output<span class=\"token operator\">-</span>manifest @open<span class=\"token operator\">-</span>wc<span class=\"token operator\">/</span>building<span class=\"token operator\">-</span>rollup <span class=\"token operator\">-</span><span class=\"token constant\">D</span></code></pre>\n</copy-to-clipboard><copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> merge <span class=\"token keyword\">from</span> <span class=\"token string\">\"deepmerge\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createBasicConfig <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@open-wc/building-rollup\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> outputManifest <span class=\"token keyword\">from</span> <span class=\"token string\">\"rollup-plugin-output-manifest\"</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">const</span> entrypoints <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><br>  index<span class=\"token operator\">:</span> <span class=\"token string\">\"src/assets/index.js\"</span><span class=\"token punctuation\">,</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">const</span> baseConfig <span class=\"token operator\">=</span> <span class=\"token function\">createBasicConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><br>  outputDir<span class=\"token operator\">:</span> <span class=\"token string\">\"dist/assets\"</span><span class=\"token punctuation\">,</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">merge</span><span class=\"token punctuation\">(</span>baseConfig<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br>  input<span class=\"token operator\">:</span> entrypoints<span class=\"token punctuation\">,</span><br>  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><br>    <span class=\"token function\">outputManifest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><br>      <span class=\"token comment\">// ../ to go outside of dist and into include</span><br>      fileName<span class=\"token operator\">:</span> <span class=\"token string\">\"../../src/_includes/manifest.json\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token comment\">// assets is my folder of choice for js files</span><br>      publicPath<span class=\"token operator\">:</span> <span class=\"token string\">\"assets/\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</copy-to-clipboard><p>You can add extra entrypoints, which is helpful, if you only want to load some components on some pages.</p>\n<p>In order to hook this back into <code>11ty</code> I'm making use of <code>rollup-plugin-output-manifest</code>. This outputs a <code>manifest.json</code> file.<br>\nYou could output this as a <a href=\"https://www.11ty.dev/docs/data-global/\" rel=\"noopener\" target=\"_blank\">data file</a> if you wanted to, but I wanted to add a little more logic to my scripts so I could do different things depending on if in <code>production</code> mode or not.</p>\n<p>Create a file called <code>src/_data/assets.js</code>, which will be read as <a href=\"https://www.11ty.dev/docs/data-global/\" rel=\"noopener\" target=\"_blank\">Global Data File</a>.</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token function-variable function\">getPath</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">assetName</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"production\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">const</span> assets <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"../_includes/manifest.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">const</span> modulePath <span class=\"token operator\">=</span> assets<span class=\"token punctuation\">[</span>assetName<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>modulePath<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><br>          <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">error with getAsset, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>assetName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> does not exist in manifest.json</span><span class=\"token template-punctuation string\">`</span></span><br>        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br>      <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>modulePath<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/src/assets/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>assetName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n</copy-to-clipboard><p>Then in 11ty templates:</p>\n<copy-to-clipboard><pre class=\"language-html\"><code class=\"language-html\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{ assets.getPath(<span class=\"token punctuation\">\"</span></span><span class=\"token attr-name\">index.js\")}}\"</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>module<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n</copy-to-clipboard><p>Doing this allowed me to just serve the unmodified src code when in development, but embed the production assets, which have hashes in their names for cache busting.</p>\n<p>If you are wondering how to set the NODE_ENV flag, here is my build script.</p>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\">    <span class=\"token string\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"rm -rf dist &amp;&amp; NODE_ENV=production rollup -c rollup.config.js &amp;&amp; NODE_ENV=production npx eleventy\"</span></code></pre>\n</copy-to-clipboard><p>And that's my setup, I'm sure there are better ways of doing this but it got the job done for me, hopefully this was useful.</p>\n",
      "date_published": "2020-10-07T00:00:00+00:00"
    },{
      "id": "https://griffa.dev/posts/how-i-got-started-with-11ty/",
      "url": "https://griffa.dev/posts/how-i-got-started-with-11ty/",
      "title": "How I got started with 11ty",
      "tags": ["11ty","JavaScript"],
      "summary": "I work with React and painfully slow Webpack builds every day, using 11ty for my blog was a breath of fresh air. By using the 11ty starter projects and awesome courses and tutorials for help, I felt like I had superpowers!",
      "content_html": "<p>This article details some of the different resources that I used for learning 11ty to build out my personal website. This is not a tutorial, it is more of a description of the journey that I went on, with the hope some of the steps that I took might help others.</p>\n<p>When building <a href=\"https://griffa.dev\">griffa.dev</a> I wanted to bring things as back to basics as much as I could.</p>\n<p>I wanted to write:</p>\n<ul>\n<li>HTML</li>\n<li>CSS</li>\n<li>and vanilla JS/Node JS</li>\n</ul>\n<p>I wanted to have:</p>\n<ul>\n<li>As minimal build as possible</li>\n<li>Author in a portable format e.g. HTML/Markdown, so I could post my content to other locations e.g. <a href=\"https://dev.to\" rel=\"noopener\" target=\"_blank\">dev.to</a></li>\n<li>Little to no frontend JavaScript and frontend build tools (Webpack/Rollup etc)</li>\n<li>Ability to customize site generation in JavaScript, because that is what I'm most comfortable in.</li>\n</ul>\n<p>I did not want:</p>\n<ul>\n<li>An inflexible framework</li>\n<li>A server to manage</li>\n<li>To use React, I'm using it all the time at work and I'm sick of it, all it does is introduce layers upon layers of complexity.</li>\n</ul>\n<p>With all of the above in mind, I did some research, some of which I went into in <a href=\"https://griffa.dev/posts/good-research-planning-and-design-is-the-best-foundation-for-starting-a-new-project/\">Part 1</a> of this series, and I came to the conclusion that I wanted to use a static site generator, and the tool that I chose was <a href=\"https://11ty.dev\" rel=\"noopener\" target=\"_blank\">Eleventy (11ty)</a>.</p>\n<p><figure>\n        <div class=\"img-wrap\" ><img src=\"/images/sad_beau.jpg\" alt=\"Ginger cat looking he has sad eyes\">\n        <figcaption>Beau is looking sad because I told him I'm not using React, but I didn't want a slow website, so sorry mate.</figcaption>\n      </div>\n      </figure></p>\n<blockquote>\n<p>Okay just to get this out of the way, the only thing i dislike about 11ty is, I'm never sure whether to write it as 11ty or Eleventy, and I think the creator is just trolling us because even the twitter account is <code>@eleven_ty</code>. Well, &quot;ty&quot; <a href=\"https://twitter.com/zachleat\" rel=\"noopener\" target=\"_blank\">Zach</a>, &quot;ty&quot; for Eleventy.</p>\n</blockquote>\n<h2 id=\"what-is-11ty\">What is 11ty <a class=\"direct-link\" href=\"#what-is-11ty\" aria-label=\"what is 11ty\"><span class=\"copy-link\"></span></a></h2>\n<p>To quote its website, &quot;Eleventy is a simpler static site generator&quot;, and simple is right, you can start with a single markdown file, and generate a HTML page from that.</p>\n<copy-to-clipboard><pre class=\"language-javascript\"><code class=\"language-javascript\">npm install <span class=\"token operator\">-</span>g @<span class=\"token number\">11</span>ty<span class=\"token operator\">/</span>eleventy<br>echo <span class=\"token string\">'# Page header'</span> <span class=\"token operator\">></span> <span class=\"token constant\">README</span><span class=\"token punctuation\">.</span>md<br>eleventy</code></pre>\n</copy-to-clipboard><p>So thats a tick for:<br>\n✅ Author in a portable format e.g. HTML/Markdown, so I could post my content to other locations.<br>\n✅ As minimal build as possible.</p>\n<p>On the build front, obviously things can get more complex, but starting from zero code and zero config is a big win for me, I personally really dislike when you get started on a project and the first advice is to install a few hundred dependencies (see Create React App).</p>\n<p>&quot;Eleventy is not a JavaScript framework—that means zero boilerplate client-side JavaScript.&quot;<br>\n✅ Little to no frontend JavaScript and frontend build tools (Webpack/Rollup etc)</p>\n<p>For customization 11ty has:</p>\n<ul>\n<li><code>.eleventy.js</code> which is a configuration format, which has a plugin architecture with an active ecosystem.<br>\nAn example plugin is, adding syntax highlighting to code snippets:</li>\n</ul>\n<copy-to-clipboard><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// .eleventy.js</span><br>module<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">eleventyConfig</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">const</span> pluginSyntaxHighlight <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"@11ty/eleventy-plugin-syntaxhighlight\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  eleventyConfig<span class=\"token punctuation\">.</span><span class=\"token function\">addPlugin</span><span class=\"token punctuation\">(</span>pluginSyntaxHighlight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n</copy-to-clipboard><ul>\n<li>For other customization you have &quot;data files&quot;, allowing you to pull in static or dynamic data into templates.</li>\n</ul>\n<p>Here is an example use of data files: <a href=\"https://github.com/Georgegriff/griffadev/blob/main/src/_data/external.js\" rel=\"noopener\" target=\"_blank\">https://github.com/Georgegriff/griffadev/blob/main/src/_data/external.js</a><br>\nIn this code I am adding my external links and external share data, which will be available in my templates.</p>\n<p>I can then use this external data in my templates, it's all pretty easy.</p>\n<copy-to-clipboard><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nav</span> <span class=\"token attr-name\">aria-label</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Social Sharing<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>social-share<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    {% set genericShareData = external.genericShare.data(title, tags, page) %}<br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><br>        <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>native-share<span class=\"token punctuation\">\"</span></span><br>        <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">display</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><br>        <span class=\"token attr-name\">hidden</span><br>        <span class=\"token attr-name\">data-title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{genericShareData.title}}<span class=\"token punctuation\">\"</span></span><br>        <span class=\"token attr-name\">data-url</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{genericShareData.url}}<span class=\"token punctuation\">\"</span></span><br>        <span class=\"token attr-name\">data-text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{genericShareData.text}}<span class=\"token punctuation\">\"</span></span><br>        <span class=\"token attr-name\">aria-label</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Native share<span class=\"token punctuation\">\"</span></span><br>      <span class=\"token punctuation\">></span></span><br>        {% include 'img/share.svg' %}<br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><br>    {%- for link in external.sharing %}<br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span><br>        <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>icon-share url-share<span class=\"token punctuation\">\"</span></span><br>        <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{link.text}}<span class=\"token punctuation\">\"</span></span><br>        <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>_blank<span class=\"token punctuation\">\"</span></span><br>        <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{link.url(title, tags, page) | url}}<span class=\"token punctuation\">\"</span></span><br>        <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>action external<span class=\"token punctuation\">\"</span></span><br>        <span class=\"token punctuation\">></span></span>{% include link.icon %}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><br>      <span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><br>    {%- endfor %}<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nav</span><span class=\"token punctuation\">></span></span></code></pre>\n</copy-to-clipboard><p>If you are thinking doesn't look like HTML to me, you'd be right, these are templating languages,<br>\n11ty supports <a href=\"https://www.11ty.dev/docs/languages/\" rel=\"noopener\" target=\"_blank\">many of them</a>, {%  is Nunjucks and {{}} is liquid. You can quite happily swap between templating engines in 11ty, using multiple at once.</p>\n<p>Also, if you are wondering what <code>class=&quot;native-share&quot; style=&quot;display: none;&quot;</code> is all about in the HTML, this is a progressive enhancement for using the native <code>navigator.share</code> browser API. If you are interested in my approach for implementing social sharing, I plan on writing about this... sometime.</p>\n<p>Both config and data files can be NodeJS modules, unlocking the entire JavaScript ecosystem at build time, without passing any cost into users of your site.</p>\n<p>✅ Ability to customize site generation in JavaScript, because that is what I'm most comfortable in.</p>\n<p>It's fair to say that even with the documentation site starting point, I wasn't feeling very confident in where to start to build out my website. That's not a slight on the docs, the docs are great, I just tend to learn best in tutorial based formats. To YouTube I go!</p>\n<h2 id=\"learning-11ty\">Learning 11ty <a class=\"direct-link\" href=\"#learning-11ty\" aria-label=\"learning 11ty\"><span class=\"copy-link\"></span></a></h2>\n<p>After a quick &quot;learn 11ty&quot; search in YouTube I came across the following video:</p>\n<div class=\"video-size\">\n    <div class=\"video-wrapper\">\n        <lite-youtube class=\"video\" videoid=\"j8mJrhhdHWc\" style=\"background-image: url('https://i.ytimg.com/vi/j8mJrhhdHWc/hqdefault.jpg');\">\n            <a rel=\"noopener\" onclick=\"('customElements' in window) && event.preventDefault()\" title=\"Play Video\" class=\"no-js\" target=\"_blank\" href=\"https://youtube.com?w=j8mJrhhdHWc\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\">\n                <g transform=\"translate(-339 -150.484)\">\n                    <path fill=\"var(--White, #fff)\" d=\"M-1978.639,24.261h0a1.555,1.555,0,0,1-1.555-1.551V9.291a1.555,1.555,0,0,1,1.555-1.551,1.527,1.527,0,0,1,.748.2l11.355,6.9a1.538,1.538,0,0,1,.793,1.362,1.526,1.526,0,0,1-.793,1.348l-11.355,6.516A1.52,1.52,0,0,1-1978.639,24.261Z\" transform=\"translate(2329 150.484)\"/>\n                    <path fill=\"var(--Primary, #000)\" d=\"M16.563.563a16,16,0,1,0,16,16A16,16,0,0,0,16.563.563Zm7.465,17.548L12.672,24.627a1.551,1.551,0,0,1-2.3-1.355V9.853a1.552,1.552,0,0,1,2.3-1.355l11.355,6.9A1.553,1.553,0,0,1,24.027,18.111Z\" transform=\"translate(338.438 149.922)\" />\n                </g>\n            </svg>\n        </a>\n        </lite-youtube>\n    </div>\n</div>\n<p>It's a long video, but well worth it, the video format is a really relaxed pair programming session and has the creator of 11ty helping a newbie hack around in 11ty. One of things that I found most impressive with 11ty was that <a href=\"https://twitter.com/jlengstorf\" rel=\"noopener\" target=\"_blank\">Jason</a> was able to just write files and most things just worked.</p>\n<p>I was so excited after this video, I felt like i'd been given superpowers!</p>\n<p><a href=\"https://twitter.com/anyuser/status/1292911029865906177\" rel=\"noopener\" target=\"_blank\">https://twitter.com/anyuser/status/1292911029865906177</a></p>\n<p>One of the best things about the 11ty ecosystem is its curated collection of <a href=\"https://www.11ty.dev/docs/starter/\" rel=\"noopener\" target=\"_blank\">starter projects</a>, these range from simple to very complex, for example by <a href=\"https://github.com/google/eleventy-high-performance-blog\" rel=\"noopener\" target=\"_blank\">incorporating performance optimizations</a>.</p>\n<p>I know it might seem like I'm contradicting myself a bit from earlier, from when I complained about complex scaffolded projects, but here's how I tackled both learning and scaffolding out my own project.</p>\n<ul>\n<li>I recommend starting out with an empty repository, and copying in what you need from other starter projects. The reason for this is you will be able to learn exactly what is already possible, and what all the code in your project means.</li>\n<li>In order to know what to copy, you obviously a good starting point, I recommend starting out with the official <a href=\"https://github.com/11ty/eleventy-base-blog\" rel=\"noopener\" target=\"_blank\">eleventy-base-blog</a> and go through each of the files in turn making sure you understand how they fit in. If you watched the video earlier the pieces should start to fall into place.</li>\n</ul>\n<p>Some of the most important concepts to get to grips with are:</p>\n<ul>\n<li><a href=\"https://www.11ty.dev/docs/layouts/\" rel=\"noopener\" target=\"_blank\">Layouts</a></li>\n<li><a href=\"https://www.11ty.dev/docs/collections/\" rel=\"noopener\" target=\"_blank\">Collections</a></li>\n<li><a href=\"https://www.11ty.dev/docs/pagination/\" rel=\"noopener\" target=\"_blank\">Pagination</a><br>\nThis doesn't just mean next and previous pages, it can mean generating pages from data, pagination is awesome in 11ty.</li>\n<li><a href=\"https://www.11ty.dev/docs/permalinks/\" rel=\"noopener\" target=\"_blank\">Permalinks</a></li>\n<li><a href=\"https://www.11ty.dev/docs/pages-from-data/\" rel=\"noopener\" target=\"_blank\">Data</a></li>\n<li><a href=\"https://www.11ty.dev/docs/filters/\" rel=\"noopener\" target=\"_blank\">Filters</a></li>\n</ul>\n<h2 id=\"a-next-level-11ty-course\">A Next level 11ty course <a class=\"direct-link\" href=\"#a-next-level-11ty-course\" aria-label=\"a next level 11ty course\"><span class=\"copy-link\"></span></a></h2>\n<p>A few days into this project, some drama happened over in React/Gatsby land on twitter, and as a result I came across this amazing course: <a href=\"https://piccalil.li/course/learn-eleventy-from-scratch\" rel=\"noopener\" target=\"_blank\">Learn Eleventy From Scratch</a></p>\n<p>This course is seriously awesome, it's also a stealth CSS course. One thing to note is this is a text based course, which i'd never really done before, but I actually really liked because I was able to move at my own pace. I found that doing this course allowed me to really solidify my understanding of 11ty, so that I was able to bring together influences from various project and tutorials, and change them to work for me, to build out my site.</p>\n<h2 id=\"i-got-to-building\">I got to building <a class=\"direct-link\" href=\"#i-got-to-building\" aria-label=\"i got to building\"><span class=\"copy-link\"></span></a></h2>\n<p>Over the course of a month or two, just using my evenings after my day job and some weekends, through the hell-scape of 2020, I built out <a href=\"https://griffa.dev\">griffa.dev</a>, and had a lot of fun along the way. I won't lie and pretend that everything went smoothly, I get distracted very easily, the first few days working on it went something like this:</p>\n<p><a href=\"https://twitter.com/anyuser/status/1295057860397850625\" rel=\"noopener\" target=\"_blank\">https://twitter.com/anyuser/status/1295057860397850625</a></p>\n<h3 id=\"show-me-the-code\">Show me the code <a class=\"direct-link\" href=\"#show-me-the-code\" aria-label=\"show me the code\"><span class=\"copy-link\"></span></a></h3>\n<p>The source code for my blog is available here: <a href=\"https://github.com/Georgegriff/griffadev/\" rel=\"noopener\" target=\"_blank\">https://github.com/Georgegriff/griffadev/</a></p>\n<p><a href=\"https://github.com/Georgegriff/griffadev/commit/11eb02653485ba6c50eefa72cf89c21e3f16b366\" rel=\"noopener\" target=\"_blank\">The first commit</a> where I scaffolded out my project. You'll notice some of the code is from the base starter and some from the awesome course from <a href=\"https://piccalil.li/course/learn-eleventy-from-scratch/\" rel=\"noopener\" target=\"_blank\">Piccalilli</a> I mentioned earlier, and some from just hacking around and finding what works.</p>\n<p>In the next part in this series I'll go into some detail on how I added &quot;a little&quot; frontend JavaScript as progressive enhancements only, to keep the site as fast as possible.</p>\n",
      "date_published": "2020-10-06T00:00:00+00:00"
    },{
      "id": "https://griffa.dev/posts/using-css-custom-properties-for-color-and-theming/",
      "url": "https://griffa.dev/posts/using-css-custom-properties-for-color-and-theming/",
      "title": "Using css custom properties for color and theming",
      "tags": ["Design","Accessibility","UX"],
      "summary": "I&#39;m by no means a designer, but with a bit of research into color contrast and accessibility, making I was able to build out a design that I was happy with.",
      "content_html": "<p>In the previous post in this series I detailed my approach to research and design, for this building a personal blog series. This time, I'm going to provide some detail on how I approached choosing a color scheme for the site, which next to layout and font, is up there with the most important things to get right on a site.</p>\n<p><figure>\n        <div class=\"img-wrap\" ><img src=\"/images/beau_paint_me.jpg\" alt=\"Picture of cat laying down\">\n        <figcaption>Draw me like one of your french girls.</figcaption>\n      </div>\n      </figure></p>\n<blockquote>\n<p>Oh, I forgot to mention, this site is just an excuse for me to share photos of my cats, the above is Beau, he loves to meow for attention when comes back inside the house.</p>\n</blockquote>\n<h2 id=\"picking-a-color-theme\">Picking a color theme <a class=\"direct-link\" href=\"#picking-a-color-theme\" aria-label=\"picking a color theme\"><span class=\"copy-link\"></span></a></h2>\n<p>Choosing an initial color palette is something that I struggle with, thankfully, there are lots of sites out there for inspiration. One great one is <a href=\"https://colorsinspo.com/\" rel=\"noopener\" target=\"_blank\">colorinspo</a>, a great way do use this site is to have a bit of a play with possible colors schemes to find ideas you like, if you are using a design tool like Adobe XD, you could experiment with colors by duplicating your designs to create variants.</p>\n<div class=\"video-size\">\n    <div class=\"video-wrapper\">\n        <lite-youtube class=\"video\" videoid=\"s9p3nF4rFaU\" style=\"background-image: url('https://i.ytimg.com/vi/s9p3nF4rFaU/hqdefault.jpg');\">\n            <a rel=\"noopener\" onclick=\"('customElements' in window) && event.preventDefault()\" title=\"Play Video\" class=\"no-js\" target=\"_blank\" href=\"https://youtube.com?w=s9p3nF4rFaU\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\">\n                <g transform=\"translate(-339 -150.484)\">\n                    <path fill=\"var(--White, #fff)\" d=\"M-1978.639,24.261h0a1.555,1.555,0,0,1-1.555-1.551V9.291a1.555,1.555,0,0,1,1.555-1.551,1.527,1.527,0,0,1,.748.2l11.355,6.9a1.538,1.538,0,0,1,.793,1.362,1.526,1.526,0,0,1-.793,1.348l-11.355,6.516A1.52,1.52,0,0,1-1978.639,24.261Z\" transform=\"translate(2329 150.484)\"/>\n                    <path fill=\"var(--Primary, #000)\" d=\"M16.563.563a16,16,0,1,0,16,16A16,16,0,0,0,16.563.563Zm7.465,17.548L12.672,24.627a1.551,1.551,0,0,1-2.3-1.355V9.853a1.552,1.552,0,0,1,2.3-1.355l11.355,6.9A1.553,1.553,0,0,1,24.027,18.111Z\" transform=\"translate(338.438 149.922)\" />\n                </g>\n            </svg>\n        </a>\n        </lite-youtube>\n    </div>\n</div>\n<p>The video linked above from <a href=\"https://www.youtube.com/channel/UCVyRiMvfUNMA1UPlDPzG5Ow\" rel=\"noopener\" target=\"_blank\">DesignCourse</a> is a great example of doing exactly that.</p>\n<h2 id=\"using-css-custom-properties\">Using CSS Custom Properties <a class=\"direct-link\" href=\"#using-css-custom-properties\" aria-label=\"using css custom properties\"><span class=\"copy-link\"></span></a></h2>\n<p>When it comes to implementing your theme in code I <em>strongly</em> recommend that you use CSS custom properties, they are supported everywhere that <a href=\"https://caniuse.com/?search=css%20variables\" rel=\"noopener\" target=\"_blank\">matters</a>, and are great way to introduce a variety of colors schemes for your site.</p>\n<p>If you want you can use <a href=\"https://sass-lang.com/\" rel=\"noopener\" target=\"_blank\">SASS</a> too, for example:</p>\n<copy-to-clipboard><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token selector\">body  </span><span class=\"token punctuation\">{</span><br>  <span class=\"token property\">--Primary</span><span class=\"token punctuation\">:</span> #$<span class=\"token punctuation\">{</span>myColor<span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span></code></pre>\n</copy-to-clipboard><blockquote>\n<p>Tip: also use custom properties as fills in your embedded svgs and have those automatically respond to your theme selection!</p>\n</blockquote>\n<p>If you build a site from the ground up with theming in mind, then you can rapidly prototype new experimental color schemes, here's a theme I generated just by having a quick play in chrome. In the picture you can really see the power of using CSS custom properties in everywhere, including in SVG.</p>\n<p><figure>\n        <div class=\"img-wrap\" ><img src=\"/images/custom-theme.png\" alt=\"Picture of settings custom properties in Chrome dev tools\">\n        <figcaption>Experimenting with new color schemes is so easy if you use css custom properties.</figcaption>\n      </div>\n      </figure></p>\n<p>When I use custom properties for theming, I tend to start off with a small set of colors e.g. <em>--Text</em>, <em>--Background</em>, <em>--Primary</em>, <em>--Secondary</em> and expand as needed, for example you might want <em>--Primary50</em> which could be a darker variant of your primary color.<br>\nAs I mentioned, I'm no designer, I don't know any rules around making sure a variable maps perfectly to a shade on a color palette, but I suspect as your site grows you'll start to get a feel for how many colors you need.</p>\n<h2 id=\"choosing-an-accessible-color-scheme\">Choosing an accessible color scheme <a class=\"direct-link\" href=\"#choosing-an-accessible-color-scheme\" aria-label=\"choosing an accessible color scheme\"><span class=\"copy-link\"></span></a></h2>\n<p>The most important aspect of your color choice should be ensuring that you have sufficient color contrast for your text against your background color.<br>\nThis is not just to produce a nice looking design, but to also make sure that it is accessible to everyone.</p>\n<p>You can go about this in many ways, if you like to design in the browser, or just like hacking around in dev tools, I found that using Chrome dev tools for checking color contrast was extremely effective. There are also plugins available in design applications, such as Adobe XD.</p>\n<p><figure>\n        <div class=\"img-wrap\" ><img src=\"/images/chrome-accessibility-popover.png\" alt=\"Chrome dev tools accessibility popover\">\n        <figcaption>Chrome recently added a new fantastic accessibility popover in into devtools when you hover over an element.</figcaption>\n      </div>\n      </figure></p>\n<p>To use chrome to debug color contrast, I open up a random website, inspect an element that contains text e.g. a title, and then set its <code>background</code> and <code>color</code> properties. Dev tools will then provide you with color contrast information.</p>\n<p>When modifying the color you should see a Contrast Ratio:</p>\n<ul>\n<li>🚫 Means the contrast is not good enough.</li>\n<li>✅ Single check mark means it passed AA conformance.</li>\n<li>✅✅ Double check mark means it passes AAA conformance, gold standard level of accessibility.</li>\n<li>Ideally, you should try to target AAA and some suites e.g. government website have to meet this criteria.</li>\n<li>This <a href=\"https://web.dev/color-and-contrast-accessibility/\" rel=\"noopener\" target=\"_blank\">article</a> says it better I ever could.</li>\n</ul>\n<p><figure>\n        <div class=\"img-wrap\" ><img src=\"/images/bad-contrast.png\" alt=\"Picture of chrome dev tools color contrast picker\">\n        <figcaption>This is a terrible color choice, you want to get above the white lines in the color picker.</figcaption>\n      </div>\n      </figure></p>\n<h3 id=\"supporting-dark-and-light-themes-can-be-a-challenge\">Supporting dark and light themes can be a challenge <a class=\"direct-link\" href=\"#supporting-dark-and-light-themes-can-be-a-challenge\" aria-label=\"supporting dark and light themes can be a challenge\"><span class=\"copy-link\"></span></a></h3>\n<p>One of things I knew I wanted to do with my blog site was support a light and dark theme, using the CSS Custom properties technique above this is extremely simple to do, in a later article in this series I will show how to hook up the custom properties into a theme toggle.</p>\n<p>Something, however, that I found quite challenging was find a primary branding accent color that worked in both light and dark theme, as well as being AAA accessible.<br>\nA technique which I found to work quite well is to choose your light theme primary color, and then adding white to the color (move towards white in color picker), to either find a sweet spot that works for both, or to generate an accent color specifically for darker themes. I also found that sticking to neutral (black/white) colors for my text went a long way to making sure I could get accessible text colors.</p>\n<blockquote>\n<p>Tip: It is now possible to automatically check what users color scheme preference is using <a href=\"https://caniuse.com/prefers-color-scheme\" rel=\"noopener\" target=\"_blank\">prefers color scheme</a>, we will explore this later on the series.</p>\n</blockquote>\n<p>When you find colors you are happy with be sure to check them for sufficient contrast against your text colors.</p>\n<p>These the colors I went with for my first iteration:</p>\n<h3 id=\"a-live-demo\">A live demo <a class=\"direct-link\" href=\"#a-live-demo\" aria-label=\"a live demo\"><span class=\"copy-link\"></span></a></h3>\n\n          <live-demo id=css-var-demo>\n          <div contenteditable slot=\"css\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">*</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> black<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">--Primary</span><span class=\"token punctuation\">:</span> #dd0d00<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">--Secondary</span><span class=\"token punctuation\">:</span> #e0dd6f<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><span class=\"token selector\">div</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> white<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">flex-direction</span><span class=\"token punctuation\">:</span> column<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">justify-content</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">align-items</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 1rem<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><span class=\"token selector\">svg</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 50px<span class=\"token punctuation\">;</span><br>  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 50px<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n</div><div contenteditable slot=\"html\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><br>    This content will change<br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">color</span><span class=\"token punctuation\">:</span><span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--Primary<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span>color<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">color</span><span class=\"token punctuation\">:</span><span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--Secondary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><br>      <span class=\"token punctuation\">></span></span>when you change the --Primary or --Secondary<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><br>    <span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>svg</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2000/svg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">viewBox</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0 0 32 32<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>g</span> <span class=\"token attr-name\">transform</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>translate(-339 -150.484)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>path</span><br>        <span class=\"token attr-name\">fill</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>var(--Secondary, #fff)<span class=\"token punctuation\">\"</span></span><br>        <span class=\"token attr-name\">d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>M-1978.639,24.261h0a1.555,1.555,0,0,1-1.555-1.551V9.291a1.555,1.555,0,0,1,1.555-1.551,1.527,1.527,0,0,1,.748.2l11.355,6.9a1.538,1.538,0,0,1,.793,1.362,1.526,1.526,0,0,1-.793,1.348l-11.355,6.516A1.52,1.52,0,0,1-1978.639,24.261Z<span class=\"token punctuation\">\"</span></span><br>        <span class=\"token attr-name\">transform</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>translate(2329 150.484)<span class=\"token punctuation\">\"</span></span><br>      <span class=\"token punctuation\">/></span></span><br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>path</span><br>        <span class=\"token attr-name\">fill</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>var(--Primary, #000)<span class=\"token punctuation\">\"</span></span><br>        <span class=\"token attr-name\">d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>M16.563.563a16,16,0,1,0,16,16A16,16,0,0,0,16.563.563Zm7.465,17.548L12.672,24.627a1.551,1.551,0,0,1-2.3-1.355V9.853a1.552,1.552,0,0,1,2.3-1.355l11.355,6.9A1.553,1.553,0,0,1,24.027,18.111Z<span class=\"token punctuation\">\"</span></span><br>        <span class=\"token attr-name\">transform</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>translate(338.438 149.922)<span class=\"token punctuation\">\"</span></span><br>      <span class=\"token punctuation\">/></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>g</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>svg</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n</div></live-demo><p>Now i'd explored how I chose colors for my personal blog, my next steps involved investigating illustrations, to make my design pop! <a href=\"https://undraw.co/\" rel=\"noopener\" target=\"_blank\">Undraw</a> is an awesome tool for this, however, I strongly recommend making your own illustrations, or heavily customizing illustrations that you find, them make them your own.</p>\n",
      "date_published": "2020-09-09T00:00:00+00:00"
    },{
      "id": "https://griffa.dev/posts/good-research-planning-and-design-is-the-best-foundation-for-starting-a-new-project/",
      "url": "https://griffa.dev/posts/good-research-planning-and-design-is-the-best-foundation-for-starting-a-new-project/",
      "title": "Good research, planning and design is the best foundation for starting a new project",
      "tags": ["Design","Research","11ty"],
      "summary": "When I&#39;ve started side projects in the past, I felt like I dug into code too quickly, without thinking about what I actually was building first, I wanted to try something a bit different this time.",
      "content_html": "<h2 id=\"building-something-for-myself\">Building something for myself <a class=\"direct-link\" href=\"#building-something-for-myself\" aria-label=\"building something for myself\"><span class=\"copy-link\"></span></a></h2>\n<p>I've been working with web technologies for the best part of a decade now, from my first terrible attempts at building websites in tools like <code>Adobe Dreamweaver</code>, to building complex apps in my day jobs, using frontend and backend technologies (a lot of <code>JavaScript</code>).</p>\n<p>However, something I've never had is a place of my own on the internet to just put stuff, so that's what I wanted to build, also it's probably another place I can just post pictures of my cats.<br>\nThis article details some of the first steps that I took along the journey to building <a href=\"https://griffa.dev\">griffa.dev</a>.</p>\n<blockquote>\n<p>It's at this point of writing this blog post I got very distracted, trying to find an appropriate picture. Maybe I should have titled this post: How to not get distracted whilst working on a new project, it even occurred to me to write a component to auto generate a picture of my cats, probably would've been worth it.</p>\n</blockquote>\n<p><figure>\n        <div class=\"img-wrap\" ><img src=\"/images/chewie-macbook.jpg\" alt=\"Picture of my cat, cat in front of Mac book\">\n        <figcaption>This is Chewie, he is a good boy and sure is ready to code.</figcaption>\n      </div>\n      </figure></p>\n<h2 id=\"building-a-personal-blog\">Building a personal blog <a class=\"direct-link\" href=\"#building-a-personal-blog\" aria-label=\"building a personal blog\"><span class=\"copy-link\"></span></a></h2>\n<p>Not very original, I know, but as part of this project I wanted to try and strip things back to basics, escape from the <code>Webpacky Reacty Hook Hell</code> of modern web development, and just build a nice static site.</p>\n<h3 id=\"getting-inspired\">Getting inspired <a class=\"direct-link\" href=\"#getting-inspired\" aria-label=\"getting inspired\"><span class=\"copy-link\"></span></a></h3>\n<p>I watch <code>a lot</code> of YouTube, mostly Gaming related content, but over the years I've watched several programming related channels, one of the best, and most well known, is <a href=\"https://www.youtube.com/channel/UC29ju8bIPH5as8OGnQzwJyA\" rel=\"noopener\" target=\"_blank\">Traversy Media</a>.</p>\n<p>The specific video that got me really inspired to build something myself was a guest video by <a href=\"https://www.youtube.com/channel/UCVyRiMvfUNMA1UPlDPzG5Ow\" rel=\"noopener\" target=\"_blank\">Design Course</a>, another great channel. This video spoke to me because I'm quite happy coding but I've always wanted to brush up on my design skills.</p>\n<div class=\"video-size\">\n    <div class=\"video-wrapper\">\n        <lite-youtube class=\"video\" videoid=\"0JCUH5daCCE\" style=\"background-image: url('https://i.ytimg.com/vi/0JCUH5daCCE/hqdefault.jpg');\">\n            <a rel=\"noopener\" onclick=\"('customElements' in window) && event.preventDefault()\" title=\"Play Video\" class=\"no-js\" target=\"_blank\" href=\"https://youtube.com?w=0JCUH5daCCE\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\">\n                <g transform=\"translate(-339 -150.484)\">\n                    <path fill=\"var(--White, #fff)\" d=\"M-1978.639,24.261h0a1.555,1.555,0,0,1-1.555-1.551V9.291a1.555,1.555,0,0,1,1.555-1.551,1.527,1.527,0,0,1,.748.2l11.355,6.9a1.538,1.538,0,0,1,.793,1.362,1.526,1.526,0,0,1-.793,1.348l-11.355,6.516A1.52,1.52,0,0,1-1978.639,24.261Z\" transform=\"translate(2329 150.484)\"/>\n                    <path fill=\"var(--Primary, #000)\" d=\"M16.563.563a16,16,0,1,0,16,16A16,16,0,0,0,16.563.563Zm7.465,17.548L12.672,24.627a1.551,1.551,0,0,1-2.3-1.355V9.853a1.552,1.552,0,0,1,2.3-1.355l11.355,6.9A1.553,1.553,0,0,1,24.027,18.111Z\" transform=\"translate(338.438 149.922)\" />\n                </g>\n            </svg>\n        </a>\n        </lite-youtube>\n    </div>\n</div>\n<p>The above video, sent me on a bit of a binge of <a href=\"https://www.youtube.com/channel/UCVyRiMvfUNMA1UPlDPzG5Ow\" rel=\"noopener\" target=\"_blank\">Design Course</a> content, it all helped me a lot with focusing on good design, instead of getting bogged down by code.</p>\n<p>Some of the principles the videos taught me:</p>\n<ul>\n<li><strong><em>Color</em></strong>: choosing a good color scheme is important, but even more important than that colors should be accessible i.e. sufficiently contrasting. This can be very tricky when implementing both light and dark themes!</li>\n<li><strong><em>Importance of whitespace</em></strong>: having appropriate spacing around elements.</li>\n<li><strong><em>Visual hierarchy</em></strong>: ensuring things are appropriately sized based on importance.</li>\n<li><strong><em>Typography</em></strong>: choosing a good font, unless you know what you are doing, going for a nice san-serif font will be the best bet for the web.</li>\n<li><strong><em>Scale</em></strong>: ensuring items are appropriately sized on the screen, in relation to other elements.</li>\n<li><strong><em>Alignment</em></strong>: this is a real important one, its important to ensure that padding and margins and spacing is consistent throughout a design.</li>\n</ul>\n<p>This doesn't really do the videos justice, I can only recommend watching them:</p>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=0JCUH5daCCE\" rel=\"noopener\" target=\"_blank\">UI Design For Coders</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=6AQUHnkOQl0\" rel=\"noopener\" target=\"_blank\">9 UI Design Techniques That Will Last Forever!</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=_J1Le-4aXhE\" rel=\"noopener\" target=\"_blank\">9 Tips for Becoming a GREAT UI Designer</a></li>\n</ul>\n<h3 id=\"planning-things-out\">Planning things out <a class=\"direct-link\" href=\"#planning-things-out\" aria-label=\"planning things out\"><span class=\"copy-link\"></span></a></h3>\n<p>A quick one, but I found setting up a simple project on Github really helped me with tracking my progress and ideas, it also gave a nice feeling moving things over to done.<br>\nI made a label for <code>posts</code>, which meant it was easy for me to track ideas for things I wanted to write about.</p>\n<p><figure>\n        <div class=\"img-wrap\" ><img src=\"/images/github-project.png\" alt=\"Picture of my Github project board\">\n        <figcaption>A snapshot of my Github project.</figcaption>\n      </div>\n      </figure></p>\n<p>I also made heavy use of a Notes app throughout the project, which really helped with not just a todo list, but documenting any bugs I found whilst using the site.</p>\n<p><figure>\n        <div class=\"img-wrap\" ><img src=\"/images/notes.png\" alt=\"Picture of my Notes app\">\n        <figcaption>Track completed and uncompleted checkbox tasks.</figcaption>\n      </div>\n      </figure></p>\n<p>There was a another recent guest video on <a href=\"https://www.youtube.com/channel/UC29ju8bIPH5as8OGnQzwJyA\" rel=\"noopener\" target=\"_blank\">Traversy Media</a> which describes some of the techniques I have used for planning out this project, as well as some other great advice.</p>\n<div class=\"video-size\">\n    <div class=\"video-wrapper\">\n        <lite-youtube class=\"video\" videoid=\"Z_gjlIji8hU\" style=\"background-image: url('https://i.ytimg.com/vi/Z_gjlIji8hU/hqdefault.jpg');\">\n            <a rel=\"noopener\" onclick=\"('customElements' in window) && event.preventDefault()\" title=\"Play Video\" class=\"no-js\" target=\"_blank\" href=\"https://youtube.com?w=Z_gjlIji8hU\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\">\n                <g transform=\"translate(-339 -150.484)\">\n                    <path fill=\"var(--White, #fff)\" d=\"M-1978.639,24.261h0a1.555,1.555,0,0,1-1.555-1.551V9.291a1.555,1.555,0,0,1,1.555-1.551,1.527,1.527,0,0,1,.748.2l11.355,6.9a1.538,1.538,0,0,1,.793,1.362,1.526,1.526,0,0,1-.793,1.348l-11.355,6.516A1.52,1.52,0,0,1-1978.639,24.261Z\" transform=\"translate(2329 150.484)\"/>\n                    <path fill=\"var(--Primary, #000)\" d=\"M16.563.563a16,16,0,1,0,16,16A16,16,0,0,0,16.563.563Zm7.465,17.548L12.672,24.627a1.551,1.551,0,0,1-2.3-1.355V9.853a1.552,1.552,0,0,1,2.3-1.355l11.355,6.9A1.553,1.553,0,0,1,24.027,18.111Z\" transform=\"translate(338.438 149.922)\" />\n                </g>\n            </svg>\n        </a>\n        </lite-youtube>\n    </div>\n</div>\n<h3 id=\"technology-choices\">Technology choices <a class=\"direct-link\" href=\"#technology-choices\" aria-label=\"technology choices\"><span class=\"copy-link\"></span></a></h3>\n<p>I don't want technology choice to be a focus of this post, I wanted to focus on things I did to plan and design my project.<br>\nHowever, it's a good idea to search around for prior art, or libraries/frameworks you might want to consider.</p>\n<blockquote>\n<p>You should be using a static site generator for a personal blog, starting out with a frontend JavaScript framework, is more than likely just a bad idea.</p>\n</blockquote>\n<h4 id=\"static-site-generators\">Static site generators <a class=\"direct-link\" href=\"#static-site-generators\" aria-label=\"static site generators\"><span class=\"copy-link\"></span></a></h4>\n<ul>\n<li>Gatsby JS: React-based. I write enough React at work,and quite frankly I'm sick of the complexity it forces upon you.</li>\n<li>Jekyll: Powers Github Pages, built in Ruby.</li>\n<li>11ty (Eleventy): Inspired by Jekyll, NodeJS based, supports a lot of templating languages.</li>\n<li>Lots more out there (I went with Eleventy)</li>\n</ul>\n<h4 id=\"other-sites-i-investigated-for-inspiration\">Other sites I investigated for inspiration <a class=\"direct-link\" href=\"#other-sites-i-investigated-for-inspiration\" aria-label=\"other sites i investigated for inspiration\"><span class=\"copy-link\"></span></a></h4>\n<ul>\n<li><a href=\"https://web.dev/\" rel=\"noopener\" target=\"_blank\">web.dev</a> - Web development blog/learning site by Google, built using Eleventy and Web Components, <a href=\"https://web.dev/how-we-build-webdev-and-use-web-components/\" rel=\"noopener\" target=\"_blank\">they posted about their architecture here</a>.</li>\n<li><a href=\"https://dev.to\" rel=\"noopener\" target=\"_blank\">dev.to</a> - Really awesome blogging site, not sure as to their architecture</li>\n<li><a href=\"https://open-wc.org/\" rel=\"noopener\" target=\"_blank\">open-wc</a> - Awesome Web Component Recommendations, built using Eleventy.</li>\n<li>There's also Medium, I guess.</li>\n</ul>\n<h3 id=\"designing-a-layout\">Designing a layout <a class=\"direct-link\" href=\"#designing-a-layout\" aria-label=\"designing a layout\"><span class=\"copy-link\"></span></a></h3>\n<p>The subject of the article mentions:</p>\n<blockquote>\n<p>I felt like I dug into code too quickly, without thinking about what I actually was building first, I wanted to try something a bit different this time.</p>\n</blockquote>\n<p>By this, I mean I've tried diving straight into code and designing in the browser, for me, this hasn't worked, I'm sure it works for other people.<br>\nI think the main reason that this does not work for me is that I can get far too distracted too easily, especially when coding, focusing on things that don't really matter, instead I choose to use a design tool.</p>\n<h4 id=\"designing-in-adobe-xd\">Designing in Adobe XD <a class=\"direct-link\" href=\"#designing-in-adobe-xd\" aria-label=\"designing in adobe xd\"><span class=\"copy-link\"></span></a></h4>\n<p>I looked around for what design tools are out there, the big one most people seem to recommend is Sketch, or React hipsters suggesting Figma.<br>\nFor my work, I chose Adobe XD, why - <code>it has a free version!</code>.</p>\n<p>This was the very first time i'd used Adobe XD and I got on extremely well with it, I think if you have used any of the other Adobe products e.g. Photoshop or Illustrator, you will get to grips pretty fast, especially since some of the shortcuts are the same!</p>\n<p>If you want to try it out I can only recommend (again) watching <a href=\"https://www.youtube.com/watch?v=0JCUH5daCCE\" rel=\"noopener\" target=\"_blank\">UI Design For Coders</a> Adobe XD is used there, watching this video gave me most of the tools I needed to build out a design.</p>\n<p>After first day of research and design I had a first pass at a mobile layout for a potential blog site.</p>\n<p><figure>\n        <div class=\"img-wrap\" ><img src=\"/images/design-day1.png\" alt=\"Picture of initial designs for blogging site\">\n        <figcaption>The first pass at designs for griffa.dev</figcaption>\n      </div>\n      </figure></p>\n<p>In the next post I'll explore how I iterated on the above design, implementing dark and light themes, using CSS variables.</p>\n",
      "date_published": "2020-09-08T00:00:00+00:00"
    }
  ]
}
